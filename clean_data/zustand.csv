repo,commit,commit_msg,file,left_diff,right_diff,merged_diff
pmndrs_zustand,a379a958b620a9b6dc81ac253eab98e06138a22f,Merge branch 'main' into v5,package.json,"-  ""version"": ""4.5.2"",
+  ""version"": ""5.0.0-beta.0"",
+  ""publishConfig"": {
+    ""tag"": ""next""
+  },
-    ""<4.0"": {
+    "">=4.5"": {
-        ""ts3.4/*""
+        ""esm/*""
-        ""ts3.4/*""
+        ""*""
+      ]
+    },
+    ""*"": {
+      ""esm/*"": [
+        ""ts_version_4.5_and_above_is_required.d.ts""
+      ],
+      ""*"": [
+        ""ts_version_4.5_and_above_is_required.d.ts""
-  ""files"": [
-    ""**""
-  ],
-      ""module"": {
-        ""types"": ""./esm/index.d.ts"",
-        ""default"": ""./esm/index.js""
-      },
-    ""./vanilla"": {
+    ""./*"": {
-        ""types"": ""./esm/vanilla.d.mts"",
-        ""default"": ""./esm/vanilla.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/vanilla.d.ts"",
-        ""default"": ""./esm/vanilla.js""
+        ""types"": ""./esm/*.d.mts"",
+        ""default"": ""./esm/*.mjs""
-        ""types"": ""./vanilla.d.ts"",
-        ""default"": ""./vanilla.js""
-      }
-    },
-    ""./middleware"": {
-      ""import"": {
-        ""types"": ""./esm/middleware.d.mts"",
-        ""default"": ""./esm/middleware.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/middleware.d.ts"",
-        ""default"": ""./esm/middleware.js""
-      },
-      ""default"": {
-        ""types"": ""./middleware.d.ts"",
-        ""default"": ""./middleware.js""
-      }
-    },
-    ""./middleware/immer"": {
-      ""import"": {
-        ""types"": ""./esm/middleware/immer.d.mts"",
-        ""default"": ""./esm/middleware/immer.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/middleware/immer.d.ts"",
-        ""default"": ""./esm/middleware/immer.js""
-      },
-      ""default"": {
-        ""types"": ""./middleware/immer.d.ts"",
-        ""default"": ""./middleware/immer.js""
-      }
-    },
-    ""./shallow"": {
-      ""import"": {
-        ""types"": ""./esm/shallow.d.mts"",
-        ""default"": ""./esm/shallow.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/shallow.d.ts"",
-        ""default"": ""./esm/shallow.js""
-      },
-      ""default"": {
-        ""types"": ""./shallow.d.ts"",
-        ""default"": ""./shallow.js""
-      }
-    },
-    ""./vanilla/shallow"": {
-      ""import"": {
-        ""types"": ""./esm/vanilla/shallow.d.mts"",
-        ""default"": ""./esm/vanilla/shallow.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/vanilla/shallow.d.ts"",
-        ""default"": ""./esm/vanilla/shallow.js""
-      },
-      ""default"": {
-        ""types"": ""./vanilla/shallow.d.ts"",
-        ""default"": ""./vanilla/shallow.js""
-      }
-    },
-    ""./react/shallow"": {
-      ""import"": {
-        ""types"": ""./esm/react/shallow.d.mts"",
-        ""default"": ""./esm/react/shallow.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/react/shallow.d.ts"",
-        ""default"": ""./esm/react/shallow.js""
-      },
-      ""default"": {
-        ""types"": ""./react/shallow.d.ts"",
-        ""default"": ""./react/shallow.js""
-      }
-    },
-    ""./traditional"": {
-      ""import"": {
-        ""types"": ""./esm/traditional.d.mts"",
-        ""default"": ""./esm/traditional.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/traditional.d.ts"",
-        ""default"": ""./esm/traditional.js""
-      },
-      ""default"": {
-        ""types"": ""./traditional.d.ts"",
-        ""default"": ""./traditional.js""
-      }
-    },
-    ""./context"": {
-      ""import"": {
-        ""types"": ""./esm/context.d.mts"",
-        ""default"": ""./esm/context.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/context.d.ts"",
-        ""default"": ""./esm/context.js""
-      },
-      ""default"": {
-        ""types"": ""./context.d.ts"",
-        ""default"": ""./context.js""
+        ""types"": ""./*.d.ts"",
+        ""default"": ""./*.js""
+  ""files"": [
+    ""**""
+  ],
+    ""build:react"": ""rollup -c --config-react"",
-    ""build:context"": ""rollup -c --config-context"",
-    ""postbuild"": ""pnpm patch-d-ts && pnpm copy && pnpm patch-esm-ts"",
+    ""postbuild"": ""pnpm patch-d-ts && pnpm copy && pnpm patch-old-ts && pnpm patch-esm-ts"",
-    ""copy"": ""shx cp -r dist/src/* dist/esm && shx cp -r dist/src/* dist && shx rm -rf dist/src && shx rm -rf dist/{src,tests} && downlevel-dts dist dist/ts3.4 && shx cp package.json readme.md LICENSE dist && json -I -f dist/package.json -e \""this.private=false; this.devDependencies=undefined; this.optionalDependencies=undefined; this.scripts=undefined; this.prettier=undefined;\"""",
-    ""patch-esm-ts"": ""node -e \""require('shelljs').find('dist/esm/**/*.d.ts').forEach(f=>{var f2=f.replace(/\\.ts$/,'.mts');require('fs').copyFileSync(f,f2);require('shelljs').sed('-i',/ from '(\\.[^']+)';$/,' from \\'\\$1.mjs\\';',f2);require('shelljs').sed('-i',/^declare module '(\\.[^']+)'/,'declare module \\'\\$1.mjs\\'',f2)})\""""
+    ""copy"": ""shx cp -r dist/src/* dist/esm && shx cp -r dist/src/* dist && shx rm -rf dist/src && shx rm -rf dist/{src,tests} && shx cp package.json readme.md LICENSE dist && json -I -f dist/package.json -e \""this.private=false; this.devDependencies=undefined; this.optionalDependencies=undefined; this.scripts=undefined; this.prettier=undefined;\"""",
+    ""patch-old-ts"": ""shx touch dist/ts_version_4.5_and_above_is_required.d.ts"",
+    ""patch-esm-ts"": ""node -e \""require('shelljs').find('dist/esm/**/*.d.ts').forEach(f=>{var f2=f.replace(/\\.ts$/,'.mts');require('fs').renameSync(f,f2);require('shelljs').sed('-i',/ from '(\\.[^']+)';$/,' from \\'\\$1.mjs\\';',f2);require('shelljs').sed('-i',/^declare module '(\\.[^']+)'/,'declare module \\'\\$1.mjs\\'',f2)})\""""
-    ""node"": "">=12.7.0""
+    ""node"": "">=12.20.0""
-  ""dependencies"": {
-    ""use-sync-external-store"": ""1.2.0""
-  },
-    ""@babel/core"": ""^7.24.6"",
-    ""@babel/plugin-external-helpers"": ""^7.24.6"",
-    ""@babel/plugin-transform-react-jsx"": ""^7.24.6"",
-    ""@babel/plugin-transform-runtime"": ""^7.24.6"",
-    ""@babel/plugin-transform-typescript"": ""^7.24.6"",
-    ""@babel/preset-env"": ""^7.24.6"",
-    ""@rollup/plugin-babel"": ""^6.0.4"",
-    ""@rollup/plugin-terser"": ""^0.4.4"",
-    ""downlevel-dts"": ""^0.11.0"",
+    ""use-sync-external-store"": ""^1.2.2"",
-    ""@types/react"": "">=16.8"",
+    ""@types/react"": "">=18.0.0"",
-    ""react"": "">=16.8""
+    ""react"": "">=18.0.0"",
+    ""use-sync-external-store"": "">=1.2.0""
+    },
+    ""use-sync-external-store"": {
+      ""optional"": true","-  ""version"": ""4.5.2"",
+  ""version"": ""4.5.3"",
-    ""@babel/core"": ""^7.24.6"",
-    ""@babel/plugin-external-helpers"": ""^7.24.6"",
-    ""@babel/plugin-transform-react-jsx"": ""^7.24.6"",
-    ""@babel/plugin-transform-runtime"": ""^7.24.6"",
-    ""@babel/plugin-transform-typescript"": ""^7.24.6"",
-    ""@babel/preset-env"": ""^7.24.6"",
+    ""@babel/core"": ""^7.24.7"",
+    ""@babel/plugin-external-helpers"": ""^7.24.7"",
+    ""@babel/plugin-transform-react-jsx"": ""^7.24.7"",
+    ""@babel/plugin-transform-runtime"": ""^7.24.7"",
+    ""@babel/plugin-transform-typescript"": ""^7.24.7"",
+    ""@babel/preset-env"": ""^7.24.7"",
-    ""@rollup/plugin-replace"": ""^5.0.6"",
+    ""@rollup/plugin-replace"": ""^5.0.7"",
-    ""@types/node"": ""^20.14.1"",
+    ""@types/node"": ""^20.14.9"",
-    ""@typescript-eslint/eslint-plugin"": ""^7.12.0"",
-    ""@typescript-eslint/parser"": ""^7.12.0"",
+    ""@typescript-eslint/eslint-plugin"": ""^7.14.1"",
+    ""@typescript-eslint/parser"": ""^7.14.1"",
-    ""esbuild"": ""^0.21.4"",
+    ""esbuild"": ""^0.21.5"",
-    ""eslint-plugin-react"": ""^7.34.2"",
+    ""eslint-plugin-react"": ""^7.34.3"",
+    ""eslint-plugin-react-compiler"": ""0.0.0-experimental-0998c1e-20240625"",
-    ""prettier"": ""^3.3.0"",
-    ""react"": ""^19.0.0-rc.0"",
-    ""react-dom"": ""^19.0.0-rc.0"",
+    ""prettier"": ""^3.3.2"",
+    ""react"": ""19.0.0-rc.0"",
+    ""react-dom"": ""19.0.0-rc.0"",
-    ""typescript"": ""^5.4.5"",
+    ""typescript"": ""^5.5.2"",","-  ""version"": ""4.5.2"",
+  ""version"": ""5.0.0-beta.0"",
+  ""publishConfig"": {
+    ""tag"": ""next""
+  },
-    ""<4.0"": {
+    "">=4.5"": {
-        ""ts3.4/*""
+        ""esm/*""
-        ""ts3.4/*""
+        ""*""
+      ]
+    },
+    ""*"": {
+      ""esm/*"": [
+        ""ts_version_4.5_and_above_is_required.d.ts""
+      ],
+      ""*"": [
+        ""ts_version_4.5_and_above_is_required.d.ts""
-  ""files"": [
-    ""**""
-  ],
-      ""module"": {
-        ""types"": ""./esm/index.d.ts"",
-        ""default"": ""./esm/index.js""
-      },
-    ""./vanilla"": {
+    ""./*"": {
-        ""types"": ""./esm/vanilla.d.mts"",
-        ""default"": ""./esm/vanilla.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/vanilla.d.ts"",
-        ""default"": ""./esm/vanilla.js""
+        ""types"": ""./esm/*.d.mts"",
+        ""default"": ""./esm/*.mjs""
-        ""types"": ""./vanilla.d.ts"",
-        ""default"": ""./vanilla.js""
-      }
-    },
-    ""./middleware"": {
-      ""import"": {
-        ""types"": ""./esm/middleware.d.mts"",
-        ""default"": ""./esm/middleware.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/middleware.d.ts"",
-        ""default"": ""./esm/middleware.js""
-      },
-      ""default"": {
-        ""types"": ""./middleware.d.ts"",
-        ""default"": ""./middleware.js""
-      }
-    },
-    ""./middleware/immer"": {
-      ""import"": {
-        ""types"": ""./esm/middleware/immer.d.mts"",
-        ""default"": ""./esm/middleware/immer.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/middleware/immer.d.ts"",
-        ""default"": ""./esm/middleware/immer.js""
-      },
-      ""default"": {
-        ""types"": ""./middleware/immer.d.ts"",
-        ""default"": ""./middleware/immer.js""
-      }
-    },
-    ""./shallow"": {
-      ""import"": {
-        ""types"": ""./esm/shallow.d.mts"",
-        ""default"": ""./esm/shallow.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/shallow.d.ts"",
-        ""default"": ""./esm/shallow.js""
-      },
-      ""default"": {
-        ""types"": ""./shallow.d.ts"",
-        ""default"": ""./shallow.js""
-      }
-    },
-    ""./vanilla/shallow"": {
-      ""import"": {
-        ""types"": ""./esm/vanilla/shallow.d.mts"",
-        ""default"": ""./esm/vanilla/shallow.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/vanilla/shallow.d.ts"",
-        ""default"": ""./esm/vanilla/shallow.js""
-      },
-      ""default"": {
-        ""types"": ""./vanilla/shallow.d.ts"",
-        ""default"": ""./vanilla/shallow.js""
-      }
-    },
-    ""./react/shallow"": {
-      ""import"": {
-        ""types"": ""./esm/react/shallow.d.mts"",
-        ""default"": ""./esm/react/shallow.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/react/shallow.d.ts"",
-        ""default"": ""./esm/react/shallow.js""
-      },
-      ""default"": {
-        ""types"": ""./react/shallow.d.ts"",
-        ""default"": ""./react/shallow.js""
-      }
-    },
-    ""./traditional"": {
-      ""import"": {
-        ""types"": ""./esm/traditional.d.mts"",
-        ""default"": ""./esm/traditional.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/traditional.d.ts"",
-        ""default"": ""./esm/traditional.js""
-      },
-      ""default"": {
-        ""types"": ""./traditional.d.ts"",
-        ""default"": ""./traditional.js""
-      }
-    },
-    ""./context"": {
-      ""import"": {
-        ""types"": ""./esm/context.d.mts"",
-        ""default"": ""./esm/context.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/context.d.ts"",
-        ""default"": ""./esm/context.js""
-      },
-      ""default"": {
-        ""types"": ""./context.d.ts"",
-        ""default"": ""./context.js""
+        ""types"": ""./*.d.ts"",
+        ""default"": ""./*.js""
+  ""files"": [
+    ""**""
+  ],
+    ""build:react"": ""rollup -c --config-react"",
-    ""build:context"": ""rollup -c --config-context"",
-    ""postbuild"": ""pnpm patch-d-ts && pnpm copy && pnpm patch-esm-ts"",
+    ""postbuild"": ""pnpm patch-d-ts && pnpm copy && pnpm patch-old-ts && pnpm patch-esm-ts"",
-    ""copy"": ""shx cp -r dist/src/* dist/esm && shx cp -r dist/src/* dist && shx rm -rf dist/src && shx rm -rf dist/{src,tests} && downlevel-dts dist dist/ts3.4 && shx cp package.json readme.md LICENSE dist && json -I -f dist/package.json -e \""this.private=false; this.devDependencies=undefined; this.optionalDependencies=undefined; this.scripts=undefined; this.prettier=undefined;\"""",
-    ""patch-esm-ts"": ""node -e \""require('shelljs').find('dist/esm/**/*.d.ts').forEach(f=>{var f2=f.replace(/\\.ts$/,'.mts');require('fs').copyFileSync(f,f2);require('shelljs').sed('-i',/ from '(\\.[^']+)';$/,' from \\'\\$1.mjs\\';',f2);require('shelljs').sed('-i',/^declare module '(\\.[^']+)'/,'declare module \\'\\$1.mjs\\'',f2)})\""""
+    ""copy"": ""shx cp -r dist/src/* dist/esm && shx cp -r dist/src/* dist && shx rm -rf dist/src && shx rm -rf dist/{src,tests} && shx cp package.json readme.md LICENSE dist && json -I -f dist/package.json -e \""this.private=false; this.devDependencies=undefined; this.optionalDependencies=undefined; this.scripts=undefined; this.prettier=undefined;\"""",
+    ""patch-old-ts"": ""shx touch dist/ts_version_4.5_and_above_is_required.d.ts"",
+    ""patch-esm-ts"": ""node -e \""require('shelljs').find('dist/esm/**/*.d.ts').forEach(f=>{var f2=f.replace(/\\.ts$/,'.mts');require('fs').renameSync(f,f2);require('shelljs').sed('-i',/ from '(\\.[^']+)';$/,' from \\'\\$1.mjs\\';',f2);require('shelljs').sed('-i',/^declare module '(\\.[^']+)'/,'declare module \\'\\$1.mjs\\'',f2)})\""""
-    ""node"": "">=12.7.0""
+    ""node"": "">=12.20.0""
-  ""dependencies"": {
-    ""use-sync-external-store"": ""1.2.0""
-  },
-    ""@babel/core"": ""^7.24.6"",
-    ""@babel/plugin-external-helpers"": ""^7.24.6"",
-    ""@babel/plugin-transform-react-jsx"": ""^7.24.6"",
-    ""@babel/plugin-transform-runtime"": ""^7.24.6"",
-    ""@babel/plugin-transform-typescript"": ""^7.24.6"",
-    ""@babel/preset-env"": ""^7.24.6"",
-    ""@rollup/plugin-babel"": ""^6.0.4"",
-    ""@rollup/plugin-terser"": ""^0.4.4"",
-    ""@types/node"": ""^20.14.1"",
+    ""@types/node"": ""^20.14.9"",
-    ""@typescript-eslint/eslint-plugin"": ""^7.12.0"",
-    ""@typescript-eslint/parser"": ""^7.12.0"",
+    ""@typescript-eslint/eslint-plugin"": ""^7.14.1"",
+    ""@typescript-eslint/parser"": ""^7.14.1"",
-    ""downlevel-dts"": ""^0.11.0"",
-    ""esbuild"": ""^0.21.4"",
+    ""esbuild"": ""^0.21.5"",
-    ""eslint-plugin-react"": ""^7.34.2"",
+    ""eslint-plugin-react"": ""^7.34.3"",
+    ""eslint-plugin-react-compiler"": ""0.0.0-experimental-0998c1e-20240625"",
-    ""prettier"": ""^3.3.0"",
-    ""react"": ""^19.0.0-rc.0"",
-    ""react-dom"": ""^19.0.0-rc.0"",
+    ""prettier"": ""^3.3.2"",
+    ""react"": ""19.0.0-rc.0"",
+    ""react-dom"": ""19.0.0-rc.0"",
-    ""typescript"": ""^5.4.5"",
+    ""typescript"": ""^5.5.2"",
+    ""use-sync-external-store"": ""^1.2.2"",
-    ""@types/react"": "">=16.8"",
+    ""@types/react"": "">=18.0.0"",
-    ""react"": "">=16.8""
+    ""react"": "">=18.0.0"",
+    ""use-sync-external-store"": "">=1.2.0""
+    },
+    ""use-sync-external-store"": {
+      ""optional"": true"
pmndrs_zustand,a379a958b620a9b6dc81ac253eab98e06138a22f,Merge branch 'main' into v5,src/react.ts,"-// import { useDebugValue } from 'react'
-// import { useSyncExternalStoreWithSelector } from 'use-sync-external-store/shim/with-selector'
-// Those don't work in ESM, because React libs are CJS only.
+// import { useDebugValue, useSyncExternalStore } from 'react'
+// That doesn't work in ESM, because React libs are CJS only.
-// eslint-disable-next-line import/extensions
-import useSyncExternalStoreExports from 'use-sync-external-store/shim/with-selector'
-const { useDebugValue } = ReactExports
-const { useSyncExternalStoreWithSelector } = useSyncExternalStoreExports
+const { useDebugValue, useSyncExternalStore } = ReactExports
-type WithReact<S extends ReadonlyStoreApi<unknown>> = S & {
-  /** @deprecated please use api.getInitialState() */
-  getServerState?: () => ExtractState<S>
-}
+const identity = <T>(arg: T): T => arg
+export function useStore<S extends StoreApi<unknown>>(api: S): ExtractState<S>
-let didWarnAboutEqualityFn = false
-
-const identity = <T>(arg: T): T => arg
-
-export function useStore<S extends WithReact<StoreApi<unknown>>>(
-  api: S,
-): ExtractState<S>
-
-export function useStore<S extends WithReact<StoreApi<unknown>>, U>(
+export function useStore<S extends StoreApi<unknown>, U>(
-/**
- * @deprecated The usage with three arguments is deprecated. Use `useStoreWithEqualityFn` from 'zustand/traditional'. The usage with one or two arguments is not deprecated.
- * https://github.com/pmndrs/zustand/discussions/1937
- */
-export function useStore<S extends WithReact<StoreApi<unknown>>, U>(
-  api: S,
-  selector: (state: ExtractState<S>) => U,
-  equalityFn: ((a: U, b: U) => boolean) | undefined,
-): U
-
-  api: WithReact<StoreApi<TState>>,
+  api: StoreApi<TState>,
-  equalityFn?: (a: StateSlice, b: StateSlice) => boolean,
-  if (
-    import.meta.env?.MODE !== 'production' &&
-    equalityFn &&
-    !didWarnAboutEqualityFn
-  ) {
-    console.warn(
-      ""[DEPRECATED] Use `createWithEqualityFn` instead of `create` or use `useStoreWithEqualityFn` instead of `useStore`. They can be imported from 'zustand/traditional'. https://github.com/pmndrs/zustand/discussions/1937"",
-    )
-    didWarnAboutEqualityFn = true
-  }
-  const slice = useSyncExternalStoreWithSelector(
+  const slice = useSyncExternalStore(
-    api.getState,
-    api.getServerState || api.getInitialState,
-    selector,
-    equalityFn,
+    () => selector(api.getState()),
+    () => selector(api.getInitialState()),
-export type UseBoundStore<S extends WithReact<ReadonlyStoreApi<unknown>>> = {
+export type UseBoundStore<S extends ReadonlyStoreApi<unknown>> = {
-  /**
-   * @deprecated Use `createWithEqualityFn` from 'zustand/traditional'
-   */
-  <U>(
-    selector: (state: ExtractState<S>) => U,
-    equalityFn: (a: U, b: U) => boolean,
-  ): U
-  /**
-   * @deprecated Use `useStore` hook to bind store
-   */
-  <S extends StoreApi<unknown>>(store: S): UseBoundStore<S>
-  if (
-    import.meta.env?.MODE !== 'production' &&
-    typeof createState !== 'function'
-  ) {
-    console.warn(
-      ""[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`."",
-    )
-  }
-  const api =
-    typeof createState === 'function' ? createStore(createState) : createState
+  const api = createStore(createState)
-  const useBoundStore: any = (selector?: any, equalityFn?: any) =>
-    useStore(api, selector, equalityFn)
+  const useBoundStore: any = (selector?: any) => useStore(api, selector)
-
-/**
- * @deprecated Use `import { create } from 'zustand'`
- */
-export default ((createState: any) => {
-  if (import.meta.env?.MODE !== 'production') {
-    console.warn(
-      ""[DEPRECATED] Default export is deprecated. Instead use `import { create } from 'zustand'`."",
-    )
-  }
-  return create(createState)
-}) as Create","-type ReadonlyStoreApi<T> = Pick<StoreApi<T>, 'getState' | 'subscribe'>
+type ReadonlyStoreApi<T> = Pick<
+  StoreApi<T>,
+  'getState' | 'getInitialState' | 'subscribe'
+>
-export function useStore<S extends WithReact<StoreApi<unknown>>>(
+export function useStore<S extends WithReact<ReadonlyStoreApi<unknown>>>(
-export function useStore<S extends WithReact<StoreApi<unknown>>, U>(
+export function useStore<S extends WithReact<ReadonlyStoreApi<unknown>>, U>(
-export function useStore<S extends WithReact<StoreApi<unknown>>, U>(
+export function useStore<S extends WithReact<ReadonlyStoreApi<unknown>>, U>(
-  api: WithReact<StoreApi<TState>>,
+  api: WithReact<ReadonlyStoreApi<TState>>,","-// import { useDebugValue } from 'react'
-// import { useSyncExternalStoreWithSelector } from 'use-sync-external-store/shim/with-selector'
-// Those don't work in ESM, because React libs are CJS only.
+// import { useDebugValue, useSyncExternalStore } from 'react'
+// That doesn't work in ESM, because React libs are CJS only.
-// eslint-disable-next-line import/extensions
-import useSyncExternalStoreExports from 'use-sync-external-store/shim/with-selector'
-const { useDebugValue } = ReactExports
-const { useSyncExternalStoreWithSelector } = useSyncExternalStoreExports
+const { useDebugValue, useSyncExternalStore } = ReactExports
-type ReadonlyStoreApi<T> = Pick<StoreApi<T>, 'getState' | 'subscribe'>
-
-type WithReact<S extends ReadonlyStoreApi<unknown>> = S & {
-  /** @deprecated please use api.getInitialState() */
-  getServerState?: () => ExtractState<S>
-}
-
-let didWarnAboutEqualityFn = false
+type ReadonlyStoreApi<T> = Pick<
+  StoreApi<T>,
+  'getState' | 'getInitialState' | 'subscribe'
+>
+export function useStore<S extends ReadonlyStoreApi<unknown>>(api: S): ExtractState<S>
-export function useStore<S extends WithReact<StoreApi<unknown>>>(
-  api: S,
-): ExtractState<S>
-
-export function useStore<S extends WithReact<StoreApi<unknown>>, U>(
+export function useStore<S extends ReadonlyStoreApi<unknown>, U>(
-/**
- * @deprecated The usage with three arguments is deprecated. Use `useStoreWithEqualityFn` from 'zustand/traditional'. The usage with one or two arguments is not deprecated.
- * https://github.com/pmndrs/zustand/discussions/1937
- */
-export function useStore<S extends WithReact<StoreApi<unknown>>, U>(
-  api: S,
-  selector: (state: ExtractState<S>) => U,
-  equalityFn: ((a: U, b: U) => boolean) | undefined,
-): U
-
-  api: WithReact<StoreApi<TState>>,
+  api: ReadonlyStoreApi<TState>,
-  equalityFn?: (a: StateSlice, b: StateSlice) => boolean,
-  if (
-    import.meta.env?.MODE !== 'production' &&
-    equalityFn &&
-    !didWarnAboutEqualityFn
-  ) {
-    console.warn(
-      ""[DEPRECATED] Use `createWithEqualityFn` instead of `create` or use `useStoreWithEqualityFn` instead of `useStore`. They can be imported from 'zustand/traditional'. https://github.com/pmndrs/zustand/discussions/1937"",
-    )
-    didWarnAboutEqualityFn = true
-  }
-  const slice = useSyncExternalStoreWithSelector(
+  const slice = useSyncExternalStore(
-    api.getState,
-    api.getServerState || api.getInitialState,
-    selector,
-    equalityFn,
+    () => selector(api.getState()),
+    () => selector(api.getInitialState()),
-export type UseBoundStore<S extends WithReact<ReadonlyStoreApi<unknown>>> = {
+export type UseBoundStore<S extends ReadonlyStoreApi<unknown>> = {
-  /**
-   * @deprecated Use `createWithEqualityFn` from 'zustand/traditional'
-   */
-  <U>(
-    selector: (state: ExtractState<S>) => U,
-    equalityFn: (a: U, b: U) => boolean,
-  ): U
-  /**
-   * @deprecated Use `useStore` hook to bind store
-   */
-  <S extends StoreApi<unknown>>(store: S): UseBoundStore<S>
-  if (
-    import.meta.env?.MODE !== 'production' &&
-    typeof createState !== 'function'
-  ) {
-    console.warn(
-      ""[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`."",
-    )
-  }
-  const api =
-    typeof createState === 'function' ? createStore(createState) : createState
+  const api = createStore(createState)
-  const useBoundStore: any = (selector?: any, equalityFn?: any) =>
-    useStore(api, selector, equalityFn)
+  const useBoundStore: any = (selector?: any) => useStore(api, selector)
-
-/**
- * @deprecated Use `import { create } from 'zustand'`
- */
-export default ((createState: any) => {
-  if (import.meta.env?.MODE !== 'production') {
-    console.warn(
-      ""[DEPRECATED] Default export is deprecated. Instead use `import { create } from 'zustand'`."",
-    )
-  }
-  return create(createState)
-}) as Create"
pmndrs_zustand,a379a958b620a9b6dc81ac253eab98e06138a22f,Merge branch 'main' into v5,src/traditional.ts,"-type WithReact<S extends ReadonlyStoreApi<unknown>> = S & {
-  /** @deprecated please use api.getInitialState() */
-  getServerState?: () => ExtractState<S>
-}
-
-export function useStoreWithEqualityFn<S extends WithReact<StoreApi<unknown>>>(
+export function useStoreWithEqualityFn<S extends StoreApi<unknown>>(
-export function useStoreWithEqualityFn<
-  S extends WithReact<StoreApi<unknown>>,
-  U,
->(
+export function useStoreWithEqualityFn<S extends StoreApi<unknown>, U>(
-  api: WithReact<StoreApi<TState>>,
+  api: StoreApi<TState>,
-    api.getServerState || api.getInitialState,
+    api.getInitialState,
-export type UseBoundStoreWithEqualityFn<
-  S extends WithReact<ReadonlyStoreApi<unknown>>,
-> = {
+export type UseBoundStoreWithEqualityFn<S extends ReadonlyStoreApi<unknown>> = {","-type ReadonlyStoreApi<T> = Pick<StoreApi<T>, 'getState' | 'subscribe'>
+type ReadonlyStoreApi<T> = Pick<
+  StoreApi<T>,
+  'getState' | 'getInitialState' | 'subscribe'
+>
-export function useStoreWithEqualityFn<S extends WithReact<StoreApi<unknown>>>(
-  api: S,
-): ExtractState<S>
+export function useStoreWithEqualityFn<
+  S extends WithReact<ReadonlyStoreApi<unknown>>,
+>(api: S): ExtractState<S>
-  S extends WithReact<StoreApi<unknown>>,
+  S extends WithReact<ReadonlyStoreApi<unknown>>,
-  api: WithReact<StoreApi<TState>>,
+  api: WithReact<ReadonlyStoreApi<TState>>,","-type ReadonlyStoreApi<T> = Pick<StoreApi<T>, 'getState' | 'subscribe'>
-
-type WithReact<S extends ReadonlyStoreApi<unknown>> = S & {
-  /** @deprecated please use api.getInitialState() */
-  getServerState?: () => ExtractState<S>
-}
+type ReadonlyStoreApi<T> = Pick<
+  StoreApi<T>,
+  'getState' | 'getInitialState' | 'subscribe'
+>
-export function useStoreWithEqualityFn<S extends WithReact<StoreApi<unknown>>>(
+export function useStoreWithEqualityFn<S extends ReadonlyStoreApi<unknown>>(
-export function useStoreWithEqualityFn<
-  S extends WithReact<StoreApi<unknown>>,
-  U,
->(
+export function useStoreWithEqualityFn<S extends ReadonlyStoreApi<unknown>, U>(
-  api: WithReact<StoreApi<TState>>,
+  api: ReadonlyStoreApi<TState>,
-    api.getServerState || api.getInitialState,
+    api.getInitialState,
-export type UseBoundStoreWithEqualityFn<
-  S extends WithReact<ReadonlyStoreApi<unknown>>,
-> = {
+export type UseBoundStoreWithEqualityFn<S extends ReadonlyStoreApi<unknown>> = {"
pmndrs_zustand,2726e1e758d235ff409e5ac25dee11b099278493,Merge branch 'main' into v5,package.json,"-  ""version"": ""4.5.2"",
+  ""version"": ""5.0.0-beta.0"",
+  ""publishConfig"": {
+    ""tag"": ""next""
+  },
-    ""<4.0"": {
+    "">=4.5"": {
-        ""ts3.4/*""
+        ""esm/*""
-        ""ts3.4/*""
+        ""*""
+      ]
+    },
+    ""*"": {
+      ""esm/*"": [
+        ""ts_version_4.5_and_above_is_required.d.ts""
+      ],
+      ""*"": [
+        ""ts_version_4.5_and_above_is_required.d.ts""
-  ""files"": [
-    ""**""
-  ],
-      ""module"": {
-        ""types"": ""./esm/index.d.ts"",
-        ""default"": ""./esm/index.js""
-      },
-    ""./vanilla"": {
+    ""./*"": {
-        ""types"": ""./esm/vanilla.d.mts"",
-        ""default"": ""./esm/vanilla.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/vanilla.d.ts"",
-        ""default"": ""./esm/vanilla.js""
+        ""types"": ""./esm/*.d.mts"",
+        ""default"": ""./esm/*.mjs""
-        ""types"": ""./vanilla.d.ts"",
-        ""default"": ""./vanilla.js""
-      }
-    },
-    ""./middleware"": {
-      ""import"": {
-        ""types"": ""./esm/middleware.d.mts"",
-        ""default"": ""./esm/middleware.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/middleware.d.ts"",
-        ""default"": ""./esm/middleware.js""
-      },
-      ""default"": {
-        ""types"": ""./middleware.d.ts"",
-        ""default"": ""./middleware.js""
-      }
-    },
-    ""./middleware/immer"": {
-      ""import"": {
-        ""types"": ""./esm/middleware/immer.d.mts"",
-        ""default"": ""./esm/middleware/immer.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/middleware/immer.d.ts"",
-        ""default"": ""./esm/middleware/immer.js""
-      },
-      ""default"": {
-        ""types"": ""./middleware/immer.d.ts"",
-        ""default"": ""./middleware/immer.js""
-      }
-    },
-    ""./shallow"": {
-      ""import"": {
-        ""types"": ""./esm/shallow.d.mts"",
-        ""default"": ""./esm/shallow.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/shallow.d.ts"",
-        ""default"": ""./esm/shallow.js""
-      },
-      ""default"": {
-        ""types"": ""./shallow.d.ts"",
-        ""default"": ""./shallow.js""
-      }
-    },
-    ""./vanilla/shallow"": {
-      ""import"": {
-        ""types"": ""./esm/vanilla/shallow.d.mts"",
-        ""default"": ""./esm/vanilla/shallow.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/vanilla/shallow.d.ts"",
-        ""default"": ""./esm/vanilla/shallow.js""
-      },
-      ""default"": {
-        ""types"": ""./vanilla/shallow.d.ts"",
-        ""default"": ""./vanilla/shallow.js""
-      }
-    },
-    ""./react/shallow"": {
-      ""import"": {
-        ""types"": ""./esm/react/shallow.d.mts"",
-        ""default"": ""./esm/react/shallow.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/react/shallow.d.ts"",
-        ""default"": ""./esm/react/shallow.js""
-      },
-      ""default"": {
-        ""types"": ""./react/shallow.d.ts"",
-        ""default"": ""./react/shallow.js""
-      }
-    },
-    ""./traditional"": {
-      ""import"": {
-        ""types"": ""./esm/traditional.d.mts"",
-        ""default"": ""./esm/traditional.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/traditional.d.ts"",
-        ""default"": ""./esm/traditional.js""
-      },
-      ""default"": {
-        ""types"": ""./traditional.d.ts"",
-        ""default"": ""./traditional.js""
-      }
-    },
-    ""./context"": {
-      ""import"": {
-        ""types"": ""./esm/context.d.mts"",
-        ""default"": ""./esm/context.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/context.d.ts"",
-        ""default"": ""./esm/context.js""
-      },
-      ""default"": {
-        ""types"": ""./context.d.ts"",
-        ""default"": ""./context.js""
+        ""types"": ""./*.d.ts"",
+        ""default"": ""./*.js""
+  ""files"": [
+    ""**""
+  ],
+    ""build:react"": ""rollup -c --config-react"",
-    ""build:context"": ""rollup -c --config-context"",
-    ""postbuild"": ""pnpm patch-d-ts && pnpm copy && pnpm patch-esm-ts"",
+    ""postbuild"": ""pnpm patch-d-ts && pnpm copy && pnpm patch-old-ts && pnpm patch-esm-ts"",
-    ""copy"": ""shx cp -r dist/src/* dist/esm && shx cp -r dist/src/* dist && shx rm -rf dist/src && shx rm -rf dist/{src,tests} && downlevel-dts dist dist/ts3.4 && shx cp package.json readme.md LICENSE dist && json -I -f dist/package.json -e \""this.private=false; this.devDependencies=undefined; this.optionalDependencies=undefined; this.scripts=undefined; this.prettier=undefined;\"""",
-    ""patch-esm-ts"": ""node -e \""require('shelljs').find('dist/esm/**/*.d.ts').forEach(f=>{var f2=f.replace(/\\.ts$/,'.mts');require('fs').copyFileSync(f,f2);require('shelljs').sed('-i',/ from '(\\.[^']+)';$/,' from \\'\\$1.mjs\\';',f2);require('shelljs').sed('-i',/^declare module '(\\.[^']+)'/,'declare module \\'\\$1.mjs\\'',f2)})\""""
+    ""copy"": ""shx cp -r dist/src/* dist/esm && shx cp -r dist/src/* dist && shx rm -rf dist/src && shx rm -rf dist/{src,tests} && shx cp package.json readme.md LICENSE dist && json -I -f dist/package.json -e \""this.private=false; this.devDependencies=undefined; this.optionalDependencies=undefined; this.scripts=undefined; this.prettier=undefined;\"""",
+    ""patch-old-ts"": ""shx touch dist/ts_version_4.5_and_above_is_required.d.ts"",
+    ""patch-esm-ts"": ""node -e \""require('shelljs').find('dist/esm/**/*.d.ts').forEach(f=>{var f2=f.replace(/\\.ts$/,'.mts');require('fs').renameSync(f,f2);require('shelljs').sed('-i',/ from '(\\.[^']+)';$/,' from \\'\\$1.mjs\\';',f2);require('shelljs').sed('-i',/^declare module '(\\.[^']+)'/,'declare module \\'\\$1.mjs\\'',f2)})\""""
-    ""node"": "">=12.7.0""
+    ""node"": "">=12.20.0""
-  ""dependencies"": {
-    ""use-sync-external-store"": ""1.2.0""
-  },
-    ""@babel/core"": ""^7.24.5"",
-    ""@babel/plugin-external-helpers"": ""^7.24.1"",
-    ""@babel/plugin-transform-react-jsx"": ""^7.23.4"",
-    ""@babel/plugin-transform-runtime"": ""^7.24.3"",
-    ""@babel/plugin-transform-typescript"": ""^7.24.5"",
-    ""@babel/preset-env"": ""^7.24.5"",
-    ""@rollup/plugin-babel"": ""^6.0.4"",
-    ""@rollup/plugin-terser"": ""^0.4.4"",
-    ""downlevel-dts"": ""^0.11.0"",
+    ""use-sync-external-store"": ""^1.2.2"",
-    ""@types/react"": "">=16.8"",
+    ""@types/react"": "">=18.0.0"",
-    ""react"": "">=16.8""
+    ""react"": "">=18.0.0"",
+    ""use-sync-external-store"": "">=1.2.0""
+    },
+    ""use-sync-external-store"": {
+      ""optional"": true","-    ""@babel/core"": ""^7.24.5"",
-    ""@babel/plugin-external-helpers"": ""^7.24.1"",
-    ""@babel/plugin-transform-react-jsx"": ""^7.23.4"",
-    ""@babel/plugin-transform-runtime"": ""^7.24.3"",
-    ""@babel/plugin-transform-typescript"": ""^7.24.5"",
-    ""@babel/preset-env"": ""^7.24.5"",
+    ""@babel/core"": ""^7.24.6"",
+    ""@babel/plugin-external-helpers"": ""^7.24.6"",
+    ""@babel/plugin-transform-react-jsx"": ""^7.24.6"",
+    ""@babel/plugin-transform-runtime"": ""^7.24.6"",
+    ""@babel/plugin-transform-typescript"": ""^7.24.6"",
+    ""@babel/preset-env"": ""^7.24.6"",
-    ""@rollup/plugin-replace"": ""^5.0.5"",
+    ""@rollup/plugin-replace"": ""^5.0.6"",
-    ""@testing-library/react"": ""^15.0.7"",
-    ""@types/node"": ""^20.12.12"",
-    ""@types/react"": ""^18.3.2"",
+    ""@testing-library/react"": ""^16.0.0"",
+    ""@types/node"": ""^20.14.1"",
+    ""@types/react"": ""^18.3.3"",
-    ""@typescript-eslint/eslint-plugin"": ""^7.10.0"",
-    ""@typescript-eslint/parser"": ""^7.10.0"",
+    ""@typescript-eslint/eslint-plugin"": ""^7.12.0"",
+    ""@typescript-eslint/parser"": ""^7.12.0"",
-    ""esbuild"": ""^0.21.3"",
+    ""esbuild"": ""^0.21.4"",
-    ""eslint-plugin-react"": ""^7.34.1"",
+    ""eslint-plugin-react"": ""^7.34.2"",
-    ""jsdom"": ""^24.0.0"",
+    ""jsdom"": ""^24.1.0"",
-    ""prettier"": ""^3.2.5"",
-    ""react"": ""19.0.0-rc-81c5ff2e04-20240521"",
-    ""react-dom"": ""19.0.0-rc-81c5ff2e04-20240521"",
+    ""prettier"": ""^3.3.0"",
+    ""react"": ""^19.0.0-rc.0"",
+    ""react-dom"": ""^19.0.0-rc.0"",
-    ""rollup"": ""^4.17.2"",
+    ""rollup"": ""^4.18.0"",","-  ""version"": ""4.5.2"",
+  ""version"": ""5.0.0-beta.0"",
+  ""publishConfig"": {
+    ""tag"": ""next""
+  },
-    ""<4.0"": {
+    "">=4.5"": {
-        ""ts3.4/*""
+        ""esm/*""
-        ""ts3.4/*""
+        ""*""
+      ]
+    },
+    ""*"": {
+      ""esm/*"": [
+        ""ts_version_4.5_and_above_is_required.d.ts""
+      ],
+      ""*"": [
+        ""ts_version_4.5_and_above_is_required.d.ts""
-  ""files"": [
-    ""**""
-  ],
-      ""module"": {
-        ""types"": ""./esm/index.d.ts"",
-        ""default"": ""./esm/index.js""
-      },
-    ""./vanilla"": {
+    ""./*"": {
-        ""types"": ""./esm/vanilla.d.mts"",
-        ""default"": ""./esm/vanilla.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/vanilla.d.ts"",
-        ""default"": ""./esm/vanilla.js""
+        ""types"": ""./esm/*.d.mts"",
+        ""default"": ""./esm/*.mjs""
-        ""types"": ""./vanilla.d.ts"",
-        ""default"": ""./vanilla.js""
-      }
-    },
-    ""./middleware"": {
-      ""import"": {
-        ""types"": ""./esm/middleware.d.mts"",
-        ""default"": ""./esm/middleware.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/middleware.d.ts"",
-        ""default"": ""./esm/middleware.js""
-      },
-      ""default"": {
-        ""types"": ""./middleware.d.ts"",
-        ""default"": ""./middleware.js""
-      }
-    },
-    ""./middleware/immer"": {
-      ""import"": {
-        ""types"": ""./esm/middleware/immer.d.mts"",
-        ""default"": ""./esm/middleware/immer.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/middleware/immer.d.ts"",
-        ""default"": ""./esm/middleware/immer.js""
-      },
-      ""default"": {
-        ""types"": ""./middleware/immer.d.ts"",
-        ""default"": ""./middleware/immer.js""
-      }
-    },
-    ""./shallow"": {
-      ""import"": {
-        ""types"": ""./esm/shallow.d.mts"",
-        ""default"": ""./esm/shallow.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/shallow.d.ts"",
-        ""default"": ""./esm/shallow.js""
-      },
-      ""default"": {
-        ""types"": ""./shallow.d.ts"",
-        ""default"": ""./shallow.js""
-      }
-    },
-    ""./vanilla/shallow"": {
-      ""import"": {
-        ""types"": ""./esm/vanilla/shallow.d.mts"",
-        ""default"": ""./esm/vanilla/shallow.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/vanilla/shallow.d.ts"",
-        ""default"": ""./esm/vanilla/shallow.js""
-      },
-      ""default"": {
-        ""types"": ""./vanilla/shallow.d.ts"",
-        ""default"": ""./vanilla/shallow.js""
-      }
-    },
-    ""./react/shallow"": {
-      ""import"": {
-        ""types"": ""./esm/react/shallow.d.mts"",
-        ""default"": ""./esm/react/shallow.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/react/shallow.d.ts"",
-        ""default"": ""./esm/react/shallow.js""
-      },
-      ""default"": {
-        ""types"": ""./react/shallow.d.ts"",
-        ""default"": ""./react/shallow.js""
-      }
-    },
-    ""./traditional"": {
-      ""import"": {
-        ""types"": ""./esm/traditional.d.mts"",
-        ""default"": ""./esm/traditional.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/traditional.d.ts"",
-        ""default"": ""./esm/traditional.js""
-      },
-      ""default"": {
-        ""types"": ""./traditional.d.ts"",
-        ""default"": ""./traditional.js""
-      }
-    },
-    ""./context"": {
-      ""import"": {
-        ""types"": ""./esm/context.d.mts"",
-        ""default"": ""./esm/context.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/context.d.ts"",
-        ""default"": ""./esm/context.js""
-      },
-      ""default"": {
-        ""types"": ""./context.d.ts"",
-        ""default"": ""./context.js""
+        ""types"": ""./*.d.ts"",
+        ""default"": ""./*.js""
+  ""files"": [
+    ""**""
+  ],
+    ""build:react"": ""rollup -c --config-react"",
-    ""build:context"": ""rollup -c --config-context"",
-    ""postbuild"": ""pnpm patch-d-ts && pnpm copy && pnpm patch-esm-ts"",
+    ""postbuild"": ""pnpm patch-d-ts && pnpm copy && pnpm patch-old-ts && pnpm patch-esm-ts"",
-    ""copy"": ""shx cp -r dist/src/* dist/esm && shx cp -r dist/src/* dist && shx rm -rf dist/src && shx rm -rf dist/{src,tests} && downlevel-dts dist dist/ts3.4 && shx cp package.json readme.md LICENSE dist && json -I -f dist/package.json -e \""this.private=false; this.devDependencies=undefined; this.optionalDependencies=undefined; this.scripts=undefined; this.prettier=undefined;\"""",
-    ""patch-esm-ts"": ""node -e \""require('shelljs').find('dist/esm/**/*.d.ts').forEach(f=>{var f2=f.replace(/\\.ts$/,'.mts');require('fs').copyFileSync(f,f2);require('shelljs').sed('-i',/ from '(\\.[^']+)';$/,' from \\'\\$1.mjs\\';',f2);require('shelljs').sed('-i',/^declare module '(\\.[^']+)'/,'declare module \\'\\$1.mjs\\'',f2)})\""""
+    ""copy"": ""shx cp -r dist/src/* dist/esm && shx cp -r dist/src/* dist && shx rm -rf dist/src && shx rm -rf dist/{src,tests} && shx cp package.json readme.md LICENSE dist && json -I -f dist/package.json -e \""this.private=false; this.devDependencies=undefined; this.optionalDependencies=undefined; this.scripts=undefined; this.prettier=undefined;\"""",
+    ""patch-old-ts"": ""shx touch dist/ts_version_4.5_and_above_is_required.d.ts"",
+    ""patch-esm-ts"": ""node -e \""require('shelljs').find('dist/esm/**/*.d.ts').forEach(f=>{var f2=f.replace(/\\.ts$/,'.mts');require('fs').renameSync(f,f2);require('shelljs').sed('-i',/ from '(\\.[^']+)';$/,' from \\'\\$1.mjs\\';',f2);require('shelljs').sed('-i',/^declare module '(\\.[^']+)'/,'declare module \\'\\$1.mjs\\'',f2)})\""""
-    ""node"": "">=12.7.0""
+    ""node"": "">=12.20.0""
-  ""dependencies"": {
-    ""use-sync-external-store"": ""1.2.0""
-  },
-    ""@babel/core"": ""^7.24.5"",
-    ""@babel/plugin-external-helpers"": ""^7.24.1"",
-    ""@babel/plugin-transform-react-jsx"": ""^7.23.4"",
-    ""@babel/plugin-transform-runtime"": ""^7.24.3"",
-    ""@babel/plugin-transform-typescript"": ""^7.24.5"",
-    ""@babel/preset-env"": ""^7.24.5"",
-    ""@rollup/plugin-babel"": ""^6.0.4"",
-    ""@rollup/plugin-replace"": ""^5.0.5"",
-    ""@rollup/plugin-terser"": ""^0.4.4"",
+    ""@rollup/plugin-replace"": ""^5.0.6"",
-    ""@testing-library/react"": ""^15.0.7"",
-    ""@types/node"": ""^20.12.12"",
-    ""@types/react"": ""^18.3.2"",
+    ""@testing-library/react"": ""^16.0.0"",
+    ""@types/node"": ""^20.14.1"",
+    ""@types/react"": ""^18.3.3"",
-    ""@typescript-eslint/eslint-plugin"": ""^7.10.0"",
-    ""@typescript-eslint/parser"": ""^7.10.0"",
+    ""@typescript-eslint/eslint-plugin"": ""^7.12.0"",
+    ""@typescript-eslint/parser"": ""^7.12.0"",
-    ""downlevel-dts"": ""^0.11.0"",
-    ""esbuild"": ""^0.21.3"",
+    ""esbuild"": ""^0.21.4"",
-    ""eslint-plugin-react"": ""^7.34.1"",
+    ""eslint-plugin-react"": ""^7.34.2"",
-    ""jsdom"": ""^24.0.0"",
+    ""jsdom"": ""^24.1.0"",
-    ""prettier"": ""^3.2.5"",
-    ""react"": ""19.0.0-rc-81c5ff2e04-20240521"",
-    ""react-dom"": ""19.0.0-rc-81c5ff2e04-20240521"",
+    ""prettier"": ""^3.3.0"",
+    ""react"": ""^19.0.0-rc.0"",
+    ""react-dom"": ""^19.0.0-rc.0"",
-    ""rollup"": ""^4.17.2"",
+    ""rollup"": ""^4.18.0"",
+    ""use-sync-external-store"": ""^1.2.2"",
-    ""@types/react"": "">=16.8"",
+    ""@types/react"": "">=18.0.0"",
-    ""react"": "">=16.8""
+    ""react"": "">=18.0.0"",
+    ""use-sync-external-store"": "">=1.2.0""
+    },
+    ""use-sync-external-store"": {
+      ""optional"": true"
pmndrs_zustand,4de1d1ff29692041e8ff994738bc806748a68fc1,Merge branch 'main' into v5,package.json,"-  ""version"": ""4.5.2"",
+  ""version"": ""5.0.0-alpha.6"",
+  ""publishConfig"": {
+    ""tag"": ""next""
+  },
-    ""<4.0"": {
+    "">=4.5"": {
-        ""ts3.4/*""
+        ""esm/*""
-        ""ts3.4/*""
+        ""*""
+      ]
+    },
+    ""*"": {
+      ""esm/*"": [
+        ""ts_version_4.5_and_above_is_required.d.ts""
+      ],
+      ""*"": [
+        ""ts_version_4.5_and_above_is_required.d.ts""
-  ""files"": [
-    ""**""
-  ],
-      ""module"": {
-        ""types"": ""./esm/index.d.ts"",
-        ""default"": ""./esm/index.js""
-      },
-    ""./vanilla"": {
+    ""./*"": {
-        ""types"": ""./esm/vanilla.d.mts"",
-        ""default"": ""./esm/vanilla.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/vanilla.d.ts"",
-        ""default"": ""./esm/vanilla.js""
+        ""types"": ""./esm/*.d.mts"",
+        ""default"": ""./esm/*.mjs""
-        ""types"": ""./vanilla.d.ts"",
-        ""default"": ""./vanilla.js""
-      }
-    },
-    ""./middleware"": {
-      ""import"": {
-        ""types"": ""./esm/middleware.d.mts"",
-        ""default"": ""./esm/middleware.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/middleware.d.ts"",
-        ""default"": ""./esm/middleware.js""
-      },
-      ""default"": {
-        ""types"": ""./middleware.d.ts"",
-        ""default"": ""./middleware.js""
-      }
-    },
-    ""./middleware/immer"": {
-      ""import"": {
-        ""types"": ""./esm/middleware/immer.d.mts"",
-        ""default"": ""./esm/middleware/immer.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/middleware/immer.d.ts"",
-        ""default"": ""./esm/middleware/immer.js""
-      },
-      ""default"": {
-        ""types"": ""./middleware/immer.d.ts"",
-        ""default"": ""./middleware/immer.js""
-      }
-    },
-    ""./shallow"": {
-      ""import"": {
-        ""types"": ""./esm/shallow.d.mts"",
-        ""default"": ""./esm/shallow.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/shallow.d.ts"",
-        ""default"": ""./esm/shallow.js""
-      },
-      ""default"": {
-        ""types"": ""./shallow.d.ts"",
-        ""default"": ""./shallow.js""
-      }
-    },
-    ""./vanilla/shallow"": {
-      ""import"": {
-        ""types"": ""./esm/vanilla/shallow.d.mts"",
-        ""default"": ""./esm/vanilla/shallow.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/vanilla/shallow.d.ts"",
-        ""default"": ""./esm/vanilla/shallow.js""
-      },
-      ""default"": {
-        ""types"": ""./vanilla/shallow.d.ts"",
-        ""default"": ""./vanilla/shallow.js""
-      }
-    },
-    ""./react/shallow"": {
-      ""import"": {
-        ""types"": ""./esm/react/shallow.d.mts"",
-        ""default"": ""./esm/react/shallow.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/react/shallow.d.ts"",
-        ""default"": ""./esm/react/shallow.js""
-      },
-      ""default"": {
-        ""types"": ""./react/shallow.d.ts"",
-        ""default"": ""./react/shallow.js""
-      }
-    },
-    ""./traditional"": {
-      ""import"": {
-        ""types"": ""./esm/traditional.d.mts"",
-        ""default"": ""./esm/traditional.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/traditional.d.ts"",
-        ""default"": ""./esm/traditional.js""
-      },
-      ""default"": {
-        ""types"": ""./traditional.d.ts"",
-        ""default"": ""./traditional.js""
-      }
-    },
-    ""./context"": {
-      ""import"": {
-        ""types"": ""./esm/context.d.mts"",
-        ""default"": ""./esm/context.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/context.d.ts"",
-        ""default"": ""./esm/context.js""
-      },
-      ""default"": {
-        ""types"": ""./context.d.ts"",
-        ""default"": ""./context.js""
+        ""types"": ""./*.d.ts"",
+        ""default"": ""./*.js""
+  ""files"": [
+    ""**""
+  ],
+    ""build:react"": ""rollup -c --config-react"",
-    ""build:context"": ""rollup -c --config-context"",
-    ""postbuild"": ""pnpm patch-d-ts && pnpm copy && pnpm patch-esm-ts"",
+    ""postbuild"": ""pnpm patch-d-ts && pnpm copy && pnpm patch-old-ts && pnpm patch-esm-ts"",
-    ""copy"": ""shx cp -r dist/src/* dist/esm && shx cp -r dist/src/* dist && shx rm -rf dist/src && shx rm -rf dist/{src,tests} && downlevel-dts dist dist/ts3.4 && shx cp package.json readme.md LICENSE dist && json -I -f dist/package.json -e \""this.private=false; this.devDependencies=undefined; this.optionalDependencies=undefined; this.scripts=undefined; this.prettier=undefined;\"""",
-    ""patch-esm-ts"": ""node -e \""require('shelljs').find('dist/esm/**/*.d.ts').forEach(f=>{var f2=f.replace(/\\.ts$/,'.mts');require('fs').copyFileSync(f,f2);require('shelljs').sed('-i',/ from '(\\.[^']+)';$/,' from \\'\\$1.mjs\\';',f2);require('shelljs').sed('-i',/^declare module '(\\.[^']+)'/,'declare module \\'\\$1.mjs\\'',f2)})\""""
+    ""copy"": ""shx cp -r dist/src/* dist/esm && shx cp -r dist/src/* dist && shx rm -rf dist/src && shx rm -rf dist/{src,tests} && shx cp package.json readme.md LICENSE dist && json -I -f dist/package.json -e \""this.private=false; this.devDependencies=undefined; this.optionalDependencies=undefined; this.scripts=undefined; this.prettier=undefined;\"""",
+    ""patch-old-ts"": ""shx touch dist/ts_version_4.5_and_above_is_required.d.ts"",
+    ""patch-esm-ts"": ""node -e \""require('shelljs').find('dist/esm/**/*.d.ts').forEach(f=>{var f2=f.replace(/\\.ts$/,'.mts');require('fs').renameSync(f,f2);require('shelljs').sed('-i',/ from '(\\.[^']+)';$/,' from \\'\\$1.mjs\\';',f2);require('shelljs').sed('-i',/^declare module '(\\.[^']+)'/,'declare module \\'\\$1.mjs\\'',f2)})\""""
-    ""node"": "">=12.7.0""
+    ""node"": "">=12.20.0""
-  ""dependencies"": {
-    ""use-sync-external-store"": ""1.2.0""
-  },
-    ""@babel/core"": ""^7.24.0"",
-    ""@babel/plugin-external-helpers"": ""^7.23.3"",
-    ""@babel/plugin-transform-react-jsx"": ""^7.23.4"",
-    ""@babel/plugin-transform-runtime"": ""^7.24.0"",
-    ""@babel/plugin-transform-typescript"": ""^7.23.6"",
-    ""@babel/preset-env"": ""^7.24.0"",
-    ""@rollup/plugin-babel"": ""^6.0.4"",
-    ""@rollup/plugin-terser"": ""^0.4.4"",
-    ""downlevel-dts"": ""^0.11.0"",
+    ""use-sync-external-store"": ""^1.2.0"",
-    ""@types/react"": "">=16.8"",
+    ""@types/react"": "">=18.0.0"",
-    ""react"": "">=16.8""
+    ""react"": "">=18.0.0"",
+    ""use-sync-external-store"": "">=1.2.0""
+    },
+    ""use-sync-external-store"": {
+      ""optional"": true","-    ""test:spec"": ""vitest"",
+    ""test:spec"": ""vitest run"",
-    ""@babel/core"": ""^7.24.0"",
-    ""@babel/plugin-external-helpers"": ""^7.23.3"",
+    ""@babel/core"": ""^7.24.5"",
+    ""@babel/plugin-external-helpers"": ""^7.24.1"",
-    ""@babel/plugin-transform-runtime"": ""^7.24.0"",
-    ""@babel/plugin-transform-typescript"": ""^7.23.6"",
-    ""@babel/preset-env"": ""^7.24.0"",
+    ""@babel/plugin-transform-runtime"": ""^7.24.3"",
+    ""@babel/plugin-transform-typescript"": ""^7.24.5"",
+    ""@babel/preset-env"": ""^7.24.5"",
-    ""@testing-library/react"": ""^14.2.1"",
-    ""@types/node"": ""^20.11.24"",
-    ""@types/react"": ""^18.2.61"",
-    ""@types/react-dom"": ""^18.2.19"",
+    ""@testing-library/react"": ""^15.0.7"",
+    ""@types/node"": ""^20.12.12"",
+    ""@types/react"": ""^18.3.2"",
+    ""@types/react-dom"": ""^18.3.0"",
-    ""@typescript-eslint/eslint-plugin"": ""^7.1.0"",
-    ""@typescript-eslint/parser"": ""^7.1.0"",
-    ""@vitest/coverage-v8"": ""^1.4.0"",
-    ""@vitest/ui"": ""^1.4.0"",
+    ""@typescript-eslint/eslint-plugin"": ""^7.10.0"",
+    ""@typescript-eslint/parser"": ""^7.10.0"",
+    ""@vitest/coverage-v8"": ""^1.6.0"",
+    ""@vitest/ui"": ""^1.6.0"",
-    ""esbuild"": ""^0.20.1"",
-    ""eslint"": ""^8.57.0"",
+    ""esbuild"": ""^0.21.3"",
+    ""eslint"": ""8.57.0"",
-    ""eslint-plugin-react"": ""^7.33.2"",
-    ""eslint-plugin-react-hooks"": ""^4.6.0"",
-    ""eslint-plugin-vitest"": ""^0.3.22"",
-    ""immer"": ""^10.0.3"",
+    ""eslint-plugin-react"": ""^7.34.1"",
+    ""eslint-plugin-react-hooks"": ""^4.6.2"",
+    ""eslint-plugin-vitest"": ""^0.5.4"",
+    ""immer"": ""^10.1.1"",
-    ""react"": ""^18.2.0"",
-    ""react-dom"": ""^18.2.0"",
+    ""react"": ""19.0.0-rc-81c5ff2e04-20240521"",
+    ""react-dom"": ""19.0.0-rc-81c5ff2e04-20240521"",
-    ""rollup"": ""^4.12.0"",
+    ""rollup"": ""^4.17.2"",
-    ""typescript"": ""^5.3.3"",
-    ""vitest"": ""^1.4.0""
+    ""typescript"": ""^5.4.5"",
+    ""vitest"": ""^1.6.0""","-  ""version"": ""4.5.2"",
+  ""version"": ""5.0.0-alpha.6"",
+  ""publishConfig"": {
+    ""tag"": ""next""
+  },
-    ""<4.0"": {
+    "">=4.5"": {
-        ""ts3.4/*""
+        ""esm/*""
-        ""ts3.4/*""
+        ""*""
+      ]
+    },
+    ""*"": {
+      ""esm/*"": [
+        ""ts_version_4.5_and_above_is_required.d.ts""
+      ],
+      ""*"": [
+        ""ts_version_4.5_and_above_is_required.d.ts""
-  ""files"": [
-    ""**""
-  ],
-      ""module"": {
-        ""types"": ""./esm/index.d.ts"",
-        ""default"": ""./esm/index.js""
-      },
-    ""./vanilla"": {
+    ""./*"": {
-        ""types"": ""./esm/vanilla.d.mts"",
-        ""default"": ""./esm/vanilla.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/vanilla.d.ts"",
-        ""default"": ""./esm/vanilla.js""
+        ""types"": ""./esm/*.d.mts"",
+        ""default"": ""./esm/*.mjs""
-        ""types"": ""./vanilla.d.ts"",
-        ""default"": ""./vanilla.js""
-      }
-    },
-    ""./middleware"": {
-      ""import"": {
-        ""types"": ""./esm/middleware.d.mts"",
-        ""default"": ""./esm/middleware.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/middleware.d.ts"",
-        ""default"": ""./esm/middleware.js""
-      },
-      ""default"": {
-        ""types"": ""./middleware.d.ts"",
-        ""default"": ""./middleware.js""
-      }
-    },
-    ""./middleware/immer"": {
-      ""import"": {
-        ""types"": ""./esm/middleware/immer.d.mts"",
-        ""default"": ""./esm/middleware/immer.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/middleware/immer.d.ts"",
-        ""default"": ""./esm/middleware/immer.js""
-      },
-      ""default"": {
-        ""types"": ""./middleware/immer.d.ts"",
-        ""default"": ""./middleware/immer.js""
-      }
-    },
-    ""./shallow"": {
-      ""import"": {
-        ""types"": ""./esm/shallow.d.mts"",
-        ""default"": ""./esm/shallow.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/shallow.d.ts"",
-        ""default"": ""./esm/shallow.js""
-      },
-      ""default"": {
-        ""types"": ""./shallow.d.ts"",
-        ""default"": ""./shallow.js""
-      }
-    },
-    ""./vanilla/shallow"": {
-      ""import"": {
-        ""types"": ""./esm/vanilla/shallow.d.mts"",
-        ""default"": ""./esm/vanilla/shallow.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/vanilla/shallow.d.ts"",
-        ""default"": ""./esm/vanilla/shallow.js""
-      },
-      ""default"": {
-        ""types"": ""./vanilla/shallow.d.ts"",
-        ""default"": ""./vanilla/shallow.js""
-      }
-    },
-    ""./react/shallow"": {
-      ""import"": {
-        ""types"": ""./esm/react/shallow.d.mts"",
-        ""default"": ""./esm/react/shallow.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/react/shallow.d.ts"",
-        ""default"": ""./esm/react/shallow.js""
-      },
-      ""default"": {
-        ""types"": ""./react/shallow.d.ts"",
-        ""default"": ""./react/shallow.js""
-      }
-    },
-    ""./traditional"": {
-      ""import"": {
-        ""types"": ""./esm/traditional.d.mts"",
-        ""default"": ""./esm/traditional.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/traditional.d.ts"",
-        ""default"": ""./esm/traditional.js""
-      },
-      ""default"": {
-        ""types"": ""./traditional.d.ts"",
-        ""default"": ""./traditional.js""
-      }
-    },
-    ""./context"": {
-      ""import"": {
-        ""types"": ""./esm/context.d.mts"",
-        ""default"": ""./esm/context.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/context.d.ts"",
-        ""default"": ""./esm/context.js""
-      },
-      ""default"": {
-        ""types"": ""./context.d.ts"",
-        ""default"": ""./context.js""
+        ""types"": ""./*.d.ts"",
+        ""default"": ""./*.js""
+  ""files"": [
+    ""**""
+  ],
+    ""build:react"": ""rollup -c --config-react"",
-    ""build:context"": ""rollup -c --config-context"",
-    ""postbuild"": ""pnpm patch-d-ts && pnpm copy && pnpm patch-esm-ts"",
+    ""postbuild"": ""pnpm patch-d-ts && pnpm copy && pnpm patch-old-ts && pnpm patch-esm-ts"",
-    ""test:spec"": ""vitest"",
+    ""test:spec"": ""vitest run"",
-    ""copy"": ""shx cp -r dist/src/* dist/esm && shx cp -r dist/src/* dist && shx rm -rf dist/src && shx rm -rf dist/{src,tests} && downlevel-dts dist dist/ts3.4 && shx cp package.json readme.md LICENSE dist && json -I -f dist/package.json -e \""this.private=false; this.devDependencies=undefined; this.optionalDependencies=undefined; this.scripts=undefined; this.prettier=undefined;\"""",
-    ""patch-esm-ts"": ""node -e \""require('shelljs').find('dist/esm/**/*.d.ts').forEach(f=>{var f2=f.replace(/\\.ts$/,'.mts');require('fs').copyFileSync(f,f2);require('shelljs').sed('-i',/ from '(\\.[^']+)';$/,' from \\'\\$1.mjs\\';',f2);require('shelljs').sed('-i',/^declare module '(\\.[^']+)'/,'declare module \\'\\$1.mjs\\'',f2)})\""""
+    ""copy"": ""shx cp -r dist/src/* dist/esm && shx cp -r dist/src/* dist && shx rm -rf dist/src && shx rm -rf dist/{src,tests} && shx cp package.json readme.md LICENSE dist && json -I -f dist/package.json -e \""this.private=false; this.devDependencies=undefined; this.optionalDependencies=undefined; this.scripts=undefined; this.prettier=undefined;\"""",
+    ""patch-old-ts"": ""shx touch dist/ts_version_4.5_and_above_is_required.d.ts"",
+    ""patch-esm-ts"": ""node -e \""require('shelljs').find('dist/esm/**/*.d.ts').forEach(f=>{var f2=f.replace(/\\.ts$/,'.mts');require('fs').renameSync(f,f2);require('shelljs').sed('-i',/ from '(\\.[^']+)';$/,' from \\'\\$1.mjs\\';',f2);require('shelljs').sed('-i',/^declare module '(\\.[^']+)'/,'declare module \\'\\$1.mjs\\'',f2)})\""""
-    ""node"": "">=12.7.0""
+    ""node"": "">=12.20.0""
-  ""dependencies"": {
-    ""use-sync-external-store"": ""1.2.0""
-  },
-    ""@babel/core"": ""^7.24.0"",
-    ""@babel/plugin-external-helpers"": ""^7.23.3"",
-    ""@babel/plugin-transform-react-jsx"": ""^7.23.4"",
-    ""@babel/plugin-transform-runtime"": ""^7.24.0"",
-    ""@babel/plugin-transform-typescript"": ""^7.23.6"",
-    ""@babel/preset-env"": ""^7.24.0"",
-    ""@rollup/plugin-babel"": ""^6.0.4"",
-    ""@rollup/plugin-terser"": ""^0.4.4"",
-    ""@testing-library/react"": ""^14.2.1"",
-    ""@types/node"": ""^20.11.24"",
-    ""@types/react"": ""^18.2.61"",
-    ""@types/react-dom"": ""^18.2.19"",
+    ""@testing-library/react"": ""^15.0.7"",
+    ""@types/node"": ""^20.12.12"",
+    ""@types/react"": ""^18.3.2"",
+    ""@types/react-dom"": ""^18.3.0"",
-    ""@typescript-eslint/eslint-plugin"": ""^7.1.0"",
-    ""@typescript-eslint/parser"": ""^7.1.0"",
-    ""@vitest/coverage-v8"": ""^1.4.0"",
-    ""@vitest/ui"": ""^1.4.0"",
-    ""downlevel-dts"": ""^0.11.0"",
-    ""esbuild"": ""^0.20.1"",
-    ""eslint"": ""^8.57.0"",
+    ""@typescript-eslint/eslint-plugin"": ""^7.10.0"",
+    ""@typescript-eslint/parser"": ""^7.10.0"",
+    ""@vitest/coverage-v8"": ""^1.6.0"",
+    ""@vitest/ui"": ""^1.6.0"",
+    ""esbuild"": ""^0.21.3"",
+    ""eslint"": ""8.57.0"",
-    ""eslint-plugin-react"": ""^7.33.2"",
-    ""eslint-plugin-react-hooks"": ""^4.6.0"",
-    ""eslint-plugin-vitest"": ""^0.3.22"",
-    ""immer"": ""^10.0.3"",
+    ""eslint-plugin-react"": ""^7.34.1"",
+    ""eslint-plugin-react-hooks"": ""^4.6.2"",
+    ""eslint-plugin-vitest"": ""^0.5.4"",
+    ""immer"": ""^10.1.1"",
-    ""react"": ""^18.2.0"",
-    ""react-dom"": ""^18.2.0"",
+    ""react"": ""19.0.0-rc-81c5ff2e04-20240521"",
+    ""react-dom"": ""19.0.0-rc-81c5ff2e04-20240521"",
-    ""rollup"": ""^4.12.0"",
+    ""rollup"": ""^4.17.2"",
-    ""typescript"": ""^5.3.3"",
-    ""vitest"": ""^1.4.0""
+    ""typescript"": ""^5.4.5"",
+    ""use-sync-external-store"": ""^1.2.2"",
+    ""vitest"": ""^1.6.0""
-    ""@types/react"": "">=16.8"",
+    ""@types/react"": "">=18.0.0"",
-    ""react"": "">=16.8""
+    ""react"": "">=18.0.0"",
+    ""use-sync-external-store"": "">=1.2.0""
+    },
+    ""use-sync-external-store"": {
+      ""optional"": true"
pmndrs_zustand,263d63dbaddf61a05042aea68ae21138a56a2f5e,Merge branch 'main' into v5,package.json,"-  ""version"": ""4.5.2"",
+  ""version"": ""5.0.0-alpha.6"",
+  ""publishConfig"": {
+    ""tag"": ""next""
+  },
-    ""<4.0"": {
+    "">=4.5"": {
-        ""ts3.4/*""
+        ""esm/*""
-        ""ts3.4/*""
+        ""*""
+      ]
+    },
+    ""*"": {
+      ""esm/*"": [
+        ""ts_version_4.5_and_above_is_required.d.ts""
+      ],
+      ""*"": [
+        ""ts_version_4.5_and_above_is_required.d.ts""
-  ""files"": [
-    ""**""
-  ],
-      ""module"": {
-        ""types"": ""./esm/index.d.ts"",
-        ""default"": ""./esm/index.js""
-      },
-    ""./vanilla"": {
+    ""./*"": {
-        ""types"": ""./esm/vanilla.d.mts"",
-        ""default"": ""./esm/vanilla.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/vanilla.d.ts"",
-        ""default"": ""./esm/vanilla.js""
+        ""types"": ""./esm/*.d.mts"",
+        ""default"": ""./esm/*.mjs""
-        ""types"": ""./vanilla.d.ts"",
-        ""default"": ""./vanilla.js""
-      }
-    },
-    ""./middleware"": {
-      ""import"": {
-        ""types"": ""./esm/middleware.d.mts"",
-        ""default"": ""./esm/middleware.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/middleware.d.ts"",
-        ""default"": ""./esm/middleware.js""
-      },
-      ""default"": {
-        ""types"": ""./middleware.d.ts"",
-        ""default"": ""./middleware.js""
-      }
-    },
-    ""./middleware/immer"": {
-      ""import"": {
-        ""types"": ""./esm/middleware/immer.d.mts"",
-        ""default"": ""./esm/middleware/immer.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/middleware/immer.d.ts"",
-        ""default"": ""./esm/middleware/immer.js""
-      },
-      ""default"": {
-        ""types"": ""./middleware/immer.d.ts"",
-        ""default"": ""./middleware/immer.js""
-      }
-    },
-    ""./shallow"": {
-      ""import"": {
-        ""types"": ""./esm/shallow.d.mts"",
-        ""default"": ""./esm/shallow.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/shallow.d.ts"",
-        ""default"": ""./esm/shallow.js""
-      },
-      ""default"": {
-        ""types"": ""./shallow.d.ts"",
-        ""default"": ""./shallow.js""
-      }
-    },
-    ""./vanilla/shallow"": {
-      ""import"": {
-        ""types"": ""./esm/vanilla/shallow.d.mts"",
-        ""default"": ""./esm/vanilla/shallow.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/vanilla/shallow.d.ts"",
-        ""default"": ""./esm/vanilla/shallow.js""
-      },
-      ""default"": {
-        ""types"": ""./vanilla/shallow.d.ts"",
-        ""default"": ""./vanilla/shallow.js""
-      }
-    },
-    ""./react/shallow"": {
-      ""import"": {
-        ""types"": ""./esm/react/shallow.d.mts"",
-        ""default"": ""./esm/react/shallow.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/react/shallow.d.ts"",
-        ""default"": ""./esm/react/shallow.js""
-      },
-      ""default"": {
-        ""types"": ""./react/shallow.d.ts"",
-        ""default"": ""./react/shallow.js""
-      }
-    },
-    ""./traditional"": {
-      ""import"": {
-        ""types"": ""./esm/traditional.d.mts"",
-        ""default"": ""./esm/traditional.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/traditional.d.ts"",
-        ""default"": ""./esm/traditional.js""
-      },
-      ""default"": {
-        ""types"": ""./traditional.d.ts"",
-        ""default"": ""./traditional.js""
-      }
-    },
-    ""./context"": {
-      ""import"": {
-        ""types"": ""./esm/context.d.mts"",
-        ""default"": ""./esm/context.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/context.d.ts"",
-        ""default"": ""./esm/context.js""
-      },
-      ""default"": {
-        ""types"": ""./context.d.ts"",
-        ""default"": ""./context.js""
+        ""types"": ""./*.d.ts"",
+        ""default"": ""./*.js""
+  ""files"": [
+    ""**""
+  ],
+    ""build:react"": ""rollup -c --config-react"",
-    ""build:context"": ""rollup -c --config-context"",
-    ""postbuild"": ""yarn patch-d-ts && yarn copy && yarn patch-esm-ts"",
+    ""postbuild"": ""yarn patch-d-ts && yarn copy && yarn patch-old-ts && yarn patch-esm-ts"",
-    ""copy"": ""shx cp -r dist/src/* dist/esm && shx cp -r dist/src/* dist && shx rm -rf dist/src && shx rm -rf dist/{src,tests} && downlevel-dts dist dist/ts3.4 && shx cp package.json readme.md LICENSE dist && json -I -f dist/package.json -e \""this.private=false; this.devDependencies=undefined; this.optionalDependencies=undefined; this.scripts=undefined; this.prettier=undefined;\"""",
-    ""patch-esm-ts"": ""node -e \""require('shelljs').find('dist/esm/**/*.d.ts').forEach(f=>{var f2=f.replace(/\\.ts$/,'.mts');require('fs').copyFileSync(f,f2);require('shelljs').sed('-i',/ from '(\\.[^']+)';$/,' from \\'\\$1.mjs\\';',f2);require('shelljs').sed('-i',/^declare module '(\\.[^']+)'/,'declare module \\'\\$1.mjs\\'',f2)})\""""
+    ""copy"": ""shx cp -r dist/src/* dist/esm && shx cp -r dist/src/* dist && shx rm -rf dist/src && shx rm -rf dist/{src,tests} && shx cp package.json readme.md LICENSE dist && json -I -f dist/package.json -e \""this.private=false; this.devDependencies=undefined; this.optionalDependencies=undefined; this.scripts=undefined; this.prettier=undefined;\"""",
+    ""patch-old-ts"": ""shx touch dist/ts_version_4.5_and_above_is_required.d.ts"",
+    ""patch-esm-ts"": ""node -e \""require('shelljs').find('dist/esm/**/*.d.ts').forEach(f=>{var f2=f.replace(/\\.ts$/,'.mts');require('fs').renameSync(f,f2);require('shelljs').sed('-i',/ from '(\\.[^']+)';$/,' from \\'\\$1.mjs\\';',f2);require('shelljs').sed('-i',/^declare module '(\\.[^']+)'/,'declare module \\'\\$1.mjs\\'',f2)})\""""
-    ""node"": "">=12.7.0""
+    ""node"": "">=12.20.0""
-  ""dependencies"": {
-    ""use-sync-external-store"": ""1.2.0""
-  },
-    ""@babel/core"": ""^7.24.0"",
-    ""@babel/plugin-external-helpers"": ""^7.23.3"",
-    ""@babel/plugin-transform-react-jsx"": ""^7.23.4"",
-    ""@babel/plugin-transform-runtime"": ""^7.24.0"",
-    ""@babel/plugin-transform-typescript"": ""^7.23.6"",
-    ""@babel/preset-env"": ""^7.24.0"",
-    ""@rollup/plugin-babel"": ""^6.0.4"",
-    ""@rollup/plugin-terser"": ""^0.4.4"",
-    ""downlevel-dts"": ""^0.11.0"",
+    ""use-sync-external-store"": ""^1.2.0"",
-    ""@types/react"": "">=16.8"",
+    ""@types/react"": "">=18.0"",
-    ""react"": "">=16.8""
+    ""react"": "">=18.0"",
+    ""use-sync-external-store"": "">=1.2.0""
+    },
+    ""use-sync-external-store"": {
+      ""optional"": true","+  ""description"": ""🐻 Bear necessities for state management in React"",
+  ""type"": ""commonjs"",
-  ""description"": ""🐻 Bear necessities for state management in React"",
-    ""build"": ""concurrently -m 8 'yarn:build:*'"",
+    ""build"": ""pnpm run prebuild && pnpm run '/^build:.*/' && pnpm run postbuild"",
-    ""postbuild"": ""yarn patch-d-ts && yarn copy && yarn patch-esm-ts"",
+    ""postbuild"": ""pnpm patch-d-ts && pnpm copy && pnpm patch-esm-ts"",
-    ""prettier:ci"": ""prettier '*.{js,json,md}' '{examples,src,tests,docs}/**/*.{js,jsx,ts,tsx,md,mdx}' --list-different"",
-    ""eslint:ci"": ""eslint  --no-eslintrc --c .eslintrc.json '*.{js,json,ts}' '{src,tests}/**/*.{ts,tsx}'"",
-    ""pretest"": ""tsc"",
-    ""test"": ""vitest --ui --coverage"",
-    ""test:ci"": ""vitest"",
+    ""test"": ""pnpm run '/^test:.*/'"",
+    ""test:format"": ""prettier '*.{js,json,md}' '{examples,src,tests,docs}/**/*.{js,jsx,ts,tsx,md,mdx}' --list-different"",
+    ""test:types"": ""tsc --noEmit"",
+    ""test:lint"": ""eslint  --no-eslintrc --c .eslintrc.json '*.{js,json,ts}' '{src,tests}/**/*.{ts,tsx}'"",
+    ""test:spec"": ""vitest"",
+  ""packageManager"": ""pnpm@8.15.0"",
-    ""concurrently"": ""^8.2.2"",
+    ""shelljs"": ""^0.8.5"",
-  },
-  ""packageManager"": ""yarn@1.22.21+sha256.dbed5b7e10c552ba0e1a545c948d5473bc6c5a28ce22a8fd27e493e3e5eb6370""
+  }","+  ""description"": ""🐻 Bear necessities for state management in React"",
-  ""version"": ""4.5.2"",
-  ""description"": ""🐻 Bear necessities for state management in React"",
+  ""type"": ""commonjs"",
+  ""version"": ""5.0.0-alpha.6"",
+  ""publishConfig"": {
+    ""tag"": ""next""
+  },
-    ""<4.0"": {
+    "">=4.5"": {
-        ""ts3.4/*""
+        ""esm/*""
-        ""ts3.4/*""
+        ""*""
+      ]
+    },
+    ""*"": {
+      ""esm/*"": [
+        ""ts_version_4.5_and_above_is_required.d.ts""
+      ],
+      ""*"": [
+        ""ts_version_4.5_and_above_is_required.d.ts""
-  ""files"": [
-    ""**""
-  ],
-      ""module"": {
-        ""types"": ""./esm/index.d.ts"",
-        ""default"": ""./esm/index.js""
-      },
-    ""./vanilla"": {
+    ""./*"": {
-        ""types"": ""./esm/vanilla.d.mts"",
-        ""default"": ""./esm/vanilla.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/vanilla.d.ts"",
-        ""default"": ""./esm/vanilla.js""
+        ""types"": ""./esm/*.d.mts"",
+        ""default"": ""./esm/*.mjs""
-        ""types"": ""./vanilla.d.ts"",
-        ""default"": ""./vanilla.js""
-      }
-    },
-    ""./middleware"": {
-      ""import"": {
-        ""types"": ""./esm/middleware.d.mts"",
-        ""default"": ""./esm/middleware.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/middleware.d.ts"",
-        ""default"": ""./esm/middleware.js""
-      },
-      ""default"": {
-        ""types"": ""./middleware.d.ts"",
-        ""default"": ""./middleware.js""
-      }
-    },
-    ""./middleware/immer"": {
-      ""import"": {
-        ""types"": ""./esm/middleware/immer.d.mts"",
-        ""default"": ""./esm/middleware/immer.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/middleware/immer.d.ts"",
-        ""default"": ""./esm/middleware/immer.js""
-      },
-      ""default"": {
-        ""types"": ""./middleware/immer.d.ts"",
-        ""default"": ""./middleware/immer.js""
-      }
-    },
-    ""./shallow"": {
-      ""import"": {
-        ""types"": ""./esm/shallow.d.mts"",
-        ""default"": ""./esm/shallow.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/shallow.d.ts"",
-        ""default"": ""./esm/shallow.js""
-      },
-      ""default"": {
-        ""types"": ""./shallow.d.ts"",
-        ""default"": ""./shallow.js""
-      }
-    },
-    ""./vanilla/shallow"": {
-      ""import"": {
-        ""types"": ""./esm/vanilla/shallow.d.mts"",
-        ""default"": ""./esm/vanilla/shallow.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/vanilla/shallow.d.ts"",
-        ""default"": ""./esm/vanilla/shallow.js""
-      },
-      ""default"": {
-        ""types"": ""./vanilla/shallow.d.ts"",
-        ""default"": ""./vanilla/shallow.js""
-      }
-    },
-    ""./react/shallow"": {
-      ""import"": {
-        ""types"": ""./esm/react/shallow.d.mts"",
-        ""default"": ""./esm/react/shallow.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/react/shallow.d.ts"",
-        ""default"": ""./esm/react/shallow.js""
-      },
-      ""default"": {
-        ""types"": ""./react/shallow.d.ts"",
-        ""default"": ""./react/shallow.js""
-      }
-    },
-    ""./traditional"": {
-      ""import"": {
-        ""types"": ""./esm/traditional.d.mts"",
-        ""default"": ""./esm/traditional.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/traditional.d.ts"",
-        ""default"": ""./esm/traditional.js""
-      },
-      ""default"": {
-        ""types"": ""./traditional.d.ts"",
-        ""default"": ""./traditional.js""
-      }
-    },
-    ""./context"": {
-      ""import"": {
-        ""types"": ""./esm/context.d.mts"",
-        ""default"": ""./esm/context.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/context.d.ts"",
-        ""default"": ""./esm/context.js""
-      },
-      ""default"": {
-        ""types"": ""./context.d.ts"",
-        ""default"": ""./context.js""
+        ""types"": ""./*.d.ts"",
+        ""default"": ""./*.js""
+  ""files"": [
+    ""**""
+  ],
-    ""build"": ""concurrently -m 8 'yarn:build:*'"",
+    ""build"": ""pnpm run prebuild && pnpm run '/^build:.*/' && pnpm run postbuild"",
+    ""build:react"": ""rollup -c --config-react"",
-    ""postbuild"": ""yarn patch-d-ts && yarn copy && yarn patch-esm-ts"",
+    ""postbuild"": ""pnpm patch-d-ts && pnpm copy && pnpm patch-old-ts && pnpm patch-esm-ts"",
-    ""prettier:ci"": ""prettier '*.{js,json,md}' '{examples,src,tests,docs}/**/*.{js,jsx,ts,tsx,md,mdx}' --list-different"",
-    ""eslint:ci"": ""eslint  --no-eslintrc --c .eslintrc.json '*.{js,json,ts}' '{src,tests}/**/*.{ts,tsx}'"",
-    ""pretest"": ""tsc"",
-    ""test"": ""vitest --ui --coverage"",
-    ""test:ci"": ""vitest"",
+    ""test"": ""pnpm run '/^test:.*/'"",
+    ""test:format"": ""prettier '*.{js,json,md}' '{examples,src,tests,docs}/**/*.{js,jsx,ts,tsx,md,mdx}' --list-different"",
+    ""test:types"": ""tsc --noEmit"",
+    ""test:lint"": ""eslint  --no-eslintrc --c .eslintrc.json '*.{js,json,ts}' '{src,tests}/**/*.{ts,tsx}'"",
+    ""test:spec"": ""vitest"",
-    ""copy"": ""shx cp -r dist/src/* dist/esm && shx cp -r dist/src/* dist && shx rm -rf dist/src && shx rm -rf dist/{src,tests} && downlevel-dts dist dist/ts3.4 && shx cp package.json readme.md LICENSE dist && json -I -f dist/package.json -e \""this.private=false; this.devDependencies=undefined; this.optionalDependencies=undefined; this.scripts=undefined; this.prettier=undefined;\"""",
-    ""patch-esm-ts"": ""node -e \""require('shelljs').find('dist/esm/**/*.d.ts').forEach(f=>{var f2=f.replace(/\\.ts$/,'.mts');require('fs').copyFileSync(f,f2);require('shelljs').sed('-i',/ from '(\\.[^']+)';$/,' from \\'\\$1.mjs\\';',f2);require('shelljs').sed('-i',/^declare module '(\\.[^']+)'/,'declare module \\'\\$1.mjs\\'',f2)})\""""
+    ""copy"": ""shx cp -r dist/src/* dist/esm && shx cp -r dist/src/* dist && shx rm -rf dist/src && shx rm -rf dist/{src,tests} && shx cp package.json readme.md LICENSE dist && json -I -f dist/package.json -e \""this.private=false; this.devDependencies=undefined; this.optionalDependencies=undefined; this.scripts=undefined; this.prettier=undefined;\"""",
+    ""patch-old-ts"": ""shx touch dist/ts_version_4.5_and_above_is_required.d.ts"",
+    ""patch-esm-ts"": ""node -e \""require('shelljs').find('dist/esm/**/*.d.ts').forEach(f=>{var f2=f.replace(/\\.ts$/,'.mts');require('fs').renameSync(f,f2);require('shelljs').sed('-i',/ from '(\\.[^']+)';$/,' from \\'\\$1.mjs\\';',f2);require('shelljs').sed('-i',/^declare module '(\\.[^']+)'/,'declare module \\'\\$1.mjs\\'',f2)})\""""
-    ""node"": "">=12.7.0""
+    ""node"": "">=12.20.0""
-  ""dependencies"": {
-    ""use-sync-external-store"": ""1.2.0""
-  },
+  ""packageManager"": ""pnpm@8.15.0"",
-    ""@babel/core"": ""^7.24.0"",
-    ""@babel/plugin-external-helpers"": ""^7.23.3"",
-    ""@babel/plugin-transform-react-jsx"": ""^7.23.4"",
-    ""@babel/plugin-transform-runtime"": ""^7.24.0"",
-    ""@babel/plugin-transform-typescript"": ""^7.23.6"",
-    ""@babel/preset-env"": ""^7.24.0"",
-    ""@rollup/plugin-babel"": ""^6.0.4"",
-    ""@rollup/plugin-terser"": ""^0.4.4"",
-    ""concurrently"": ""^8.2.2"",
-    ""downlevel-dts"": ""^0.11.0"",
+    ""shelljs"": ""^0.8.5"",
+    ""use-sync-external-store"": ""^1.2.0"",
-    ""@types/react"": "">=16.8"",
+    ""@types/react"": "">=18.0"",
-    ""react"": "">=16.8""
+    ""react"": "">=18.0"",
+    ""use-sync-external-store"": "">=1.2.0""
+    },
+    ""use-sync-external-store"": {
+      ""optional"": true
-  },
-  ""packageManager"": ""yarn@1.22.21+sha256.dbed5b7e10c552ba0e1a545c948d5473bc6c5a28ce22a8fd27e493e3e5eb6370""
+  }"
pmndrs_zustand,4c4e4d1ec473da93077721c8a4c6522c3570b9a3,Merge branch 'main' into v5,package.json,"-  ""version"": ""4.5.2"",
+  ""version"": ""5.0.0-alpha.6"",
+  ""publishConfig"": {
+    ""tag"": ""next""
+  },
-    ""<4.0"": {
+    "">=4.5"": {
-        ""ts3.4/*""
+        ""esm/*""
-        ""ts3.4/*""
+        ""*""
+      ]
+    },
+    ""*"": {
+      ""esm/*"": [
+        ""ts_version_4.5_and_above_is_required.d.ts""
+      ],
+      ""*"": [
+        ""ts_version_4.5_and_above_is_required.d.ts""
-  ""files"": [
-    ""**""
-  ],
-      ""module"": {
-        ""types"": ""./esm/index.d.ts"",
-        ""default"": ""./esm/index.js""
-      },
-    ""./vanilla"": {
+    ""./*"": {
-        ""types"": ""./esm/vanilla.d.mts"",
-        ""default"": ""./esm/vanilla.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/vanilla.d.ts"",
-        ""default"": ""./esm/vanilla.js""
+        ""types"": ""./esm/*.d.mts"",
+        ""default"": ""./esm/*.mjs""
-        ""types"": ""./vanilla.d.ts"",
-        ""default"": ""./vanilla.js""
-      }
-    },
-    ""./middleware"": {
-      ""import"": {
-        ""types"": ""./esm/middleware.d.mts"",
-        ""default"": ""./esm/middleware.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/middleware.d.ts"",
-        ""default"": ""./esm/middleware.js""
-      },
-      ""default"": {
-        ""types"": ""./middleware.d.ts"",
-        ""default"": ""./middleware.js""
-      }
-    },
-    ""./middleware/immer"": {
-      ""import"": {
-        ""types"": ""./esm/middleware/immer.d.mts"",
-        ""default"": ""./esm/middleware/immer.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/middleware/immer.d.ts"",
-        ""default"": ""./esm/middleware/immer.js""
-      },
-      ""default"": {
-        ""types"": ""./middleware/immer.d.ts"",
-        ""default"": ""./middleware/immer.js""
-      }
-    },
-    ""./shallow"": {
-      ""import"": {
-        ""types"": ""./esm/shallow.d.mts"",
-        ""default"": ""./esm/shallow.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/shallow.d.ts"",
-        ""default"": ""./esm/shallow.js""
-      },
-      ""default"": {
-        ""types"": ""./shallow.d.ts"",
-        ""default"": ""./shallow.js""
-      }
-    },
-    ""./vanilla/shallow"": {
-      ""import"": {
-        ""types"": ""./esm/vanilla/shallow.d.mts"",
-        ""default"": ""./esm/vanilla/shallow.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/vanilla/shallow.d.ts"",
-        ""default"": ""./esm/vanilla/shallow.js""
-      },
-      ""default"": {
-        ""types"": ""./vanilla/shallow.d.ts"",
-        ""default"": ""./vanilla/shallow.js""
-      }
-    },
-    ""./react/shallow"": {
-      ""import"": {
-        ""types"": ""./esm/react/shallow.d.mts"",
-        ""default"": ""./esm/react/shallow.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/react/shallow.d.ts"",
-        ""default"": ""./esm/react/shallow.js""
-      },
-      ""default"": {
-        ""types"": ""./react/shallow.d.ts"",
-        ""default"": ""./react/shallow.js""
-      }
-    },
-    ""./traditional"": {
-      ""import"": {
-        ""types"": ""./esm/traditional.d.mts"",
-        ""default"": ""./esm/traditional.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/traditional.d.ts"",
-        ""default"": ""./esm/traditional.js""
-      },
-      ""default"": {
-        ""types"": ""./traditional.d.ts"",
-        ""default"": ""./traditional.js""
-      }
-    },
-    ""./context"": {
-      ""import"": {
-        ""types"": ""./esm/context.d.mts"",
-        ""default"": ""./esm/context.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/context.d.ts"",
-        ""default"": ""./esm/context.js""
-      },
-      ""default"": {
-        ""types"": ""./context.d.ts"",
-        ""default"": ""./context.js""
+        ""types"": ""./*.d.ts"",
+        ""default"": ""./*.js""
+  ""files"": [
+    ""**""
+  ],
+    ""build:react"": ""rollup -c --config-react"",
-    ""build:context"": ""rollup -c --config-context"",
-    ""postbuild"": ""yarn patch-d-ts && yarn copy && yarn patch-esm-ts"",
+    ""postbuild"": ""yarn patch-d-ts && yarn copy && yarn patch-old-ts && yarn patch-esm-ts"",
-    ""copy"": ""shx cp -r dist/src/* dist/esm && shx cp -r dist/src/* dist && shx rm -rf dist/src && shx rm -rf dist/{src,tests} && downlevel-dts dist dist/ts3.4 && shx cp package.json readme.md LICENSE dist && json -I -f dist/package.json -e \""this.private=false; this.devDependencies=undefined; this.optionalDependencies=undefined; this.scripts=undefined; this.prettier=undefined;\"""",
-    ""patch-esm-ts"": ""node -e \""require('shelljs').find('dist/esm/**/*.d.ts').forEach(f=>{var f2=f.replace(/\\.ts$/,'.mts');require('fs').copyFileSync(f,f2);require('shelljs').sed('-i',/ from '(\\.[^']+)';$/,' from \\'\\$1.mjs\\';',f2);require('shelljs').sed('-i',/^declare module '(\\.[^']+)'/,'declare module \\'\\$1.mjs\\'',f2)})\""""
+    ""copy"": ""shx cp -r dist/src/* dist/esm && shx cp -r dist/src/* dist && shx rm -rf dist/src && shx rm -rf dist/{src,tests} && shx cp package.json readme.md LICENSE dist && json -I -f dist/package.json -e \""this.private=false; this.devDependencies=undefined; this.optionalDependencies=undefined; this.scripts=undefined; this.prettier=undefined;\"""",
+    ""patch-old-ts"": ""shx touch dist/ts_version_4.5_and_above_is_required.d.ts"",
+    ""patch-esm-ts"": ""node -e \""require('shelljs').find('dist/esm/**/*.d.ts').forEach(f=>{var f2=f.replace(/\\.ts$/,'.mts');require('fs').renameSync(f,f2);require('shelljs').sed('-i',/ from '(\\.[^']+)';$/,' from \\'\\$1.mjs\\';',f2);require('shelljs').sed('-i',/^declare module '(\\.[^']+)'/,'declare module \\'\\$1.mjs\\'',f2)})\""""
-    ""node"": "">=12.7.0""
+    ""node"": "">=12.20.0""
-  ""dependencies"": {
-    ""use-sync-external-store"": ""1.2.0""
-  },
-    ""@babel/core"": ""^7.24.0"",
-    ""@babel/plugin-external-helpers"": ""^7.23.3"",
-    ""@babel/plugin-transform-react-jsx"": ""^7.23.4"",
-    ""@babel/plugin-transform-runtime"": ""^7.24.0"",
-    ""@babel/plugin-transform-typescript"": ""^7.23.6"",
-    ""@babel/preset-env"": ""^7.24.0"",
-    ""@rollup/plugin-babel"": ""^6.0.4"",
-    ""@rollup/plugin-terser"": ""^0.4.4"",
-    ""downlevel-dts"": ""^0.11.0"",
+    ""use-sync-external-store"": ""^1.2.0"",
-    ""@types/react"": "">=16.8"",
+    ""@types/react"": "">=18.0"",
-    ""react"": "">=16.8""
+    ""react"": "">=18.0"",
+    ""use-sync-external-store"": "">=1.2.0""
+    },
+    ""use-sync-external-store"": {
+      ""optional"": true","-    ""@vitest/coverage-v8"": ""0.33.0"",
-    ""@vitest/ui"": ""0.33.0"",
+    ""@vitest/coverage-v8"": ""^1.4.0"",
+    ""@vitest/ui"": ""^1.4.0"",
-    ""vitest"": ""0.33.0""
+    ""vitest"": ""^1.4.0""","-  ""version"": ""4.5.2"",
+  ""version"": ""5.0.0-alpha.6"",
+  ""publishConfig"": {
+    ""tag"": ""next""
+  },
-    ""<4.0"": {
+    "">=4.5"": {
-        ""ts3.4/*""
+        ""esm/*""
-        ""ts3.4/*""
+        ""*""
+      ]
+    },
+    ""*"": {
+      ""esm/*"": [
+        ""ts_version_4.5_and_above_is_required.d.ts""
+      ],
+      ""*"": [
+        ""ts_version_4.5_and_above_is_required.d.ts""
-  ""files"": [
-    ""**""
-  ],
-      ""module"": {
-        ""types"": ""./esm/index.d.ts"",
-        ""default"": ""./esm/index.js""
-      },
-    ""./vanilla"": {
+    ""./*"": {
-        ""types"": ""./esm/vanilla.d.mts"",
-        ""default"": ""./esm/vanilla.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/vanilla.d.ts"",
-        ""default"": ""./esm/vanilla.js""
+        ""types"": ""./esm/*.d.mts"",
+        ""default"": ""./esm/*.mjs""
-        ""types"": ""./vanilla.d.ts"",
-        ""default"": ""./vanilla.js""
-      }
-    },
-    ""./middleware"": {
-      ""import"": {
-        ""types"": ""./esm/middleware.d.mts"",
-        ""default"": ""./esm/middleware.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/middleware.d.ts"",
-        ""default"": ""./esm/middleware.js""
-      },
-      ""default"": {
-        ""types"": ""./middleware.d.ts"",
-        ""default"": ""./middleware.js""
-      }
-    },
-    ""./middleware/immer"": {
-      ""import"": {
-        ""types"": ""./esm/middleware/immer.d.mts"",
-        ""default"": ""./esm/middleware/immer.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/middleware/immer.d.ts"",
-        ""default"": ""./esm/middleware/immer.js""
-      },
-      ""default"": {
-        ""types"": ""./middleware/immer.d.ts"",
-        ""default"": ""./middleware/immer.js""
-      }
-    },
-    ""./shallow"": {
-      ""import"": {
-        ""types"": ""./esm/shallow.d.mts"",
-        ""default"": ""./esm/shallow.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/shallow.d.ts"",
-        ""default"": ""./esm/shallow.js""
-      },
-      ""default"": {
-        ""types"": ""./shallow.d.ts"",
-        ""default"": ""./shallow.js""
-      }
-    },
-    ""./vanilla/shallow"": {
-      ""import"": {
-        ""types"": ""./esm/vanilla/shallow.d.mts"",
-        ""default"": ""./esm/vanilla/shallow.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/vanilla/shallow.d.ts"",
-        ""default"": ""./esm/vanilla/shallow.js""
-      },
-      ""default"": {
-        ""types"": ""./vanilla/shallow.d.ts"",
-        ""default"": ""./vanilla/shallow.js""
-      }
-    },
-    ""./react/shallow"": {
-      ""import"": {
-        ""types"": ""./esm/react/shallow.d.mts"",
-        ""default"": ""./esm/react/shallow.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/react/shallow.d.ts"",
-        ""default"": ""./esm/react/shallow.js""
-      },
-      ""default"": {
-        ""types"": ""./react/shallow.d.ts"",
-        ""default"": ""./react/shallow.js""
-      }
-    },
-    ""./traditional"": {
-      ""import"": {
-        ""types"": ""./esm/traditional.d.mts"",
-        ""default"": ""./esm/traditional.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/traditional.d.ts"",
-        ""default"": ""./esm/traditional.js""
-      },
-      ""default"": {
-        ""types"": ""./traditional.d.ts"",
-        ""default"": ""./traditional.js""
-      }
-    },
-    ""./context"": {
-      ""import"": {
-        ""types"": ""./esm/context.d.mts"",
-        ""default"": ""./esm/context.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/context.d.ts"",
-        ""default"": ""./esm/context.js""
-      },
-      ""default"": {
-        ""types"": ""./context.d.ts"",
-        ""default"": ""./context.js""
+        ""types"": ""./*.d.ts"",
+        ""default"": ""./*.js""
+  ""files"": [
+    ""**""
+  ],
+    ""build:react"": ""rollup -c --config-react"",
-    ""build:context"": ""rollup -c --config-context"",
-    ""postbuild"": ""yarn patch-d-ts && yarn copy && yarn patch-esm-ts"",
+    ""postbuild"": ""yarn patch-d-ts && yarn copy && yarn patch-old-ts && yarn patch-esm-ts"",
-    ""copy"": ""shx cp -r dist/src/* dist/esm && shx cp -r dist/src/* dist && shx rm -rf dist/src && shx rm -rf dist/{src,tests} && downlevel-dts dist dist/ts3.4 && shx cp package.json readme.md LICENSE dist && json -I -f dist/package.json -e \""this.private=false; this.devDependencies=undefined; this.optionalDependencies=undefined; this.scripts=undefined; this.prettier=undefined;\"""",
-    ""patch-esm-ts"": ""node -e \""require('shelljs').find('dist/esm/**/*.d.ts').forEach(f=>{var f2=f.replace(/\\.ts$/,'.mts');require('fs').copyFileSync(f,f2);require('shelljs').sed('-i',/ from '(\\.[^']+)';$/,' from \\'\\$1.mjs\\';',f2);require('shelljs').sed('-i',/^declare module '(\\.[^']+)'/,'declare module \\'\\$1.mjs\\'',f2)})\""""
+    ""copy"": ""shx cp -r dist/src/* dist/esm && shx cp -r dist/src/* dist && shx rm -rf dist/src && shx rm -rf dist/{src,tests} && shx cp package.json readme.md LICENSE dist && json -I -f dist/package.json -e \""this.private=false; this.devDependencies=undefined; this.optionalDependencies=undefined; this.scripts=undefined; this.prettier=undefined;\"""",
+    ""patch-old-ts"": ""shx touch dist/ts_version_4.5_and_above_is_required.d.ts"",
+    ""patch-esm-ts"": ""node -e \""require('shelljs').find('dist/esm/**/*.d.ts').forEach(f=>{var f2=f.replace(/\\.ts$/,'.mts');require('fs').renameSync(f,f2);require('shelljs').sed('-i',/ from '(\\.[^']+)';$/,' from \\'\\$1.mjs\\';',f2);require('shelljs').sed('-i',/^declare module '(\\.[^']+)'/,'declare module \\'\\$1.mjs\\'',f2)})\""""
-    ""node"": "">=12.7.0""
+    ""node"": "">=12.20.0""
-  ""dependencies"": {
-    ""use-sync-external-store"": ""1.2.0""
-  },
-    ""@babel/core"": ""^7.24.0"",
-    ""@babel/plugin-external-helpers"": ""^7.23.3"",
-    ""@babel/plugin-transform-react-jsx"": ""^7.23.4"",
-    ""@babel/plugin-transform-runtime"": ""^7.24.0"",
-    ""@babel/plugin-transform-typescript"": ""^7.23.6"",
-    ""@babel/preset-env"": ""^7.24.0"",
-    ""@rollup/plugin-babel"": ""^6.0.4"",
-    ""@rollup/plugin-terser"": ""^0.4.4"",
-    ""@vitest/coverage-v8"": ""0.33.0"",
-    ""@vitest/ui"": ""0.33.0"",
+    ""@vitest/coverage-v8"": ""^1.4.0"",
+    ""@vitest/ui"": ""^1.4.0"",
-    ""downlevel-dts"": ""^0.11.0"",
-    ""vitest"": ""0.33.0""
+    ""use-sync-external-store"": ""^1.2.0"",
+    ""vitest"": ""^1.4.0""
-    ""@types/react"": "">=16.8"",
+    ""@types/react"": "">=18.0"",
-    ""react"": "">=16.8""
+    ""react"": "">=18.0"",
+    ""use-sync-external-store"": "">=1.2.0""
+    },
+    ""use-sync-external-store"": {
+      ""optional"": true"
pmndrs_zustand,4c4e4d1ec473da93077721c8a4c6522c3570b9a3,Merge branch 'main' into v5,tests/devtools.test.tsx,"- * [] if two stores are coonected to one 'name' group and.
+ * [] if two stores are connected to one 'name' group and.
-    // FIXME: Run this test separately in CI, until we're able to test modules in isolation i.e. use jest.resetModule and re-import modules in each test
-    // Relevant issues https://github.com/nodejs/node/issues/35889
-    it('[CI-MATRIX-1] should create single connection for all indernal calls of .connect and `store` is not passed to .connect', async () => {
+    it('should create single connection for all internal calls of .connect and `store` is not passed to .connect', async () => {
-    // FIXME: Run this test separately in CI, until we're able to test modules in isolation i.e. use jest.resetModule and re-import modules in each test
-    // Relevant issues https://github.com/nodejs/node/issues/35889
-    it('[CI-MATRIX-2] should call `.init` on single connection with combined states after each `create(devtools` call', async () => {
+    it('should call `.init` on single connection with combined states after each `create(devtools` call', async () => {
-    // FIXME: Run this test separately in CI, until we're able to test modules in isolation i.e. use jest.resetModule and re-import modules in each test
-    // Relevant issues https://github.com/nodejs/node/issues/35889
-    it('[CI-MATRIX-3] should call `.init` on single connection with combined states after each `create(devtools` call', async () => {
+    it('should call `.init` on single connection with combined states after each `create(devtools` call', async () => {
-        // FIXME: Run this test separately in CI, until we're able to test modules in isolation i.e. use jest.resetModule and re-import modules in each test
-        // Relevant issues https://github.com/nodejs/node/issues/35889
-        it('[CI-MATRIX-4] does nothing even if there is `api.dispatch`, connections isolated from each other', async () => {
+        it('does nothing even if there is `api.dispatch`, connections isolated from each other', async () => {
-        // FIXME: Run this test separately in CI, until we're able to test modules in isolation i.e. use jest.resetModule and re-import modules in each test
-        // Relevant issues https://github.com/nodejs/node/issues/35889
-        it('[CI-MATRIX-5] dispatches with `api.dispatch` when `api.dispatchFromDevtools` is set to true, connections are isolated from each other', async () => {
+        it('dispatches with `api.dispatch` when `api.dispatchFromDevtools` is set to true, connections are isolated from each other', async () => {","-import { Mock, afterEach, beforeEach, describe, expect, it, vi } from 'vitest'
+import { afterEach, beforeEach, describe, expect, it, vi } from 'vitest'
-    subscribe: Mock<[f: (m: unknown) => void], () => void>
-    unsubscribe: Mock<any>
-    send: Mock<any>
-    init: Mock<any>
-    error: Mock<any>
-    dispatch?: Mock<any>
+    subscribe: any
+    unsubscribe: any
+    send: any
+    init: any
+    error: any
+    dispatch?: any","-import { Mock, afterEach, beforeEach, describe, expect, it, vi } from 'vitest'
+import { afterEach, beforeEach, describe, expect, it, vi } from 'vitest'
-    subscribe: Mock<[f: (m: unknown) => void], () => void>
-    unsubscribe: Mock<any>
-    send: Mock<any>
-    init: Mock<any>
-    error: Mock<any>
-    dispatch?: Mock<any>
+    subscribe: any
+    unsubscribe: any
+    send: any
+    init: any
+    error: any
+    dispatch?: any
- * [] if two stores are coonected to one 'name' group and.
+ * [] if two stores are connected to one 'name' group and.
-    // FIXME: Run this test separately in CI, until we're able to test modules in isolation i.e. use jest.resetModule and re-import modules in each test
-    // Relevant issues https://github.com/nodejs/node/issues/35889
-    it('[CI-MATRIX-1] should create single connection for all indernal calls of .connect and `store` is not passed to .connect', async () => {
+    it('should create single connection for all internal calls of .connect and `store` is not passed to .connect', async () => {
-    // FIXME: Run this test separately in CI, until we're able to test modules in isolation i.e. use jest.resetModule and re-import modules in each test
-    // Relevant issues https://github.com/nodejs/node/issues/35889
-    it('[CI-MATRIX-2] should call `.init` on single connection with combined states after each `create(devtools` call', async () => {
+    it('should call `.init` on single connection with combined states after each `create(devtools` call', async () => {
-    // FIXME: Run this test separately in CI, until we're able to test modules in isolation i.e. use jest.resetModule and re-import modules in each test
-    // Relevant issues https://github.com/nodejs/node/issues/35889
-    it('[CI-MATRIX-3] should call `.init` on single connection with combined states after each `create(devtools` call', async () => {
+    it('should call `.init` on single connection with combined states after each `create(devtools` call', async () => {
-        // FIXME: Run this test separately in CI, until we're able to test modules in isolation i.e. use jest.resetModule and re-import modules in each test
-        // Relevant issues https://github.com/nodejs/node/issues/35889
-        it('[CI-MATRIX-4] does nothing even if there is `api.dispatch`, connections isolated from each other', async () => {
+        it('does nothing even if there is `api.dispatch`, connections isolated from each other', async () => {
-        // FIXME: Run this test separately in CI, until we're able to test modules in isolation i.e. use jest.resetModule and re-import modules in each test
-        // Relevant issues https://github.com/nodejs/node/issues/35889
-        it('[CI-MATRIX-5] dispatches with `api.dispatch` when `api.dispatchFromDevtools` is set to true, connections are isolated from each other', async () => {
+        it('dispatches with `api.dispatch` when `api.dispatchFromDevtools` is set to true, connections are isolated from each other', async () => {"
pmndrs_zustand,4c4e4d1ec473da93077721c8a4c6522c3570b9a3,Merge branch 'main' into v5,tests/ssr.test.tsx,"-  const { bears, increasePopulation } = useBearStore(
-    ({ bears, increasePopulation }) => ({
-      bears,
-      increasePopulation,
-    }),
+  const bears = useBearStore(({ bears }) => bears)
+  const increasePopulation = useBearStore(
+    ({ increasePopulation }) => increasePopulation,","-      const { hydrateRoot } =
-        await vi.importActual<typeof import('react-dom/client')>(
-          'react-dom/client',
-        )
+      const { hydrateRoot }: any = await vi.importActual('react-dom/client')
-      const { hydrateRoot } =
-        await vi.importActual<typeof import('react-dom/client')>(
-          'react-dom/client',
-        )
+      const { hydrateRoot }: any = await vi.importActual('react-dom/client')","-  const { bears, increasePopulation } = useBearStore(
-    ({ bears, increasePopulation }) => ({
-      bears,
-      increasePopulation,
-    }),
+  const bears = useBearStore(({ bears }) => bears)
+  const increasePopulation = useBearStore(
+    ({ increasePopulation }) => increasePopulation,
-      const { hydrateRoot } =
-        await vi.importActual<typeof import('react-dom/client')>(
-          'react-dom/client',
-        )
+      const { hydrateRoot }: any = await vi.importActual('react-dom/client')
-      const { hydrateRoot } =
-        await vi.importActual<typeof import('react-dom/client')>(
-          'react-dom/client',
-        )
+      const { hydrateRoot }: any = await vi.importActual('react-dom/client')"
pmndrs_zustand,b19acdfab77fb2bd049c9af6dd94afd25e4b4910,Merge branch 'main' into v5,tests/devtools.test.tsx,"- * [] if two stores are coonected to one 'name' group and.
+ * [] if two stores are connected to one 'name' group and.
-    // FIXME: Run this test separately in CI, until we're able to test modules in isolation i.e. use jest.resetModule and re-import modules in each test
-    // Relevant issues https://github.com/nodejs/node/issues/35889
-    it('[CI-MATRIX-1] should create single connection for all indernal calls of .connect and `store` is not passed to .connect', async () => {
+    it('should create single connection for all internal calls of .connect and `store` is not passed to .connect', async () => {
-    // FIXME: Run this test separately in CI, until we're able to test modules in isolation i.e. use jest.resetModule and re-import modules in each test
-    // Relevant issues https://github.com/nodejs/node/issues/35889
-    it('[CI-MATRIX-2] should call `.init` on single connection with combined states after each `create(devtools` call', async () => {
+    it('should call `.init` on single connection with combined states after each `create(devtools` call', async () => {
-    // FIXME: Run this test separately in CI, until we're able to test modules in isolation i.e. use jest.resetModule and re-import modules in each test
-    // Relevant issues https://github.com/nodejs/node/issues/35889
-    it('[CI-MATRIX-3] should call `.init` on single connection with combined states after each `create(devtools` call', async () => {
+    it('should call `.init` on single connection with combined states after each `create(devtools` call', async () => {
-        // FIXME: Run this test separately in CI, until we're able to test modules in isolation i.e. use jest.resetModule and re-import modules in each test
-        // Relevant issues https://github.com/nodejs/node/issues/35889
-        it('[CI-MATRIX-4] does nothing even if there is `api.dispatch`, connections isolated from each other', async () => {
+        it('does nothing even if there is `api.dispatch`, connections isolated from each other', async () => {
-        // FIXME: Run this test separately in CI, until we're able to test modules in isolation i.e. use jest.resetModule and re-import modules in each test
-        // Relevant issues https://github.com/nodejs/node/issues/35889
-        it('[CI-MATRIX-5] dispatches with `api.dispatch` when `api.dispatchFromDevtools` is set to true, connections are isolated from each other', async () => {
+        it('dispatches with `api.dispatch` when `api.dispatchFromDevtools` is set to true, connections are isolated from each other', async () => {","-it('works in non-browser env', async () => {
-  const originalWindow = global.window
-  global.window = undefined as any
-
-  expect(() => {
-    createStore(devtools(() => ({ count: 0 }), { enabled: true }))
-  }).not.toThrow()
-
-  global.window = originalWindow
-})
-
-it('works in react native env', async () => {
-  const originalWindow = global.window
-  global.window = {} as any
-
-  expect(() => {
-    createStore(devtools(() => ({ count: 0 }), { enabled: true }))
-  }).not.toThrow()
-
-  global.window = originalWindow
+describe('different envs', () => {
+  let savedConsoleWarn: any
+  beforeEach(() => {
+    savedConsoleWarn = console.warn
+    console.warn = vi.fn()
+  })
+  afterEach(() => {
+    console.warn = savedConsoleWarn
+  })
+
+  it('works in non-browser env', async () => {
+    const originalWindow = global.window
+    global.window = undefined as any
+
+    expect(() => {
+      createStore(devtools(() => ({ count: 0 }), { enabled: true }))
+    }).not.toThrow()
+
+    global.window = originalWindow
+  })
+
+  it('works in react native env', async () => {
+    const originalWindow = global.window
+    global.window = {} as any
+
+    expect(() => {
+      createStore(devtools(() => ({ count: 0 }), { enabled: true }))
+    }).not.toThrow()
+
+    global.window = originalWindow
+  })","-it('works in non-browser env', async () => {
-  const originalWindow = global.window
-  global.window = undefined as any
-
-  expect(() => {
-    createStore(devtools(() => ({ count: 0 }), { enabled: true }))
-  }).not.toThrow()
-
-  global.window = originalWindow
-})
-
-it('works in react native env', async () => {
-  const originalWindow = global.window
-  global.window = {} as any
-
-  expect(() => {
-    createStore(devtools(() => ({ count: 0 }), { enabled: true }))
-  }).not.toThrow()
-
-  global.window = originalWindow
+describe('different envs', () => {
+  let savedConsoleWarn: any
+  beforeEach(() => {
+    savedConsoleWarn = console.warn
+    console.warn = vi.fn()
+  })
+  afterEach(() => {
+    console.warn = savedConsoleWarn
+  })
+
+  it('works in non-browser env', async () => {
+    const originalWindow = global.window
+    global.window = undefined as any
+
+    expect(() => {
+      createStore(devtools(() => ({ count: 0 }), { enabled: true }))
+    }).not.toThrow()
+
+    global.window = originalWindow
+  })
+
+  it('works in react native env', async () => {
+    const originalWindow = global.window
+    global.window = {} as any
+
+    expect(() => {
+      createStore(devtools(() => ({ count: 0 }), { enabled: true }))
+    }).not.toThrow()
+
+    global.window = originalWindow
+  })
- * [] if two stores are coonected to one 'name' group and.
+ * [] if two stores are connected to one 'name' group and.
-    // FIXME: Run this test separately in CI, until we're able to test modules in isolation i.e. use jest.resetModule and re-import modules in each test
-    // Relevant issues https://github.com/nodejs/node/issues/35889
-    it('[CI-MATRIX-1] should create single connection for all indernal calls of .connect and `store` is not passed to .connect', async () => {
+    it('should create single connection for all internal calls of .connect and `store` is not passed to .connect', async () => {
-    // FIXME: Run this test separately in CI, until we're able to test modules in isolation i.e. use jest.resetModule and re-import modules in each test
-    // Relevant issues https://github.com/nodejs/node/issues/35889
-    it('[CI-MATRIX-2] should call `.init` on single connection with combined states after each `create(devtools` call', async () => {
+    it('should call `.init` on single connection with combined states after each `create(devtools` call', async () => {
-    // FIXME: Run this test separately in CI, until we're able to test modules in isolation i.e. use jest.resetModule and re-import modules in each test
-    // Relevant issues https://github.com/nodejs/node/issues/35889
-    it('[CI-MATRIX-3] should call `.init` on single connection with combined states after each `create(devtools` call', async () => {
+    it('should call `.init` on single connection with combined states after each `create(devtools` call', async () => {
-        // FIXME: Run this test separately in CI, until we're able to test modules in isolation i.e. use jest.resetModule and re-import modules in each test
-        // Relevant issues https://github.com/nodejs/node/issues/35889
-        it('[CI-MATRIX-4] does nothing even if there is `api.dispatch`, connections isolated from each other', async () => {
+        it('does nothing even if there is `api.dispatch`, connections isolated from each other', async () => {
-        // FIXME: Run this test separately in CI, until we're able to test modules in isolation i.e. use jest.resetModule and re-import modules in each test
-        // Relevant issues https://github.com/nodejs/node/issues/35889
-        it('[CI-MATRIX-5] dispatches with `api.dispatch` when `api.dispatchFromDevtools` is set to true, connections are isolated from each other', async () => {
+        it('dispatches with `api.dispatch` when `api.dispatchFromDevtools` is set to true, connections are isolated from each other', async () => {"
pmndrs_zustand,77162b5ad71cfbdc9f30fb13cbaf0d8dc8aea7d1,Merge branch 'main' into v5,package.json,"-  ""version"": ""4.5.1"",
+  ""version"": ""5.0.0-alpha.3"",
+  ""publishConfig"": {
+    ""tag"": ""next""
+  },
-    ""<4.0"": {
+    "">=4.5"": {
-        ""ts3.4/*""
+        ""esm/*""
-        ""ts3.4/*""
+        ""*""
+      ]
+    },
+    ""*"": {
+      ""esm/*"": [
+        ""ts_version_4.5_and_above_is_required.d.ts""
+      ],
+      ""*"": [
+        ""ts_version_4.5_and_above_is_required.d.ts""
-  ""files"": [
-    ""**""
-  ],
-      ""module"": {
-        ""types"": ""./esm/index.d.ts"",
-        ""default"": ""./esm/index.js""
-      },
-    ""./vanilla"": {
+    ""./*"": {
-        ""types"": ""./esm/vanilla.d.mts"",
-        ""default"": ""./esm/vanilla.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/vanilla.d.ts"",
-        ""default"": ""./esm/vanilla.js""
+        ""types"": ""./esm/*.d.mts"",
+        ""default"": ""./esm/*.mjs""
-        ""types"": ""./vanilla.d.ts"",
-        ""default"": ""./vanilla.js""
-      }
-    },
-    ""./middleware"": {
-      ""import"": {
-        ""types"": ""./esm/middleware.d.mts"",
-        ""default"": ""./esm/middleware.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/middleware.d.ts"",
-        ""default"": ""./esm/middleware.js""
-      },
-      ""default"": {
-        ""types"": ""./middleware.d.ts"",
-        ""default"": ""./middleware.js""
-      }
-    },
-    ""./middleware/immer"": {
-      ""import"": {
-        ""types"": ""./esm/middleware/immer.d.mts"",
-        ""default"": ""./esm/middleware/immer.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/middleware/immer.d.ts"",
-        ""default"": ""./esm/middleware/immer.js""
-      },
-      ""default"": {
-        ""types"": ""./middleware/immer.d.ts"",
-        ""default"": ""./middleware/immer.js""
-      }
-    },
-    ""./shallow"": {
-      ""import"": {
-        ""types"": ""./esm/shallow.d.mts"",
-        ""default"": ""./esm/shallow.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/shallow.d.ts"",
-        ""default"": ""./esm/shallow.js""
-      },
-      ""default"": {
-        ""types"": ""./shallow.d.ts"",
-        ""default"": ""./shallow.js""
-      }
-    },
-    ""./vanilla/shallow"": {
-      ""import"": {
-        ""types"": ""./esm/vanilla/shallow.d.mts"",
-        ""default"": ""./esm/vanilla/shallow.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/vanilla/shallow.d.ts"",
-        ""default"": ""./esm/vanilla/shallow.js""
-      },
-      ""default"": {
-        ""types"": ""./vanilla/shallow.d.ts"",
-        ""default"": ""./vanilla/shallow.js""
-      }
-    },
-    ""./react/shallow"": {
-      ""import"": {
-        ""types"": ""./esm/react/shallow.d.mts"",
-        ""default"": ""./esm/react/shallow.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/react/shallow.d.ts"",
-        ""default"": ""./esm/react/shallow.js""
-      },
-      ""default"": {
-        ""types"": ""./react/shallow.d.ts"",
-        ""default"": ""./react/shallow.js""
-      }
-    },
-    ""./traditional"": {
-      ""import"": {
-        ""types"": ""./esm/traditional.d.mts"",
-        ""default"": ""./esm/traditional.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/traditional.d.ts"",
-        ""default"": ""./esm/traditional.js""
-      },
-      ""default"": {
-        ""types"": ""./traditional.d.ts"",
-        ""default"": ""./traditional.js""
-      }
-    },
-    ""./context"": {
-      ""import"": {
-        ""types"": ""./esm/context.d.mts"",
-        ""default"": ""./esm/context.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/context.d.ts"",
-        ""default"": ""./esm/context.js""
-      },
-      ""default"": {
-        ""types"": ""./context.d.ts"",
-        ""default"": ""./context.js""
+        ""types"": ""./*.d.ts"",
+        ""default"": ""./*.js""
+  ""files"": [
+    ""**""
+  ],
+    ""build:react"": ""rollup -c --config-react"",
-    ""build:context"": ""rollup -c --config-context"",
-    ""postbuild"": ""yarn patch-d-ts && yarn copy && yarn patch-esm-ts"",
+    ""postbuild"": ""yarn patch-d-ts && yarn copy && yarn patch-old-ts && yarn patch-esm-ts"",
-    ""copy"": ""shx cp -r dist/src/* dist/esm && shx cp -r dist/src/* dist && shx rm -rf dist/src && shx rm -rf dist/{src,tests} && downlevel-dts dist dist/ts3.4 && shx cp package.json readme.md LICENSE dist && json -I -f dist/package.json -e \""this.private=false; this.devDependencies=undefined; this.optionalDependencies=undefined; this.scripts=undefined; this.prettier=undefined;\"""",
-    ""patch-esm-ts"": ""node -e \""require('shelljs').find('dist/esm/**/*.d.ts').forEach(f=>{var f2=f.replace(/\\.ts$/,'.mts');require('fs').copyFileSync(f,f2);require('shelljs').sed('-i',/ from '(\\.[^']+)';$/,' from \\'\\$1.mjs\\';',f2);require('shelljs').sed('-i',/^declare module '(\\.[^']+)'/,'declare module \\'\\$1.mjs\\'',f2)})\""""
+    ""copy"": ""shx cp -r dist/src/* dist/esm && shx cp -r dist/src/* dist && shx rm -rf dist/src && shx rm -rf dist/{src,tests} && shx cp package.json readme.md LICENSE dist && json -I -f dist/package.json -e \""this.private=false; this.devDependencies=undefined; this.optionalDependencies=undefined; this.scripts=undefined; this.prettier=undefined;\"""",
+    ""patch-old-ts"": ""shx touch dist/ts_version_4.5_and_above_is_required.d.ts"",
+    ""patch-esm-ts"": ""node -e \""require('shelljs').find('dist/esm/**/*.d.ts').forEach(f=>{var f2=f.replace(/\\.ts$/,'.mts');require('fs').renameSync(f,f2);require('shelljs').sed('-i',/ from '(\\.[^']+)';$/,' from \\'\\$1.mjs\\';',f2);require('shelljs').sed('-i',/^declare module '(\\.[^']+)'/,'declare module \\'\\$1.mjs\\'',f2)})\""""
-    ""node"": "">=12.7.0""
+    ""node"": "">=12.20.0""
-  ""dependencies"": {
-    ""use-sync-external-store"": ""1.2.0""
-  },
-    ""@rollup/plugin-terser"": ""^0.4.4"",
-    ""downlevel-dts"": ""^0.11.0"",
+    ""use-sync-external-store"": ""^1.2.0"",
-    ""@types/react"": "">=16.8"",
+    ""@types/react"": "">=18.0"",
-    ""react"": "">=16.8""
+    ""react"": "">=18.0"",
+    ""use-sync-external-store"": "">=1.2.0""
+    },
+    ""use-sync-external-store"": {
+      ""optional"": true","-  ""version"": ""4.5.1"",
+  ""version"": ""4.5.2"",
-    ""@babel/core"": ""^7.23.9"",
+    ""@babel/core"": ""^7.24.0"",
-    ""@babel/plugin-transform-runtime"": ""^7.23.9"",
+    ""@babel/plugin-transform-runtime"": ""^7.24.0"",
-    ""@babel/preset-env"": ""^7.23.9"",
+    ""@babel/preset-env"": ""^7.24.0"",
-    ""@types/node"": ""^20.11.19"",
-    ""@types/react"": ""^18.2.55"",
+    ""@types/node"": ""^20.11.24"",
+    ""@types/react"": ""^18.2.61"",
-    ""@typescript-eslint/eslint-plugin"": ""^7.0.1"",
-    ""@typescript-eslint/parser"": ""^7.0.1"",
+    ""@typescript-eslint/eslint-plugin"": ""^7.1.0"",
+    ""@typescript-eslint/parser"": ""^7.1.0"",
-    ""esbuild"": ""^0.20.0"",
-    ""eslint"": ""^8.56.0"",
+    ""esbuild"": ""^0.20.1"",
+    ""eslint"": ""^8.57.0"",
-  }
+  },
+  ""packageManager"": ""yarn@1.22.21+sha256.dbed5b7e10c552ba0e1a545c948d5473bc6c5a28ce22a8fd27e493e3e5eb6370""","-  ""version"": ""4.5.1"",
+  ""version"": ""5.0.0-alpha.3"",
+  ""publishConfig"": {
+    ""tag"": ""next""
+  },
-    ""<4.0"": {
+    "">=4.5"": {
-        ""ts3.4/*""
+        ""esm/*""
-        ""ts3.4/*""
+        ""*""
+      ]
+    },
+    ""*"": {
+      ""esm/*"": [
+        ""ts_version_4.5_and_above_is_required.d.ts""
+      ],
+      ""*"": [
+        ""ts_version_4.5_and_above_is_required.d.ts""
-  ""files"": [
-    ""**""
-  ],
-      ""module"": {
-        ""types"": ""./esm/index.d.ts"",
-        ""default"": ""./esm/index.js""
-      },
-    ""./vanilla"": {
+    ""./*"": {
-        ""types"": ""./esm/vanilla.d.mts"",
-        ""default"": ""./esm/vanilla.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/vanilla.d.ts"",
-        ""default"": ""./esm/vanilla.js""
+        ""types"": ""./esm/*.d.mts"",
+        ""default"": ""./esm/*.mjs""
-        ""types"": ""./vanilla.d.ts"",
-        ""default"": ""./vanilla.js""
-      }
-    },
-    ""./middleware"": {
-      ""import"": {
-        ""types"": ""./esm/middleware.d.mts"",
-        ""default"": ""./esm/middleware.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/middleware.d.ts"",
-        ""default"": ""./esm/middleware.js""
-      },
-      ""default"": {
-        ""types"": ""./middleware.d.ts"",
-        ""default"": ""./middleware.js""
-      }
-    },
-    ""./middleware/immer"": {
-      ""import"": {
-        ""types"": ""./esm/middleware/immer.d.mts"",
-        ""default"": ""./esm/middleware/immer.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/middleware/immer.d.ts"",
-        ""default"": ""./esm/middleware/immer.js""
-      },
-      ""default"": {
-        ""types"": ""./middleware/immer.d.ts"",
-        ""default"": ""./middleware/immer.js""
-      }
-    },
-    ""./shallow"": {
-      ""import"": {
-        ""types"": ""./esm/shallow.d.mts"",
-        ""default"": ""./esm/shallow.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/shallow.d.ts"",
-        ""default"": ""./esm/shallow.js""
-      },
-      ""default"": {
-        ""types"": ""./shallow.d.ts"",
-        ""default"": ""./shallow.js""
-      }
-    },
-    ""./vanilla/shallow"": {
-      ""import"": {
-        ""types"": ""./esm/vanilla/shallow.d.mts"",
-        ""default"": ""./esm/vanilla/shallow.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/vanilla/shallow.d.ts"",
-        ""default"": ""./esm/vanilla/shallow.js""
-      },
-      ""default"": {
-        ""types"": ""./vanilla/shallow.d.ts"",
-        ""default"": ""./vanilla/shallow.js""
-      }
-    },
-    ""./react/shallow"": {
-      ""import"": {
-        ""types"": ""./esm/react/shallow.d.mts"",
-        ""default"": ""./esm/react/shallow.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/react/shallow.d.ts"",
-        ""default"": ""./esm/react/shallow.js""
-      },
-      ""default"": {
-        ""types"": ""./react/shallow.d.ts"",
-        ""default"": ""./react/shallow.js""
-      }
-    },
-    ""./traditional"": {
-      ""import"": {
-        ""types"": ""./esm/traditional.d.mts"",
-        ""default"": ""./esm/traditional.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/traditional.d.ts"",
-        ""default"": ""./esm/traditional.js""
-      },
-      ""default"": {
-        ""types"": ""./traditional.d.ts"",
-        ""default"": ""./traditional.js""
-      }
-    },
-    ""./context"": {
-      ""import"": {
-        ""types"": ""./esm/context.d.mts"",
-        ""default"": ""./esm/context.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/context.d.ts"",
-        ""default"": ""./esm/context.js""
-      },
-      ""default"": {
-        ""types"": ""./context.d.ts"",
-        ""default"": ""./context.js""
+        ""types"": ""./*.d.ts"",
+        ""default"": ""./*.js""
+  ""files"": [
+    ""**""
+  ],
+    ""build:react"": ""rollup -c --config-react"",
-    ""build:context"": ""rollup -c --config-context"",
-    ""postbuild"": ""yarn patch-d-ts && yarn copy && yarn patch-esm-ts"",
+    ""postbuild"": ""yarn patch-d-ts && yarn copy && yarn patch-old-ts && yarn patch-esm-ts"",
-    ""copy"": ""shx cp -r dist/src/* dist/esm && shx cp -r dist/src/* dist && shx rm -rf dist/src && shx rm -rf dist/{src,tests} && downlevel-dts dist dist/ts3.4 && shx cp package.json readme.md LICENSE dist && json -I -f dist/package.json -e \""this.private=false; this.devDependencies=undefined; this.optionalDependencies=undefined; this.scripts=undefined; this.prettier=undefined;\"""",
-    ""patch-esm-ts"": ""node -e \""require('shelljs').find('dist/esm/**/*.d.ts').forEach(f=>{var f2=f.replace(/\\.ts$/,'.mts');require('fs').copyFileSync(f,f2);require('shelljs').sed('-i',/ from '(\\.[^']+)';$/,' from \\'\\$1.mjs\\';',f2);require('shelljs').sed('-i',/^declare module '(\\.[^']+)'/,'declare module \\'\\$1.mjs\\'',f2)})\""""
+    ""copy"": ""shx cp -r dist/src/* dist/esm && shx cp -r dist/src/* dist && shx rm -rf dist/src && shx rm -rf dist/{src,tests} && shx cp package.json readme.md LICENSE dist && json -I -f dist/package.json -e \""this.private=false; this.devDependencies=undefined; this.optionalDependencies=undefined; this.scripts=undefined; this.prettier=undefined;\"""",
+    ""patch-old-ts"": ""shx touch dist/ts_version_4.5_and_above_is_required.d.ts"",
+    ""patch-esm-ts"": ""node -e \""require('shelljs').find('dist/esm/**/*.d.ts').forEach(f=>{var f2=f.replace(/\\.ts$/,'.mts');require('fs').renameSync(f,f2);require('shelljs').sed('-i',/ from '(\\.[^']+)';$/,' from \\'\\$1.mjs\\';',f2);require('shelljs').sed('-i',/^declare module '(\\.[^']+)'/,'declare module \\'\\$1.mjs\\'',f2)})\""""
-    ""node"": "">=12.7.0""
+    ""node"": "">=12.20.0""
-  ""dependencies"": {
-    ""use-sync-external-store"": ""1.2.0""
-  },
-    ""@babel/core"": ""^7.23.9"",
+    ""@babel/core"": ""^7.24.0"",
-    ""@babel/plugin-transform-runtime"": ""^7.23.9"",
+    ""@babel/plugin-transform-runtime"": ""^7.24.0"",
-    ""@babel/preset-env"": ""^7.23.9"",
+    ""@babel/preset-env"": ""^7.24.0"",
-    ""@rollup/plugin-terser"": ""^0.4.4"",
-    ""@types/node"": ""^20.11.19"",
-    ""@types/react"": ""^18.2.55"",
+    ""@types/node"": ""^20.11.24"",
+    ""@types/react"": ""^18.2.61"",
-    ""@typescript-eslint/eslint-plugin"": ""^7.0.1"",
-    ""@typescript-eslint/parser"": ""^7.0.1"",
+    ""@typescript-eslint/eslint-plugin"": ""^7.1.0"",
+    ""@typescript-eslint/parser"": ""^7.1.0"",
-    ""downlevel-dts"": ""^0.11.0"",
-    ""esbuild"": ""^0.20.0"",
-    ""eslint"": ""^8.56.0"",
+    ""esbuild"": ""^0.20.1"",
+    ""eslint"": ""^8.57.0"",
+    ""use-sync-external-store"": ""^1.2.0"",
-    ""@types/react"": "">=16.8"",
+    ""@types/react"": "">=18.0"",
-    ""react"": "">=16.8""
+    ""react"": "">=18.0"",
+    ""use-sync-external-store"": "">=1.2.0""
+    },
+    ""use-sync-external-store"": {
+      ""optional"": true
-  }
+  },
+  ""packageManager"": ""yarn@1.22.21+sha256.dbed5b7e10c552ba0e1a545c948d5473bc6c5a28ce22a8fd27e493e3e5eb6370"""
pmndrs_zustand,77162b5ad71cfbdc9f30fb13cbaf0d8dc8aea7d1,Merge branch 'main' into v5,rollup.config.js,"-const terser = require('@rollup/plugin-terser')
-const createBabelConfig = require('./babel.config.js')
-const entries = [{ find: /.*\/vanilla\.ts$/, replacement: 'zustand/vanilla' }]
+const entries = [
+  { find: /.*\/vanilla\/shallow\.ts$/, replacement: 'zustand/vanilla/shallow' },
+  { find: /.*\/react\/shallow\.ts$/, replacement: 'zustand/react/shallow' },
+  { find: /.*\/vanilla\.ts$/, replacement: 'zustand/vanilla' },
+  { find: /.*\/react\.ts$/, replacement: 'zustand/react' },
+]
-    ...createBabelConfig({ env: (env) => env === 'build' }, targets),
+    babelrc: false,
+    ignore: ['./node_modules'],
+    presets: [['@babel/preset-env', { loose: true, modules: false, targets }]],
+    plugins: [
+      ['@babel/plugin-transform-react-jsx', { runtime: 'automatic' }],
+      ['@babel/plugin-transform-typescript', { isTSX: true }],
+    ],
-        // a workround for #829
+        // a workaround for #829
-function createCommonJSConfig(input, output, options) {
+function createCommonJSConfig(input, output) {
-      outro: options.addModuleExport
-        ? [
-            `module.exports = ${options.addModuleExport.default};`,
-            ...Object.entries(options.addModuleExport)
-              .filter(([key]) => key !== 'default')
-              .map(([key, value]) => `module.exports.${key} = ${value};`),
-            `exports.default = module.exports;`,
-          ].join('\n')
-        : '',
-function createUMDConfig(input, output, env) {
-  let name = 'zustand'
-  const fileName = output.slice('dist/umd/'.length)
-  const capitalize = (s) => s.slice(0, 1).toUpperCase() + s.slice(1)
-  if (fileName !== 'index') {
-    name += fileName.replace(/(\w+)\W*/g, (_, p) => capitalize(p))
-  }
-  return {
-    input,
-    output: {
-      file: `${output}.${env}.js`,
-      format: 'umd',
-      name,
-      globals: {
-        react: 'React',
-        immer: 'immer',
-        // FIXME not yet supported
-        'use-sync-external-store/shim/with-selector':
-          'useSyncExternalStoreShimWithSelector',
-        'zustand/vanilla': 'zustandVanilla',
-      },
-    },
-    external,
-    plugins: [
-      alias({ entries: entries.filter((e) => !e.find.test(input)) }),
-      resolve({ extensions }),
-      replace({
-        'import.meta.env?.MODE': JSON.stringify(env),
-        delimiters: ['\\b', '\\b(?!(\\.|/))'],
-        preventAssignment: true,
-      }),
-      babelPlugin(getBabelOptions({ ie: 11 })),
-      ...(env === 'production' ? [terser()] : []),
-    ],
-  }
-}
-
-function createSystemConfig(input, output, env) {
-  return {
-    input,
-    output: {
-      file: `${output}.${env}.js`,
-      format: 'system',
-    },
-    external,
-    plugins: [
-      alias({ entries: entries.filter((e) => !e.find.test(input)) }),
-      resolve({ extensions }),
-      replace({
-        'import.meta.env?.MODE': JSON.stringify(env),
-        delimiters: ['\\b', '\\b(?!(\\.|/))'],
-        preventAssignment: true,
-      }),
-      getEsbuild('node12', env),
-    ],
-  }
-}
-
-    createCommonJSConfig(`src/${c}.ts`, `dist/${c}`, {
-      addModuleExport: {
-        index: {
-          default: 'react',
-          create: 'create',
-          useStore: 'useStore',
-          createStore: 'vanilla.createStore',
-        },
-        vanilla: { default: 'vanilla', createStore: 'createStore' },
-        shallow: { default: 'shallow', shallow: 'shallow$1' },
-      }[c],
-    }),
-    createESMConfig(`src/${c}.ts`, `dist/esm/${c}.js`),
-    createESMConfig(`src/${c}.ts`, `dist/esm/${c}.mjs`),
-    createUMDConfig(`src/${c}.ts`, `dist/umd/${c}`, 'development'),
-    createUMDConfig(`src/${c}.ts`, `dist/umd/${c}`, 'production'),
-    createSystemConfig(`src/${c}.ts`, `dist/system/${c}`, 'development'),
-    createSystemConfig(`src/${c}.ts`, `dist/system/${c}`, 'production'),
+    createCommonJSConfig(`src/${c}.ts`, `dist/${c}`),
+    createESMConfig(`src/${c}.ts`, `dist/esm/${c}.mjs`), // just for testing sed -e flag","-function getEsbuild(target, env = 'development') {
+function getEsbuild(env = 'development') {
-    target,
+    target: 'es2018',
+    supported: { 'import-meta': true },
-      getEsbuild('node12'),
+      getEsbuild(),
-      getEsbuild('node12', env),
+      getEsbuild(env),","-const terser = require('@rollup/plugin-terser')
-const createBabelConfig = require('./babel.config.js')
-const entries = [{ find: /.*\/vanilla\.ts$/, replacement: 'zustand/vanilla' }]
+const entries = [
+  { find: /.*\/vanilla\/shallow\.ts$/, replacement: 'zustand/vanilla/shallow' },
+  { find: /.*\/react\/shallow\.ts$/, replacement: 'zustand/react/shallow' },
+  { find: /.*\/vanilla\.ts$/, replacement: 'zustand/vanilla' },
+  { find: /.*\/react\.ts$/, replacement: 'zustand/react' },
+]
-    ...createBabelConfig({ env: (env) => env === 'build' }, targets),
+    babelrc: false,
+    ignore: ['./node_modules'],
+    presets: [['@babel/preset-env', { loose: true, modules: false, targets }]],
+    plugins: [
+      ['@babel/plugin-transform-react-jsx', { runtime: 'automatic' }],
+      ['@babel/plugin-transform-typescript', { isTSX: true }],
+    ],
-function getEsbuild(target, env = 'development') {
+function getEsbuild(env = 'development') {
-    target,
+    target: 'es2018',
+    supported: { 'import-meta': true },
-        // a workround for #829
+        // a workaround for #829
-      getEsbuild('node12'),
+      getEsbuild(),
-function createCommonJSConfig(input, output, options) {
+function createCommonJSConfig(input, output) {
-      outro: options.addModuleExport
-        ? [
-            `module.exports = ${options.addModuleExport.default};`,
-            ...Object.entries(options.addModuleExport)
-              .filter(([key]) => key !== 'default')
-              .map(([key, value]) => `module.exports.${key} = ${value};`),
-            `exports.default = module.exports;`,
-          ].join('\n')
-        : '',
-function createUMDConfig(input, output, env) {
-  let name = 'zustand'
-  const fileName = output.slice('dist/umd/'.length)
-  const capitalize = (s) => s.slice(0, 1).toUpperCase() + s.slice(1)
-  if (fileName !== 'index') {
-    name += fileName.replace(/(\w+)\W*/g, (_, p) => capitalize(p))
-  }
-  return {
-    input,
-    output: {
-      file: `${output}.${env}.js`,
-      format: 'umd',
-      name,
-      globals: {
-        react: 'React',
-        immer: 'immer',
-        // FIXME not yet supported
-        'use-sync-external-store/shim/with-selector':
-          'useSyncExternalStoreShimWithSelector',
-        'zustand/vanilla': 'zustandVanilla',
-      },
-    },
-    external,
-    plugins: [
-      alias({ entries: entries.filter((e) => !e.find.test(input)) }),
-      resolve({ extensions }),
-      replace({
-        'import.meta.env?.MODE': JSON.stringify(env),
-        delimiters: ['\\b', '\\b(?!(\\.|/))'],
-        preventAssignment: true,
-      }),
-      babelPlugin(getBabelOptions({ ie: 11 })),
-      ...(env === 'production' ? [terser()] : []),
-    ],
-  }
-}
-
-function createSystemConfig(input, output, env) {
-  return {
-    input,
-    output: {
-      file: `${output}.${env}.js`,
-      format: 'system',
-    },
-    external,
-    plugins: [
-      alias({ entries: entries.filter((e) => !e.find.test(input)) }),
-      resolve({ extensions }),
-      replace({
-        'import.meta.env?.MODE': JSON.stringify(env),
-        delimiters: ['\\b', '\\b(?!(\\.|/))'],
-        preventAssignment: true,
-      }),
-      getEsbuild('node12', env),
-    ],
-  }
-}
-
-    createCommonJSConfig(`src/${c}.ts`, `dist/${c}`, {
-      addModuleExport: {
-        index: {
-          default: 'react',
-          create: 'create',
-          useStore: 'useStore',
-          createStore: 'vanilla.createStore',
-        },
-        vanilla: { default: 'vanilla', createStore: 'createStore' },
-        shallow: { default: 'shallow', shallow: 'shallow$1' },
-      }[c],
-    }),
-    createESMConfig(`src/${c}.ts`, `dist/esm/${c}.js`),
-    createESMConfig(`src/${c}.ts`, `dist/esm/${c}.mjs`),
-    createUMDConfig(`src/${c}.ts`, `dist/umd/${c}`, 'development'),
-    createUMDConfig(`src/${c}.ts`, `dist/umd/${c}`, 'production'),
-    createSystemConfig(`src/${c}.ts`, `dist/system/${c}`, 'development'),
-    createSystemConfig(`src/${c}.ts`, `dist/system/${c}`, 'production'),
+    createCommonJSConfig(`src/${c}.ts`, `dist/${c}`),
+    createESMConfig(`src/${c}.ts`, `dist/esm/${c}.mjs`), // just for testing sed -e flag"
pmndrs_zustand,77162b5ad71cfbdc9f30fb13cbaf0d8dc8aea7d1,Merge branch 'main' into v5,src/middleware/persist.ts,"-   * @deprecated Use `storage` instead.
-   * A function returning a storage.
-   * The storage must fit `window.localStorage`'s api (or an async version of it).
-   * For example the storage could be `AsyncStorage` from React Native.
-   *
-   * @default () => localStorage
-   */
-  getStorage?: () => StateStorage
-  /**
-   * @deprecated Use `storage` instead.
-   * Use a custom serializer.
-   * The returned string will be stored in the storage.
-   *
-   * @default JSON.stringify
-   */
-  serialize?: (state: StorageValue<S>) => string | Promise<string>
-  /**
-   * @deprecated Use `storage` instead.
-   * Use a custom deserializer.
-   * Must return an object matching StorageValue<S>
-   *
-   * @param str The storage's current value.
-   * @default JSON.parse
-   */
-  deserialize?: (
-    str: string,
-  ) => StorageValue<PersistedState> | Promise<StorageValue<PersistedState>>
-  /**
-const oldImpl: PersistImpl = (config, baseOptions) => (set, get, api) => {
-  type S = ReturnType<typeof config>
-  let options = {
-    getStorage: () => localStorage,
-    serialize: JSON.stringify as (state: StorageValue<S>) => string,
-    deserialize: JSON.parse as (str: string) => StorageValue<S>,
-    partialize: (state: S) => state,
-    version: 0,
-    merge: (persistedState: unknown, currentState: S) => ({
-      ...currentState,
-      ...(persistedState as object),
-    }),
-    ...baseOptions,
-  }
-
-  let hasHydrated = false
-  const hydrationListeners = new Set<PersistListener<S>>()
-  const finishHydrationListeners = new Set<PersistListener<S>>()
-  let storage: StateStorage | undefined
-
-  try {
-    storage = options.getStorage()
-  } catch (e) {
-    // prevent error if the storage is not defined (e.g. when server side rendering a page)
-  }
-
-  if (!storage) {
-    return config(
-      (...args) => {
-        console.warn(
-          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`,
-        )
-        set(...args)
-      },
-      get,
-      api,
-    )
-  }
-
-  const thenableSerialize = toThenable(options.serialize)
-
-  const setItem = (): Thenable<void> => {
-    const state = options.partialize({ ...get() })
-
-    let errorInSync: Error | undefined
-    const thenable = thenableSerialize({ state, version: options.version })
-      .then((serializedValue) =>
-        (storage as StateStorage).setItem(options.name, serializedValue),
-      )
-      .catch((e) => {
-        errorInSync = e
-      })
-    if (errorInSync) {
-      throw errorInSync
-    }
-    return thenable
-  }
-
-  const savedSetState = api.setState
-
-  api.setState = (state, replace) => {
-    savedSetState(state, replace)
-    void setItem()
-  }
-
-  const configResult = config(
-    (...args) => {
-      set(...args)
-      void setItem()
-    },
-    get,
-    api,
-  )
-
-  // a workaround to solve the issue of not storing rehydrated state in sync storage
-  // the set(state) value would be later overridden with initial state by create()
-  // to avoid this, we merge the state from localStorage into the initial state.
-  let stateFromStorage: S | undefined
-
-  // rehydrate initial state with existing stored state
-  const hydrate = () => {
-    if (!storage) return
-
-    hasHydrated = false
-    hydrationListeners.forEach((cb) => cb(get()))
-
-    const postRehydrationCallback =
-      options.onRehydrateStorage?.(get()) || undefined
-
-    // bind is used to avoid `TypeError: Illegal invocation` error
-    return toThenable(storage.getItem.bind(storage))(options.name)
-      .then((storageValue) => {
-        if (storageValue) {
-          return options.deserialize(storageValue)
-        }
-      })
-      .then((deserializedStorageValue) => {
-        if (deserializedStorageValue) {
-          if (
-            typeof deserializedStorageValue.version === 'number' &&
-            deserializedStorageValue.version !== options.version
-          ) {
-            if (options.migrate) {
-              return options.migrate(
-                deserializedStorageValue.state,
-                deserializedStorageValue.version,
-              )
-            }
-            console.error(
-              `State loaded from storage couldn't be migrated since no migrate function was provided`,
-            )
-          } else {
-            return deserializedStorageValue.state
-          }
-        }
-      })
-      .then((migratedState) => {
-        stateFromStorage = options.merge(
-          migratedState as S,
-          get() ?? configResult,
-        )
-
-        set(stateFromStorage as S, true)
-        return setItem()
-      })
-      .then(() => {
-        postRehydrationCallback?.(stateFromStorage, undefined)
-        hasHydrated = true
-        finishHydrationListeners.forEach((cb) => cb(stateFromStorage as S))
-      })
-      .catch((e: Error) => {
-        postRehydrationCallback?.(undefined, e)
-      })
-  }
-
-  ;(api as StoreApi<S> & StorePersist<S, S>).persist = {
-    setOptions: (newOptions) => {
-      options = {
-        ...options,
-        ...newOptions,
-      }
-
-      if (newOptions.getStorage) {
-        storage = newOptions.getStorage()
-      }
-    },
-    clearStorage: () => {
-      storage?.removeItem(options.name)
-    },
-    getOptions: () => options,
-    rehydrate: () => hydrate() as Promise<void>,
-    hasHydrated: () => hasHydrated,
-    onHydrate: (cb) => {
-      hydrationListeners.add(cb)
-
-      return () => {
-        hydrationListeners.delete(cb)
-      }
-    },
-    onFinishHydration: (cb) => {
-      finishHydrationListeners.add(cb)
-
-      return () => {
-        finishHydrationListeners.delete(cb)
-      }
-    },
-  }
-
-  hydrate()
-
-  return stateFromStorage || configResult
-}
-
-const newImpl: PersistImpl = (config, baseOptions) => (set, get, api) => {
+const persistImpl: PersistImpl = (config, baseOptions) => (set, get, api) => {
-const persistImpl: PersistImpl = (config, baseOptions) => {
-  if (
-    'getStorage' in baseOptions ||
-    'serialize' in baseOptions ||
-    'deserialize' in baseOptions
-  ) {
-    if (import.meta.env?.MODE !== 'production') {
-      console.warn(
-        '[DEPRECATED] `getStorage`, `serialize` and `deserialize` options are deprecated. Use `storage` option instead.',
-      )
-    }
-    return oldImpl(config, baseOptions)
-  }
-  return newImpl(config, baseOptions)
-}
-","-  migrate?: (persistedState: unknown, version: number) => S | Promise<S>
+  migrate?: (
+    persistedState: unknown,
+    version: number,
+  ) => PersistedState | Promise<PersistedState>","-   * @deprecated Use `storage` instead.
-   * A function returning a storage.
-   * The storage must fit `window.localStorage`'s api (or an async version of it).
-   * For example the storage could be `AsyncStorage` from React Native.
-   *
-   * @default () => localStorage
-   */
-  getStorage?: () => StateStorage
-  /**
-   * @deprecated Use `storage` instead.
-   * Use a custom serializer.
-   * The returned string will be stored in the storage.
-   *
-   * @default JSON.stringify
-   */
-  serialize?: (state: StorageValue<S>) => string | Promise<string>
-  /**
-   * @deprecated Use `storage` instead.
-   * Use a custom deserializer.
-   * Must return an object matching StorageValue<S>
-   *
-   * @param str The storage's current value.
-   * @default JSON.parse
-   */
-  deserialize?: (
-    str: string,
-  ) => StorageValue<PersistedState> | Promise<StorageValue<PersistedState>>
-  /**
-  migrate?: (persistedState: unknown, version: number) => S | Promise<S>
+  migrate?: (
+    persistedState: unknown,
+    version: number,
+  ) => PersistedState | Promise<PersistedState>
-const oldImpl: PersistImpl = (config, baseOptions) => (set, get, api) => {
-  type S = ReturnType<typeof config>
-  let options = {
-    getStorage: () => localStorage,
-    serialize: JSON.stringify as (state: StorageValue<S>) => string,
-    deserialize: JSON.parse as (str: string) => StorageValue<S>,
-    partialize: (state: S) => state,
-    version: 0,
-    merge: (persistedState: unknown, currentState: S) => ({
-      ...currentState,
-      ...(persistedState as object),
-    }),
-    ...baseOptions,
-  }
-
-  let hasHydrated = false
-  const hydrationListeners = new Set<PersistListener<S>>()
-  const finishHydrationListeners = new Set<PersistListener<S>>()
-  let storage: StateStorage | undefined
-
-  try {
-    storage = options.getStorage()
-  } catch (e) {
-    // prevent error if the storage is not defined (e.g. when server side rendering a page)
-  }
-
-  if (!storage) {
-    return config(
-      (...args) => {
-        console.warn(
-          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`,
-        )
-        set(...args)
-      },
-      get,
-      api,
-    )
-  }
-
-  const thenableSerialize = toThenable(options.serialize)
-
-  const setItem = (): Thenable<void> => {
-    const state = options.partialize({ ...get() })
-
-    let errorInSync: Error | undefined
-    const thenable = thenableSerialize({ state, version: options.version })
-      .then((serializedValue) =>
-        (storage as StateStorage).setItem(options.name, serializedValue),
-      )
-      .catch((e) => {
-        errorInSync = e
-      })
-    if (errorInSync) {
-      throw errorInSync
-    }
-    return thenable
-  }
-
-  const savedSetState = api.setState
-
-  api.setState = (state, replace) => {
-    savedSetState(state, replace)
-    void setItem()
-  }
-
-  const configResult = config(
-    (...args) => {
-      set(...args)
-      void setItem()
-    },
-    get,
-    api,
-  )
-
-  // a workaround to solve the issue of not storing rehydrated state in sync storage
-  // the set(state) value would be later overridden with initial state by create()
-  // to avoid this, we merge the state from localStorage into the initial state.
-  let stateFromStorage: S | undefined
-
-  // rehydrate initial state with existing stored state
-  const hydrate = () => {
-    if (!storage) return
-
-    hasHydrated = false
-    hydrationListeners.forEach((cb) => cb(get()))
-
-    const postRehydrationCallback =
-      options.onRehydrateStorage?.(get()) || undefined
-
-    // bind is used to avoid `TypeError: Illegal invocation` error
-    return toThenable(storage.getItem.bind(storage))(options.name)
-      .then((storageValue) => {
-        if (storageValue) {
-          return options.deserialize(storageValue)
-        }
-      })
-      .then((deserializedStorageValue) => {
-        if (deserializedStorageValue) {
-          if (
-            typeof deserializedStorageValue.version === 'number' &&
-            deserializedStorageValue.version !== options.version
-          ) {
-            if (options.migrate) {
-              return options.migrate(
-                deserializedStorageValue.state,
-                deserializedStorageValue.version,
-              )
-            }
-            console.error(
-              `State loaded from storage couldn't be migrated since no migrate function was provided`,
-            )
-          } else {
-            return deserializedStorageValue.state
-          }
-        }
-      })
-      .then((migratedState) => {
-        stateFromStorage = options.merge(
-          migratedState as S,
-          get() ?? configResult,
-        )
-
-        set(stateFromStorage as S, true)
-        return setItem()
-      })
-      .then(() => {
-        postRehydrationCallback?.(stateFromStorage, undefined)
-        hasHydrated = true
-        finishHydrationListeners.forEach((cb) => cb(stateFromStorage as S))
-      })
-      .catch((e: Error) => {
-        postRehydrationCallback?.(undefined, e)
-      })
-  }
-
-  ;(api as StoreApi<S> & StorePersist<S, S>).persist = {
-    setOptions: (newOptions) => {
-      options = {
-        ...options,
-        ...newOptions,
-      }
-
-      if (newOptions.getStorage) {
-        storage = newOptions.getStorage()
-      }
-    },
-    clearStorage: () => {
-      storage?.removeItem(options.name)
-    },
-    getOptions: () => options,
-    rehydrate: () => hydrate() as Promise<void>,
-    hasHydrated: () => hasHydrated,
-    onHydrate: (cb) => {
-      hydrationListeners.add(cb)
-
-      return () => {
-        hydrationListeners.delete(cb)
-      }
-    },
-    onFinishHydration: (cb) => {
-      finishHydrationListeners.add(cb)
-
-      return () => {
-        finishHydrationListeners.delete(cb)
-      }
-    },
-  }
-
-  hydrate()
-
-  return stateFromStorage || configResult
-}
-
-const newImpl: PersistImpl = (config, baseOptions) => (set, get, api) => {
+const persistImpl: PersistImpl = (config, baseOptions) => (set, get, api) => {
-const persistImpl: PersistImpl = (config, baseOptions) => {
-  if (
-    'getStorage' in baseOptions ||
-    'serialize' in baseOptions ||
-    'deserialize' in baseOptions
-  ) {
-    if (import.meta.env?.MODE !== 'production') {
-      console.warn(
-        '[DEPRECATED] `getStorage`, `serialize` and `deserialize` options are deprecated. Use `storage` option instead.',
-      )
-    }
-    return oldImpl(config, baseOptions)
-  }
-  return newImpl(config, baseOptions)
-}
-"
pmndrs_zustand,77162b5ad71cfbdc9f30fb13cbaf0d8dc8aea7d1,Merge branch 'main' into v5,src/vanilla/shallow.ts,"-      !Object.prototype.hasOwnProperty.call(objB, keysA[i] as string) ||
+      !Object.hasOwn(objB, keysA[i] as string) ||","-  for (let i = 0; i < keysA.length; i++) {
+  for (const keyA of keysA) {
-      !Object.prototype.hasOwnProperty.call(objB, keysA[i] as string) ||
-      !Object.is(objA[keysA[i] as keyof T], objB[keysA[i] as keyof T])
+      !Object.prototype.hasOwnProperty.call(objB, keyA as string) ||
+      !Object.is(objA[keyA as keyof T], objB[keyA as keyof T])","-  for (let i = 0; i < keysA.length; i++) {
+  for (const keyA of keysA) {
-      !Object.prototype.hasOwnProperty.call(objB, keysA[i] as string) ||
-      !Object.is(objA[keysA[i] as keyof T], objB[keysA[i] as keyof T])
+      !Object.hasOwn(objB, keyA as string) ||
+      !Object.is(objA[keyA as keyof T], objB[keyA as keyof T])"
pmndrs_zustand,7868b8c005e8b872b1d64d956f1c6ef5fee16986,Merge branch 'main' into v5,package.json,"-  ""version"": ""4.5.0"",
+  ""version"": ""5.0.0-alpha.2"",
+  ""publishConfig"": {
+    ""tag"": ""next""
+  },
-    ""<4.0"": {
+    "">=4.5"": {
-        ""ts3.4/*""
+        ""esm/*""
-        ""ts3.4/*""
+        ""*""
+      ]
+    },
+    ""*"": {
+      ""esm/*"": [
+        ""ts_version_4.5_and_above_is_required.d.ts""
+      ],
+      ""*"": [
+        ""ts_version_4.5_and_above_is_required.d.ts""
-  ""files"": [
-    ""**""
-  ],
-      ""module"": {
-        ""types"": ""./esm/index.d.ts"",
-        ""default"": ""./esm/index.js""
-      },
-    ""./vanilla"": {
+    ""./*"": {
-        ""types"": ""./esm/vanilla.d.mts"",
-        ""default"": ""./esm/vanilla.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/vanilla.d.ts"",
-        ""default"": ""./esm/vanilla.js""
+        ""types"": ""./esm/*.d.mts"",
+        ""default"": ""./esm/*.mjs""
-        ""types"": ""./vanilla.d.ts"",
-        ""default"": ""./vanilla.js""
-      }
-    },
-    ""./middleware"": {
-      ""import"": {
-        ""types"": ""./esm/middleware.d.mts"",
-        ""default"": ""./esm/middleware.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/middleware.d.ts"",
-        ""default"": ""./esm/middleware.js""
-      },
-      ""default"": {
-        ""types"": ""./middleware.d.ts"",
-        ""default"": ""./middleware.js""
-      }
-    },
-    ""./middleware/immer"": {
-      ""import"": {
-        ""types"": ""./esm/middleware/immer.d.mts"",
-        ""default"": ""./esm/middleware/immer.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/middleware/immer.d.ts"",
-        ""default"": ""./esm/middleware/immer.js""
-      },
-      ""default"": {
-        ""types"": ""./middleware/immer.d.ts"",
-        ""default"": ""./middleware/immer.js""
-      }
-    },
-    ""./shallow"": {
-      ""import"": {
-        ""types"": ""./esm/shallow.d.mts"",
-        ""default"": ""./esm/shallow.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/shallow.d.ts"",
-        ""default"": ""./esm/shallow.js""
-      },
-      ""default"": {
-        ""types"": ""./shallow.d.ts"",
-        ""default"": ""./shallow.js""
-      }
-    },
-    ""./vanilla/shallow"": {
-      ""import"": {
-        ""types"": ""./esm/vanilla/shallow.d.mts"",
-        ""default"": ""./esm/vanilla/shallow.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/vanilla/shallow.d.ts"",
-        ""default"": ""./esm/vanilla/shallow.js""
-      },
-      ""default"": {
-        ""types"": ""./vanilla/shallow.d.ts"",
-        ""default"": ""./vanilla/shallow.js""
-      }
-    },
-    ""./react/shallow"": {
-      ""import"": {
-        ""types"": ""./esm/react/shallow.d.mts"",
-        ""default"": ""./esm/react/shallow.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/react/shallow.d.ts"",
-        ""default"": ""./esm/react/shallow.js""
-      },
-      ""default"": {
-        ""types"": ""./react/shallow.d.ts"",
-        ""default"": ""./react/shallow.js""
-      }
-    },
-    ""./traditional"": {
-      ""import"": {
-        ""types"": ""./esm/traditional.d.mts"",
-        ""default"": ""./esm/traditional.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/traditional.d.ts"",
-        ""default"": ""./esm/traditional.js""
-      },
-      ""default"": {
-        ""types"": ""./traditional.d.ts"",
-        ""default"": ""./traditional.js""
-      }
-    },
-    ""./context"": {
-      ""import"": {
-        ""types"": ""./esm/context.d.mts"",
-        ""default"": ""./esm/context.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/context.d.ts"",
-        ""default"": ""./esm/context.js""
-      },
-      ""default"": {
-        ""types"": ""./context.d.ts"",
-        ""default"": ""./context.js""
+        ""types"": ""./*.d.ts"",
+        ""default"": ""./*.js""
+  ""files"": [
+    ""**""
+  ],
+    ""build:react"": ""rollup -c --config-react"",
-    ""build:context"": ""rollup -c --config-context"",
-    ""postbuild"": ""yarn patch-d-ts && yarn copy && yarn patch-esm-ts"",
+    ""postbuild"": ""yarn patch-d-ts && yarn copy && yarn patch-old-ts && yarn patch-esm-ts"",
-    ""copy"": ""shx cp -r dist/src/* dist/esm && shx cp -r dist/src/* dist && shx rm -rf dist/src && shx rm -rf dist/{src,tests} && downlevel-dts dist dist/ts3.4 && shx cp package.json readme.md LICENSE dist && json -I -f dist/package.json -e \""this.private=false; this.devDependencies=undefined; this.optionalDependencies=undefined; this.scripts=undefined; this.prettier=undefined;\"""",
-    ""patch-esm-ts"": ""node -e \""require('shelljs').find('dist/esm/**/*.d.ts').forEach(f=>{var f2=f.replace(/\\.ts$/,'.mts');require('fs').copyFileSync(f,f2);require('shelljs').sed('-i',/ from '(\\.[^']+)';$/,' from \\'\\$1.mjs\\';',f2);require('shelljs').sed('-i',/^declare module '(\\.[^']+)'/,'declare module \\'\\$1.mjs\\'',f2)})\""""
+    ""copy"": ""shx cp -r dist/src/* dist/esm && shx cp -r dist/src/* dist && shx rm -rf dist/src && shx rm -rf dist/{src,tests} && shx cp package.json readme.md LICENSE dist && json -I -f dist/package.json -e \""this.private=false; this.devDependencies=undefined; this.optionalDependencies=undefined; this.scripts=undefined; this.prettier=undefined;\"""",
+    ""patch-old-ts"": ""shx touch dist/ts_version_4.5_and_above_is_required.d.ts"",
+    ""patch-esm-ts"": ""node -e \""require('shelljs').find('dist/esm/**/*.d.ts').forEach(f=>{var f2=f.replace(/\\.ts$/,'.mts');require('fs').renameSync(f,f2);require('shelljs').sed('-i',/ from '(\\.[^']+)';$/,' from \\'\\$1.mjs\\';',f2);require('shelljs').sed('-i',/^declare module '(\\.[^']+)'/,'declare module \\'\\$1.mjs\\'',f2)})\""""
-    ""node"": "">=12.7.0""
+    ""node"": "">=12.20.0""
-  ""dependencies"": {
-    ""use-sync-external-store"": ""1.2.0""
-  },
-    ""@rollup/plugin-terser"": ""^0.4.4"",
-    ""downlevel-dts"": ""^0.11.0"",
+    ""use-sync-external-store"": ""^1.2.0"",
-    ""@types/react"": "">=16.8"",
+    ""@types/react"": "">=18.0"",
-    ""react"": "">=16.8""
+    ""react"": "">=18.0"",
+    ""use-sync-external-store"": "">=1.2.0""
+    },
+    ""use-sync-external-store"": {
+      ""optional"": true","-  ""version"": ""4.5.0"",
+  ""version"": ""4.5.1"",
-    ""@babel/core"": ""^7.23.7"",
+    ""@babel/core"": ""^7.23.9"",
-    ""@babel/plugin-transform-runtime"": ""^7.23.7"",
+    ""@babel/plugin-transform-runtime"": ""^7.23.9"",
-    ""@babel/preset-env"": ""^7.23.8"",
+    ""@babel/preset-env"": ""^7.23.9"",
-    ""@testing-library/react"": ""^14.1.2"",
-    ""@types/node"": ""^20.11.5"",
-    ""@types/react"": ""^18.2.48"",
-    ""@types/react-dom"": ""^18.2.18"",
+    ""@testing-library/react"": ""^14.2.1"",
+    ""@types/node"": ""^20.11.19"",
+    ""@types/react"": ""^18.2.55"",
+    ""@types/react-dom"": ""^18.2.19"",
-    ""@typescript-eslint/eslint-plugin"": ""^6.19.0"",
-    ""@typescript-eslint/parser"": ""^6.19.0"",
+    ""@typescript-eslint/eslint-plugin"": ""^7.0.1"",
+    ""@typescript-eslint/parser"": ""^7.0.1"",
-    ""esbuild"": ""^0.19.11"",
+    ""esbuild"": ""^0.20.0"",
-    ""eslint-plugin-vitest"": ""^0.3.20"",
+    ""eslint-plugin-vitest"": ""^0.3.22"",
-    ""jsdom"": ""^23.2.0"",
+    ""jsdom"": ""^24.0.0"",
-    ""prettier"": ""^3.2.4"",
+    ""prettier"": ""^3.2.5"",
-    ""rollup"": ""^4.9.5"",
-    ""rollup-plugin-esbuild"": ""^6.1.0"",
+    ""rollup"": ""^4.12.0"",
+    ""rollup-plugin-esbuild"": ""^6.1.1"",","-  ""version"": ""4.5.0"",
+  ""version"": ""5.0.0-alpha.2"",
+  ""publishConfig"": {
+    ""tag"": ""next""
+  },
-    ""<4.0"": {
+    "">=4.5"": {
-        ""ts3.4/*""
+        ""esm/*""
-        ""ts3.4/*""
+        ""*""
+      ]
+    },
+    ""*"": {
+      ""esm/*"": [
+        ""ts_version_4.5_and_above_is_required.d.ts""
+      ],
+      ""*"": [
+        ""ts_version_4.5_and_above_is_required.d.ts""
-  ""files"": [
-    ""**""
-  ],
-      ""module"": {
-        ""types"": ""./esm/index.d.ts"",
-        ""default"": ""./esm/index.js""
-      },
-    ""./vanilla"": {
+    ""./*"": {
-        ""types"": ""./esm/vanilla.d.mts"",
-        ""default"": ""./esm/vanilla.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/vanilla.d.ts"",
-        ""default"": ""./esm/vanilla.js""
+        ""types"": ""./esm/*.d.mts"",
+        ""default"": ""./esm/*.mjs""
-        ""types"": ""./vanilla.d.ts"",
-        ""default"": ""./vanilla.js""
-      }
-    },
-    ""./middleware"": {
-      ""import"": {
-        ""types"": ""./esm/middleware.d.mts"",
-        ""default"": ""./esm/middleware.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/middleware.d.ts"",
-        ""default"": ""./esm/middleware.js""
-      },
-      ""default"": {
-        ""types"": ""./middleware.d.ts"",
-        ""default"": ""./middleware.js""
-      }
-    },
-    ""./middleware/immer"": {
-      ""import"": {
-        ""types"": ""./esm/middleware/immer.d.mts"",
-        ""default"": ""./esm/middleware/immer.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/middleware/immer.d.ts"",
-        ""default"": ""./esm/middleware/immer.js""
-      },
-      ""default"": {
-        ""types"": ""./middleware/immer.d.ts"",
-        ""default"": ""./middleware/immer.js""
-      }
-    },
-    ""./shallow"": {
-      ""import"": {
-        ""types"": ""./esm/shallow.d.mts"",
-        ""default"": ""./esm/shallow.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/shallow.d.ts"",
-        ""default"": ""./esm/shallow.js""
-      },
-      ""default"": {
-        ""types"": ""./shallow.d.ts"",
-        ""default"": ""./shallow.js""
-      }
-    },
-    ""./vanilla/shallow"": {
-      ""import"": {
-        ""types"": ""./esm/vanilla/shallow.d.mts"",
-        ""default"": ""./esm/vanilla/shallow.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/vanilla/shallow.d.ts"",
-        ""default"": ""./esm/vanilla/shallow.js""
-      },
-      ""default"": {
-        ""types"": ""./vanilla/shallow.d.ts"",
-        ""default"": ""./vanilla/shallow.js""
-      }
-    },
-    ""./react/shallow"": {
-      ""import"": {
-        ""types"": ""./esm/react/shallow.d.mts"",
-        ""default"": ""./esm/react/shallow.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/react/shallow.d.ts"",
-        ""default"": ""./esm/react/shallow.js""
-      },
-      ""default"": {
-        ""types"": ""./react/shallow.d.ts"",
-        ""default"": ""./react/shallow.js""
-      }
-    },
-    ""./traditional"": {
-      ""import"": {
-        ""types"": ""./esm/traditional.d.mts"",
-        ""default"": ""./esm/traditional.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/traditional.d.ts"",
-        ""default"": ""./esm/traditional.js""
-      },
-      ""default"": {
-        ""types"": ""./traditional.d.ts"",
-        ""default"": ""./traditional.js""
-      }
-    },
-    ""./context"": {
-      ""import"": {
-        ""types"": ""./esm/context.d.mts"",
-        ""default"": ""./esm/context.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/context.d.ts"",
-        ""default"": ""./esm/context.js""
-      },
-      ""default"": {
-        ""types"": ""./context.d.ts"",
-        ""default"": ""./context.js""
+        ""types"": ""./*.d.ts"",
+        ""default"": ""./*.js""
+  ""files"": [
+    ""**""
+  ],
+    ""build:react"": ""rollup -c --config-react"",
-    ""build:context"": ""rollup -c --config-context"",
-    ""postbuild"": ""yarn patch-d-ts && yarn copy && yarn patch-esm-ts"",
+    ""postbuild"": ""yarn patch-d-ts && yarn copy && yarn patch-old-ts && yarn patch-esm-ts"",
-    ""copy"": ""shx cp -r dist/src/* dist/esm && shx cp -r dist/src/* dist && shx rm -rf dist/src && shx rm -rf dist/{src,tests} && downlevel-dts dist dist/ts3.4 && shx cp package.json readme.md LICENSE dist && json -I -f dist/package.json -e \""this.private=false; this.devDependencies=undefined; this.optionalDependencies=undefined; this.scripts=undefined; this.prettier=undefined;\"""",
-    ""patch-esm-ts"": ""node -e \""require('shelljs').find('dist/esm/**/*.d.ts').forEach(f=>{var f2=f.replace(/\\.ts$/,'.mts');require('fs').copyFileSync(f,f2);require('shelljs').sed('-i',/ from '(\\.[^']+)';$/,' from \\'\\$1.mjs\\';',f2);require('shelljs').sed('-i',/^declare module '(\\.[^']+)'/,'declare module \\'\\$1.mjs\\'',f2)})\""""
+    ""copy"": ""shx cp -r dist/src/* dist/esm && shx cp -r dist/src/* dist && shx rm -rf dist/src && shx rm -rf dist/{src,tests} && shx cp package.json readme.md LICENSE dist && json -I -f dist/package.json -e \""this.private=false; this.devDependencies=undefined; this.optionalDependencies=undefined; this.scripts=undefined; this.prettier=undefined;\"""",
+    ""patch-old-ts"": ""shx touch dist/ts_version_4.5_and_above_is_required.d.ts"",
+    ""patch-esm-ts"": ""node -e \""require('shelljs').find('dist/esm/**/*.d.ts').forEach(f=>{var f2=f.replace(/\\.ts$/,'.mts');require('fs').renameSync(f,f2);require('shelljs').sed('-i',/ from '(\\.[^']+)';$/,' from \\'\\$1.mjs\\';',f2);require('shelljs').sed('-i',/^declare module '(\\.[^']+)'/,'declare module \\'\\$1.mjs\\'',f2)})\""""
-    ""node"": "">=12.7.0""
+    ""node"": "">=12.20.0""
-  ""dependencies"": {
-    ""use-sync-external-store"": ""1.2.0""
-  },
-    ""@babel/core"": ""^7.23.7"",
+    ""@babel/core"": ""^7.23.9"",
-    ""@babel/plugin-transform-runtime"": ""^7.23.7"",
+    ""@babel/plugin-transform-runtime"": ""^7.23.9"",
-    ""@babel/preset-env"": ""^7.23.8"",
+    ""@babel/preset-env"": ""^7.23.9"",
-    ""@rollup/plugin-terser"": ""^0.4.4"",
-    ""@testing-library/react"": ""^14.1.2"",
-    ""@types/node"": ""^20.11.5"",
-    ""@types/react"": ""^18.2.48"",
-    ""@types/react-dom"": ""^18.2.18"",
+    ""@testing-library/react"": ""^14.2.1"",
+    ""@types/node"": ""^20.11.19"",
+    ""@types/react"": ""^18.2.55"",
+    ""@types/react-dom"": ""^18.2.19"",
-    ""@typescript-eslint/eslint-plugin"": ""^6.19.0"",
-    ""@typescript-eslint/parser"": ""^6.19.0"",
+    ""@typescript-eslint/eslint-plugin"": ""^7.0.1"",
+    ""@typescript-eslint/parser"": ""^7.0.1"",
-    ""downlevel-dts"": ""^0.11.0"",
-    ""esbuild"": ""^0.19.11"",
+    ""esbuild"": ""^0.20.0"",
-    ""eslint-plugin-vitest"": ""^0.3.20"",
+    ""eslint-plugin-vitest"": ""^0.3.22"",
-    ""jsdom"": ""^23.2.0"",
+    ""jsdom"": ""^24.0.0"",
-    ""prettier"": ""^3.2.4"",
+    ""prettier"": ""^3.2.5"",
-    ""rollup"": ""^4.9.5"",
-    ""rollup-plugin-esbuild"": ""^6.1.0"",
+    ""rollup"": ""^4.12.0"",
+    ""rollup-plugin-esbuild"": ""^6.1.1"",
+    ""use-sync-external-store"": ""^1.2.0"",
-    ""@types/react"": "">=16.8"",
+    ""@types/react"": "">=18.0"",
-    ""react"": "">=16.8""
+    ""react"": "">=18.0"",
+    ""use-sync-external-store"": "">=1.2.0""
+    },
+    ""use-sync-external-store"": {
+      ""optional"": true"
pmndrs_zustand,7868b8c005e8b872b1d64d956f1c6ef5fee16986,Merge branch 'main' into v5,src/middleware/persist.ts,"-   * @deprecated Use `storage` instead.
-   * A function returning a storage.
-   * The storage must fit `window.localStorage`'s api (or an async version of it).
-   * For example the storage could be `AsyncStorage` from React Native.
-   *
-   * @default () => localStorage
-   */
-  getStorage?: () => StateStorage
-  /**
-   * @deprecated Use `storage` instead.
-   * Use a custom serializer.
-   * The returned string will be stored in the storage.
-   *
-   * @default JSON.stringify
-   */
-  serialize?: (state: StorageValue<S>) => string | Promise<string>
-  /**
-   * @deprecated Use `storage` instead.
-   * Use a custom deserializer.
-   * Must return an object matching StorageValue<S>
-   *
-   * @param str The storage's current value.
-   * @default JSON.parse
-   */
-  deserialize?: (
-    str: string,
-  ) => StorageValue<PersistedState> | Promise<StorageValue<PersistedState>>
-  /**
-const oldImpl: PersistImpl = (config, baseOptions) => (set, get, api) => {
-  type S = ReturnType<typeof config>
-  let options = {
-    getStorage: () => localStorage,
-    serialize: JSON.stringify as (state: StorageValue<S>) => string,
-    deserialize: JSON.parse as (str: string) => StorageValue<S>,
-    partialize: (state: S) => state,
-    version: 0,
-    merge: (persistedState: unknown, currentState: S) => ({
-      ...currentState,
-      ...(persistedState as object),
-    }),
-    ...baseOptions,
-  }
-
-  let hasHydrated = false
-  const hydrationListeners = new Set<PersistListener<S>>()
-  const finishHydrationListeners = new Set<PersistListener<S>>()
-  let storage: StateStorage | undefined
-
-  try {
-    storage = options.getStorage()
-  } catch (e) {
-    // prevent error if the storage is not defined (e.g. when server side rendering a page)
-  }
-
-  if (!storage) {
-    return config(
-      (...args) => {
-        console.warn(
-          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`,
-        )
-        set(...args)
-      },
-      get,
-      api,
-    )
-  }
-
-  const thenableSerialize = toThenable(options.serialize)
-
-  const setItem = (): Thenable<void> => {
-    const state = options.partialize({ ...get() })
-
-    let errorInSync: Error | undefined
-    const thenable = thenableSerialize({ state, version: options.version })
-      .then((serializedValue) =>
-        (storage as StateStorage).setItem(options.name, serializedValue),
-      )
-      .catch((e) => {
-        errorInSync = e
-      })
-    if (errorInSync) {
-      throw errorInSync
-    }
-    return thenable
-  }
-
-  const savedSetState = api.setState
-
-  api.setState = (state, replace) => {
-    savedSetState(state, replace)
-    void setItem()
-  }
-
-  const configResult = config(
-    (...args) => {
-      set(...args)
-      void setItem()
-    },
-    get,
-    api,
-  )
-
-  // a workaround to solve the issue of not storing rehydrated state in sync storage
-  // the set(state) value would be later overridden with initial state by create()
-  // to avoid this, we merge the state from localStorage into the initial state.
-  let stateFromStorage: S | undefined
-
-  // rehydrate initial state with existing stored state
-  const hydrate = () => {
-    if (!storage) return
-
-    hasHydrated = false
-    hydrationListeners.forEach((cb) => cb(get()))
-
-    const postRehydrationCallback =
-      options.onRehydrateStorage?.(get()) || undefined
-
-    // bind is used to avoid `TypeError: Illegal invocation` error
-    return toThenable(storage.getItem.bind(storage))(options.name)
-      .then((storageValue) => {
-        if (storageValue) {
-          return options.deserialize(storageValue)
-        }
-      })
-      .then((deserializedStorageValue) => {
-        if (deserializedStorageValue) {
-          if (
-            typeof deserializedStorageValue.version === 'number' &&
-            deserializedStorageValue.version !== options.version
-          ) {
-            if (options.migrate) {
-              return options.migrate(
-                deserializedStorageValue.state,
-                deserializedStorageValue.version,
-              )
-            }
-            console.error(
-              `State loaded from storage couldn't be migrated since no migrate function was provided`,
-            )
-          } else {
-            return deserializedStorageValue.state
-          }
-        }
-      })
-      .then((migratedState) => {
-        stateFromStorage = options.merge(
-          migratedState as S,
-          get() ?? configResult,
-        )
-
-        set(stateFromStorage as S, true)
-        return setItem()
-      })
-      .then(() => {
-        postRehydrationCallback?.(stateFromStorage, undefined)
-        hasHydrated = true
-        finishHydrationListeners.forEach((cb) => cb(stateFromStorage as S))
-      })
-      .catch((e: Error) => {
-        postRehydrationCallback?.(undefined, e)
-      })
-  }
-
-  ;(api as StoreApi<S> & StorePersist<S, S>).persist = {
-    setOptions: (newOptions) => {
-      options = {
-        ...options,
-        ...newOptions,
-      }
-
-      if (newOptions.getStorage) {
-        storage = newOptions.getStorage()
-      }
-    },
-    clearStorage: () => {
-      storage?.removeItem(options.name)
-    },
-    getOptions: () => options,
-    rehydrate: () => hydrate() as Promise<void>,
-    hasHydrated: () => hasHydrated,
-    onHydrate: (cb) => {
-      hydrationListeners.add(cb)
-
-      return () => {
-        hydrationListeners.delete(cb)
-      }
-    },
-    onFinishHydration: (cb) => {
-      finishHydrationListeners.add(cb)
-
-      return () => {
-        finishHydrationListeners.delete(cb)
-      }
-    },
-  }
-
-  hydrate()
-
-  return stateFromStorage || configResult
-}
-
-const newImpl: PersistImpl = (config, baseOptions) => (set, get, api) => {
+const persistImpl: PersistImpl = (config, baseOptions) => (set, get, api) => {
-const persistImpl: PersistImpl = (config, baseOptions) => {
-  if (
-    'getStorage' in baseOptions ||
-    'serialize' in baseOptions ||
-    'deserialize' in baseOptions
-  ) {
-    if (import.meta.env?.MODE !== 'production') {
-      console.warn(
-        '[DEPRECATED] `getStorage`, `serialize` and `deserialize` options are deprecated. Use `storage` option instead.',
-      )
-    }
-    return oldImpl(config, baseOptions)
-  }
-  return newImpl(config, baseOptions)
-}
-","-  setItem: (name: string, value: string) => void | Promise<void>
-  removeItem: (name: string) => void | Promise<void>
+  setItem: (name: string, value: string) => unknown | Promise<unknown>
+  removeItem: (name: string) => unknown | Promise<unknown>
-  setItem: (name: string, value: StorageValue<S>) => void | Promise<void>
-  removeItem: (name: string) => void | Promise<void>
+  setItem: (name: string, value: StorageValue<S>) => unknown | Promise<unknown>
+  removeItem: (name: string) => unknown | Promise<unknown>
-  const setItem = (): void | Promise<void> => {
+  const setItem = () => {","-  setItem: (name: string, value: string) => void | Promise<void>
-  removeItem: (name: string) => void | Promise<void>
+  setItem: (name: string, value: string) => unknown | Promise<unknown>
+  removeItem: (name: string) => unknown | Promise<unknown>
-  setItem: (name: string, value: StorageValue<S>) => void | Promise<void>
-  removeItem: (name: string) => void | Promise<void>
+  setItem: (name: string, value: StorageValue<S>) => unknown | Promise<unknown>
+  removeItem: (name: string) => unknown | Promise<unknown>
-   * @deprecated Use `storage` instead.
-   * A function returning a storage.
-   * The storage must fit `window.localStorage`'s api (or an async version of it).
-   * For example the storage could be `AsyncStorage` from React Native.
-   *
-   * @default () => localStorage
-   */
-  getStorage?: () => StateStorage
-  /**
-   * @deprecated Use `storage` instead.
-   * Use a custom serializer.
-   * The returned string will be stored in the storage.
-   *
-   * @default JSON.stringify
-   */
-  serialize?: (state: StorageValue<S>) => string | Promise<string>
-  /**
-   * @deprecated Use `storage` instead.
-   * Use a custom deserializer.
-   * Must return an object matching StorageValue<S>
-   *
-   * @param str The storage's current value.
-   * @default JSON.parse
-   */
-  deserialize?: (
-    str: string,
-  ) => StorageValue<PersistedState> | Promise<StorageValue<PersistedState>>
-  /**
-const oldImpl: PersistImpl = (config, baseOptions) => (set, get, api) => {
+const persistImpl: PersistImpl = (config, baseOptions) => (set, get, api) => {
-    getStorage: () => localStorage,
-    serialize: JSON.stringify as (state: StorageValue<S>) => string,
-    deserialize: JSON.parse as (str: string) => StorageValue<S>,
+    storage: createJSONStorage<S>(() => localStorage),
-  let storage: StateStorage | undefined
-
-  try {
-    storage = options.getStorage()
-  } catch (e) {
-    // prevent error if the storage is not defined (e.g. when server side rendering a page)
-  }
+  let storage = options.storage
-  const thenableSerialize = toThenable(options.serialize)
-
-  const setItem = (): Thenable<void> => {
-    const state = options.partialize({ ...get() })
-
-    let errorInSync: Error | undefined
-    const thenable = thenableSerialize({ state, version: options.version })
-      .then((serializedValue) =>
-        (storage as StateStorage).setItem(options.name, serializedValue),
-      )
-      .catch((e) => {
-        errorInSync = e
-      })
-    if (errorInSync) {
-      throw errorInSync
-    }
-    return thenable
-  }
-
-  const savedSetState = api.setState
-
-  api.setState = (state, replace) => {
-    savedSetState(state, replace)
-    void setItem()
-  }
-
-  const configResult = config(
-    (...args) => {
-      set(...args)
-      void setItem()
-    },
-    get,
-    api,
-  )
-
-  // a workaround to solve the issue of not storing rehydrated state in sync storage
-  // the set(state) value would be later overridden with initial state by create()
-  // to avoid this, we merge the state from localStorage into the initial state.
-  let stateFromStorage: S | undefined
-
-  // rehydrate initial state with existing stored state
-  const hydrate = () => {
-    if (!storage) return
-
-    hasHydrated = false
-    hydrationListeners.forEach((cb) => cb(get()))
-
-    const postRehydrationCallback =
-      options.onRehydrateStorage?.(get()) || undefined
-
-    // bind is used to avoid `TypeError: Illegal invocation` error
-    return toThenable(storage.getItem.bind(storage))(options.name)
-      .then((storageValue) => {
-        if (storageValue) {
-          return options.deserialize(storageValue)
-        }
-      })
-      .then((deserializedStorageValue) => {
-        if (deserializedStorageValue) {
-          if (
-            typeof deserializedStorageValue.version === 'number' &&
-            deserializedStorageValue.version !== options.version
-          ) {
-            if (options.migrate) {
-              return options.migrate(
-                deserializedStorageValue.state,
-                deserializedStorageValue.version,
-              )
-            }
-            console.error(
-              `State loaded from storage couldn't be migrated since no migrate function was provided`,
-            )
-          } else {
-            return deserializedStorageValue.state
-          }
-        }
-      })
-      .then((migratedState) => {
-        stateFromStorage = options.merge(
-          migratedState as S,
-          get() ?? configResult,
-        )
-
-        set(stateFromStorage as S, true)
-        return setItem()
-      })
-      .then(() => {
-        postRehydrationCallback?.(stateFromStorage, undefined)
-        hasHydrated = true
-        finishHydrationListeners.forEach((cb) => cb(stateFromStorage as S))
-      })
-      .catch((e: Error) => {
-        postRehydrationCallback?.(undefined, e)
-      })
-  }
-
-  ;(api as StoreApi<S> & StorePersist<S, S>).persist = {
-    setOptions: (newOptions) => {
-      options = {
-        ...options,
-        ...newOptions,
-      }
-
-      if (newOptions.getStorage) {
-        storage = newOptions.getStorage()
-      }
-    },
-    clearStorage: () => {
-      storage?.removeItem(options.name)
-    },
-    getOptions: () => options,
-    rehydrate: () => hydrate() as Promise<void>,
-    hasHydrated: () => hasHydrated,
-    onHydrate: (cb) => {
-      hydrationListeners.add(cb)
-
-      return () => {
-        hydrationListeners.delete(cb)
-      }
-    },
-    onFinishHydration: (cb) => {
-      finishHydrationListeners.add(cb)
-
-      return () => {
-        finishHydrationListeners.delete(cb)
-      }
-    },
-  }
-
-  hydrate()
-
-  return stateFromStorage || configResult
-}
-
-const newImpl: PersistImpl = (config, baseOptions) => (set, get, api) => {
-  type S = ReturnType<typeof config>
-  let options = {
-    storage: createJSONStorage<S>(() => localStorage),
-    partialize: (state: S) => state,
-    version: 0,
-    merge: (persistedState: unknown, currentState: S) => ({
-      ...currentState,
-      ...(persistedState as object),
-    }),
-    ...baseOptions,
-  }
-
-  let hasHydrated = false
-  const hydrationListeners = new Set<PersistListener<S>>()
-  const finishHydrationListeners = new Set<PersistListener<S>>()
-  let storage = options.storage
-
-  if (!storage) {
-    return config(
-      (...args) => {
-        console.warn(
-          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`,
-        )
-        set(...args)
-      },
-      get,
-      api,
-    )
-  }
-
-  const setItem = (): void | Promise<void> => {
+  const setItem = () => {
-const persistImpl: PersistImpl = (config, baseOptions) => {
-  if (
-    'getStorage' in baseOptions ||
-    'serialize' in baseOptions ||
-    'deserialize' in baseOptions
-  ) {
-    if (import.meta.env?.MODE !== 'production') {
-      console.warn(
-        '[DEPRECATED] `getStorage`, `serialize` and `deserialize` options are deprecated. Use `storage` option instead.',
-      )
-    }
-    return oldImpl(config, baseOptions)
-  }
-  return newImpl(config, baseOptions)
-}
-"
pmndrs_zustand,be31b53560336d9174b9b6c1af1d0ba0aeb11869,Merge branch 'main' into v5,package.json,"+  ""publishConfig"": {
+    ""tag"": ""next""
+  },
-    ""<4.0"": {
+    "">=4.5"": {
-        ""ts3.4/*""
+        ""esm/*""
-        ""ts3.4/*""
+        ""*""
+      ]
+    },
+    ""*"": {
+      ""esm/*"": [
+        ""ts_version_4.5_and_above_is_required.d.ts""
+      ],
+      ""*"": [
+        ""ts_version_4.5_and_above_is_required.d.ts""
-  ""files"": [
-    ""**""
-  ],
-      ""module"": {
-        ""types"": ""./esm/index.d.ts"",
-        ""default"": ""./esm/index.js""
-      },
-    ""./vanilla"": {
+    ""./*"": {
-        ""types"": ""./esm/vanilla.d.mts"",
-        ""default"": ""./esm/vanilla.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/vanilla.d.ts"",
-        ""default"": ""./esm/vanilla.js""
+        ""types"": ""./esm/*.d.mts"",
+        ""default"": ""./esm/*.mjs""
-        ""types"": ""./vanilla.d.ts"",
-        ""default"": ""./vanilla.js""
-      }
-    },
-    ""./middleware"": {
-      ""import"": {
-        ""types"": ""./esm/middleware.d.mts"",
-        ""default"": ""./esm/middleware.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/middleware.d.ts"",
-        ""default"": ""./esm/middleware.js""
-      },
-      ""default"": {
-        ""types"": ""./middleware.d.ts"",
-        ""default"": ""./middleware.js""
-      }
-    },
-    ""./middleware/immer"": {
-      ""import"": {
-        ""types"": ""./esm/middleware/immer.d.mts"",
-        ""default"": ""./esm/middleware/immer.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/middleware/immer.d.ts"",
-        ""default"": ""./esm/middleware/immer.js""
-      },
-      ""default"": {
-        ""types"": ""./middleware/immer.d.ts"",
-        ""default"": ""./middleware/immer.js""
-      }
-    },
-    ""./shallow"": {
-      ""import"": {
-        ""types"": ""./esm/shallow.d.mts"",
-        ""default"": ""./esm/shallow.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/shallow.d.ts"",
-        ""default"": ""./esm/shallow.js""
-      },
-      ""default"": {
-        ""types"": ""./shallow.d.ts"",
-        ""default"": ""./shallow.js""
-      }
-    },
-    ""./vanilla/shallow"": {
-      ""import"": {
-        ""types"": ""./esm/vanilla/shallow.d.mts"",
-        ""default"": ""./esm/vanilla/shallow.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/vanilla/shallow.d.ts"",
-        ""default"": ""./esm/vanilla/shallow.js""
-      },
-      ""default"": {
-        ""types"": ""./vanilla/shallow.d.ts"",
-        ""default"": ""./vanilla/shallow.js""
-      }
-    },
-    ""./react/shallow"": {
-      ""import"": {
-        ""types"": ""./esm/react/shallow.d.mts"",
-        ""default"": ""./esm/react/shallow.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/react/shallow.d.ts"",
-        ""default"": ""./esm/react/shallow.js""
-      },
-      ""default"": {
-        ""types"": ""./react/shallow.d.ts"",
-        ""default"": ""./react/shallow.js""
-      }
-    },
-    ""./traditional"": {
-      ""import"": {
-        ""types"": ""./esm/traditional.d.mts"",
-        ""default"": ""./esm/traditional.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/traditional.d.ts"",
-        ""default"": ""./esm/traditional.js""
-      },
-      ""default"": {
-        ""types"": ""./traditional.d.ts"",
-        ""default"": ""./traditional.js""
-      }
-    },
-    ""./context"": {
-      ""import"": {
-        ""types"": ""./esm/context.d.mts"",
-        ""default"": ""./esm/context.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/context.d.ts"",
-        ""default"": ""./esm/context.js""
-      },
-      ""default"": {
-        ""types"": ""./context.d.ts"",
-        ""default"": ""./context.js""
+        ""types"": ""./*.d.ts"",
+        ""default"": ""./*.js""
+  ""files"": [
+    ""**""
+  ],
-    ""build:context"": ""rollup -c --config-context"",
-    ""postbuild"": ""yarn patch-d-ts && yarn copy && yarn patch-esm-ts"",
+    ""postbuild"": ""yarn patch-d-ts && yarn copy && yarn patch-old-ts && yarn patch-esm-ts"",
-    ""copy"": ""shx cp -r dist/src/* dist/esm && shx cp -r dist/src/* dist && shx rm -rf dist/src && shx rm -rf dist/{src,tests} && downlevel-dts dist dist/ts3.4 && shx cp package.json readme.md LICENSE dist && json -I -f dist/package.json -e \""this.private=false; this.devDependencies=undefined; this.optionalDependencies=undefined; this.scripts=undefined; this.prettier=undefined;\"""",
-    ""patch-esm-ts"": ""node -e \""require('shelljs').find('dist/esm/**/*.d.ts').forEach(f=>{var f2=f.replace(/\\.ts$/,'.mts');require('fs').copyFileSync(f,f2);require('shelljs').sed('-i',/ from '(\\.[^']+)';$/,' from \\'\\$1.mjs\\';',f2);require('shelljs').sed('-i',/^declare module '(\\.[^']+)'/,'declare module \\'\\$1.mjs\\'',f2)})\""""
+    ""copy"": ""shx cp -r dist/src/* dist/esm && shx cp -r dist/src/* dist && shx rm -rf dist/src && shx rm -rf dist/{src,tests} && shx cp package.json readme.md LICENSE dist && json -I -f dist/package.json -e \""this.private=false; this.devDependencies=undefined; this.optionalDependencies=undefined; this.scripts=undefined; this.prettier=undefined;\"""",
+    ""patch-old-ts"": ""shx touch dist/ts_version_4.5_and_above_is_required.d.ts"",
+    ""patch-esm-ts"": ""node -e \""require('shelljs').find('dist/esm/**/*.d.ts').forEach(f=>{var f2=f.replace(/\\.ts$/,'.mts');require('fs').renameSync(f,f2);require('shelljs').sed('-i',/ from '(\\.[^']+)';$/,' from \\'\\$1.mjs\\';',f2);require('shelljs').sed('-i',/^declare module '(\\.[^']+)'/,'declare module \\'\\$1.mjs\\'',f2)})\""""
-    ""node"": "">=12.7.0""
+    ""node"": "">=12.20.0""
-  ""dependencies"": {
-    ""use-sync-external-store"": ""1.2.0""
-  },
-    ""@rollup/plugin-terser"": ""^0.4.4"",
-    ""downlevel-dts"": ""^0.11.0"",
+    ""use-sync-external-store"": ""^1.2.0"",
-    ""@types/react"": "">=16.8"",
+    ""@types/react"": "">=18.0"",
-    ""react"": "">=16.8""
+    ""react"": "">=18.0"",
+    ""use-sync-external-store"": "">=1.2.0""
+    },
+    ""use-sync-external-store"": {
+      ""optional"": true","-  ""version"": ""4.4.7"",
+  ""version"": ""4.5.0"",
-    ""@babel/core"": ""^7.23.3"",
+    ""@babel/core"": ""^7.23.7"",
-    ""@babel/plugin-transform-runtime"": ""^7.23.4"",
-    ""@babel/plugin-transform-typescript"": ""^7.23.4"",
-    ""@babel/preset-env"": ""^7.23.3"",
-    ""@redux-devtools/extension"": ""^3.2.6"",
+    ""@babel/plugin-transform-runtime"": ""^7.23.7"",
+    ""@babel/plugin-transform-typescript"": ""^7.23.6"",
+    ""@babel/preset-env"": ""^7.23.8"",
+    ""@redux-devtools/extension"": ""^3.3.0"",
-    ""@rollup/plugin-typescript"": ""^11.1.5"",
+    ""@rollup/plugin-typescript"": ""^11.1.6"",
-    ""@types/react"": ""^18.2.39"",
-    ""@types/react-dom"": ""^18.2.17"",
+    ""@types/node"": ""^20.11.5"",
+    ""@types/react"": ""^18.2.48"",
+    ""@types/react-dom"": ""^18.2.18"",
-    ""@typescript-eslint/eslint-plugin"": ""^6.13.0"",
-    ""@typescript-eslint/parser"": ""^6.13.0"",
-    ""@vitest/coverage-v8"": ""^0.34.6"",
-    ""@vitest/ui"": ""^0.34.6"",
+    ""@typescript-eslint/eslint-plugin"": ""^6.19.0"",
+    ""@typescript-eslint/parser"": ""^6.19.0"",
+    ""@vitest/coverage-v8"": ""0.33.0"",
+    ""@vitest/ui"": ""0.33.0"",
-    ""esbuild"": ""^0.19.8"",
-    ""eslint"": ""^8.54.0"",
-    ""eslint-config-prettier"": ""^9.0.0"",
+    ""esbuild"": ""^0.19.11"",
+    ""eslint"": ""^8.56.0"",
+    ""eslint-config-prettier"": ""^9.1.0"",
-    ""eslint-plugin-import"": ""^2.29.0"",
-    ""eslint-plugin-prettier"": ""^5.0.1"",
+    ""eslint-plugin-import"": ""^2.29.1"",
+    ""eslint-plugin-prettier"": ""^5.1.3"",
-    ""eslint-plugin-vitest"": ""^0.3.10"",
+    ""eslint-plugin-vitest"": ""^0.3.20"",
-    ""jsdom"": ""^23.0.0"",
+    ""jsdom"": ""^23.2.0"",
-    ""prettier"": ""^3.1.0"",
+    ""prettier"": ""^3.2.4"",
-    ""redux"": ""5.0.0-alpha.1"",
-    ""rollup"": ""^4.6.0"",
+    ""redux"": ""^5.0.1"",
+    ""rollup"": ""^4.9.5"",
-    ""typescript"": ""^5.3.2"",
-    ""vitest"": ""^0.34.6""
+    ""typescript"": ""^5.3.3"",
+    ""vitest"": ""0.33.0""
-  },
-  ""resolutions"": {
-    ""vite"": ""4.5.0""","-  ""version"": ""4.4.7"",
+  ""version"": ""4.5.0"",
+  ""publishConfig"": {
+    ""tag"": ""next""
+  },
-    ""<4.0"": {
+    "">=4.5"": {
-        ""ts3.4/*""
+        ""esm/*""
-        ""ts3.4/*""
+        ""*""
+      ]
+    },
+    ""*"": {
+      ""esm/*"": [
+        ""ts_version_4.5_and_above_is_required.d.ts""
+      ],
+      ""*"": [
+        ""ts_version_4.5_and_above_is_required.d.ts""
-  ""files"": [
-    ""**""
-  ],
-      ""module"": {
-        ""types"": ""./esm/index.d.ts"",
-        ""default"": ""./esm/index.js""
-      },
-    ""./vanilla"": {
+    ""./*"": {
-        ""types"": ""./esm/vanilla.d.mts"",
-        ""default"": ""./esm/vanilla.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/vanilla.d.ts"",
-        ""default"": ""./esm/vanilla.js""
+        ""types"": ""./esm/*.d.mts"",
+        ""default"": ""./esm/*.mjs""
-        ""types"": ""./vanilla.d.ts"",
-        ""default"": ""./vanilla.js""
-      }
-    },
-    ""./middleware"": {
-      ""import"": {
-        ""types"": ""./esm/middleware.d.mts"",
-        ""default"": ""./esm/middleware.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/middleware.d.ts"",
-        ""default"": ""./esm/middleware.js""
-      },
-      ""default"": {
-        ""types"": ""./middleware.d.ts"",
-        ""default"": ""./middleware.js""
-      }
-    },
-    ""./middleware/immer"": {
-      ""import"": {
-        ""types"": ""./esm/middleware/immer.d.mts"",
-        ""default"": ""./esm/middleware/immer.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/middleware/immer.d.ts"",
-        ""default"": ""./esm/middleware/immer.js""
-      },
-      ""default"": {
-        ""types"": ""./middleware/immer.d.ts"",
-        ""default"": ""./middleware/immer.js""
-      }
-    },
-    ""./shallow"": {
-      ""import"": {
-        ""types"": ""./esm/shallow.d.mts"",
-        ""default"": ""./esm/shallow.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/shallow.d.ts"",
-        ""default"": ""./esm/shallow.js""
-      },
-      ""default"": {
-        ""types"": ""./shallow.d.ts"",
-        ""default"": ""./shallow.js""
-      }
-    },
-    ""./vanilla/shallow"": {
-      ""import"": {
-        ""types"": ""./esm/vanilla/shallow.d.mts"",
-        ""default"": ""./esm/vanilla/shallow.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/vanilla/shallow.d.ts"",
-        ""default"": ""./esm/vanilla/shallow.js""
-      },
-      ""default"": {
-        ""types"": ""./vanilla/shallow.d.ts"",
-        ""default"": ""./vanilla/shallow.js""
-      }
-    },
-    ""./react/shallow"": {
-      ""import"": {
-        ""types"": ""./esm/react/shallow.d.mts"",
-        ""default"": ""./esm/react/shallow.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/react/shallow.d.ts"",
-        ""default"": ""./esm/react/shallow.js""
-      },
-      ""default"": {
-        ""types"": ""./react/shallow.d.ts"",
-        ""default"": ""./react/shallow.js""
-      }
-    },
-    ""./traditional"": {
-      ""import"": {
-        ""types"": ""./esm/traditional.d.mts"",
-        ""default"": ""./esm/traditional.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/traditional.d.ts"",
-        ""default"": ""./esm/traditional.js""
-      },
-      ""default"": {
-        ""types"": ""./traditional.d.ts"",
-        ""default"": ""./traditional.js""
-      }
-    },
-    ""./context"": {
-      ""import"": {
-        ""types"": ""./esm/context.d.mts"",
-        ""default"": ""./esm/context.mjs""
-      },
-      ""module"": {
-        ""types"": ""./esm/context.d.ts"",
-        ""default"": ""./esm/context.js""
-      },
-      ""default"": {
-        ""types"": ""./context.d.ts"",
-        ""default"": ""./context.js""
+        ""types"": ""./*.d.ts"",
+        ""default"": ""./*.js""
+  ""files"": [
+    ""**""
+  ],
-    ""build:context"": ""rollup -c --config-context"",
-    ""postbuild"": ""yarn patch-d-ts && yarn copy && yarn patch-esm-ts"",
+    ""postbuild"": ""yarn patch-d-ts && yarn copy && yarn patch-old-ts && yarn patch-esm-ts"",
-    ""copy"": ""shx cp -r dist/src/* dist/esm && shx cp -r dist/src/* dist && shx rm -rf dist/src && shx rm -rf dist/{src,tests} && downlevel-dts dist dist/ts3.4 && shx cp package.json readme.md LICENSE dist && json -I -f dist/package.json -e \""this.private=false; this.devDependencies=undefined; this.optionalDependencies=undefined; this.scripts=undefined; this.prettier=undefined;\"""",
-    ""patch-esm-ts"": ""node -e \""require('shelljs').find('dist/esm/**/*.d.ts').forEach(f=>{var f2=f.replace(/\\.ts$/,'.mts');require('fs').copyFileSync(f,f2);require('shelljs').sed('-i',/ from '(\\.[^']+)';$/,' from \\'\\$1.mjs\\';',f2);require('shelljs').sed('-i',/^declare module '(\\.[^']+)'/,'declare module \\'\\$1.mjs\\'',f2)})\""""
+    ""copy"": ""shx cp -r dist/src/* dist/esm && shx cp -r dist/src/* dist && shx rm -rf dist/src && shx rm -rf dist/{src,tests} && shx cp package.json readme.md LICENSE dist && json -I -f dist/package.json -e \""this.private=false; this.devDependencies=undefined; this.optionalDependencies=undefined; this.scripts=undefined; this.prettier=undefined;\"""",
+    ""patch-old-ts"": ""shx touch dist/ts_version_4.5_and_above_is_required.d.ts"",
+    ""patch-esm-ts"": ""node -e \""require('shelljs').find('dist/esm/**/*.d.ts').forEach(f=>{var f2=f.replace(/\\.ts$/,'.mts');require('fs').renameSync(f,f2);require('shelljs').sed('-i',/ from '(\\.[^']+)';$/,' from \\'\\$1.mjs\\';',f2);require('shelljs').sed('-i',/^declare module '(\\.[^']+)'/,'declare module \\'\\$1.mjs\\'',f2)})\""""
-    ""node"": "">=12.7.0""
+    ""node"": "">=12.20.0""
-  ""dependencies"": {
-    ""use-sync-external-store"": ""1.2.0""
-  },
-    ""@babel/core"": ""^7.23.3"",
+    ""@babel/core"": ""^7.23.7"",
-    ""@babel/plugin-transform-runtime"": ""^7.23.4"",
-    ""@babel/plugin-transform-typescript"": ""^7.23.4"",
-    ""@babel/preset-env"": ""^7.23.3"",
-    ""@redux-devtools/extension"": ""^3.2.6"",
+    ""@babel/plugin-transform-runtime"": ""^7.23.7"",
+    ""@babel/plugin-transform-typescript"": ""^7.23.6"",
+    ""@babel/preset-env"": ""^7.23.8"",
+    ""@redux-devtools/extension"": ""^3.3.0"",
-    ""@rollup/plugin-terser"": ""^0.4.4"",
-    ""@rollup/plugin-typescript"": ""^11.1.5"",
+    ""@rollup/plugin-typescript"": ""^11.1.6"",
-    ""@types/react"": ""^18.2.39"",
-    ""@types/react-dom"": ""^18.2.17"",
+    ""@types/node"": ""^20.11.5"",
+    ""@types/react"": ""^18.2.48"",
+    ""@types/react-dom"": ""^18.2.18"",
-    ""@typescript-eslint/eslint-plugin"": ""^6.13.0"",
-    ""@typescript-eslint/parser"": ""^6.13.0"",
-    ""@vitest/coverage-v8"": ""^0.34.6"",
-    ""@vitest/ui"": ""^0.34.6"",
+    ""@typescript-eslint/eslint-plugin"": ""^6.19.0"",
+    ""@typescript-eslint/parser"": ""^6.19.0"",
+    ""@vitest/coverage-v8"": ""0.33.0"",
+    ""@vitest/ui"": ""0.33.0"",
-    ""downlevel-dts"": ""^0.11.0"",
-    ""esbuild"": ""^0.19.8"",
-    ""eslint"": ""^8.54.0"",
-    ""eslint-config-prettier"": ""^9.0.0"",
+    ""esbuild"": ""^0.19.11"",
+    ""eslint"": ""^8.56.0"",
+    ""eslint-config-prettier"": ""^9.1.0"",
-    ""eslint-plugin-import"": ""^2.29.0"",
-    ""eslint-plugin-prettier"": ""^5.0.1"",
+    ""eslint-plugin-import"": ""^2.29.1"",
+    ""eslint-plugin-prettier"": ""^5.1.3"",
-    ""eslint-plugin-vitest"": ""^0.3.10"",
+    ""eslint-plugin-vitest"": ""^0.3.20"",
-    ""jsdom"": ""^23.0.0"",
+    ""jsdom"": ""^23.2.0"",
-    ""prettier"": ""^3.1.0"",
+    ""prettier"": ""^3.2.4"",
-    ""redux"": ""5.0.0-alpha.1"",
-    ""rollup"": ""^4.6.0"",
+    ""redux"": ""^5.0.1"",
+    ""rollup"": ""^4.9.5"",
-    ""typescript"": ""^5.3.2"",
-    ""vitest"": ""^0.34.6""
+    ""typescript"": ""^5.3.3"",
+    ""use-sync-external-store"": ""^1.2.0"",
+    ""vitest"": ""0.33.0""
-    ""@types/react"": "">=16.8"",
+    ""@types/react"": "">=18.0"",
-    ""react"": "">=16.8""
+    ""react"": "">=18.0"",
+    ""use-sync-external-store"": "">=1.2.0""
+    },
+    ""use-sync-external-store"": {
+      ""optional"": true
-  },
-  ""resolutions"": {
-    ""vite"": ""4.5.0"""
pmndrs_zustand,be31b53560336d9174b9b6c1af1d0ba0aeb11869,Merge branch 'main' into v5,src/middleware/persist.ts,"-   * @deprecated Use `storage` instead.
-   * A function returning a storage.
-   * The storage must fit `window.localStorage`'s api (or an async version of it).
-   * For example the storage could be `AsyncStorage` from React Native.
-   *
-   * @default () => localStorage
-   */
-  getStorage?: () => StateStorage
-  /**
-   * @deprecated Use `storage` instead.
-   * Use a custom serializer.
-   * The returned string will be stored in the storage.
-   *
-   * @default JSON.stringify
-   */
-  serialize?: (state: StorageValue<S>) => string | Promise<string>
-  /**
-   * @deprecated Use `storage` instead.
-   * Use a custom deserializer.
-   * Must return an object matching StorageValue<S>
-   *
-   * @param str The storage's current value.
-   * @default JSON.parse
-   */
-  deserialize?: (
-    str: string,
-  ) => StorageValue<PersistedState> | Promise<StorageValue<PersistedState>>
-  /**
-const oldImpl: PersistImpl = (config, baseOptions) => (set, get, api) => {
-  type S = ReturnType<typeof config>
-  let options = {
-    getStorage: () => localStorage,
-    serialize: JSON.stringify as (state: StorageValue<S>) => string,
-    deserialize: JSON.parse as (str: string) => StorageValue<S>,
-    partialize: (state: S) => state,
-    version: 0,
-    merge: (persistedState: unknown, currentState: S) => ({
-      ...currentState,
-      ...(persistedState as object),
-    }),
-    ...baseOptions,
-  }
-
-  let hasHydrated = false
-  const hydrationListeners = new Set<PersistListener<S>>()
-  const finishHydrationListeners = new Set<PersistListener<S>>()
-  let storage: StateStorage | undefined
-
-  try {
-    storage = options.getStorage()
-  } catch (e) {
-    // prevent error if the storage is not defined (e.g. when server side rendering a page)
-  }
-
-  if (!storage) {
-    return config(
-      (...args) => {
-        console.warn(
-          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`,
-        )
-        set(...args)
-      },
-      get,
-      api,
-    )
-  }
-
-  const thenableSerialize = toThenable(options.serialize)
-
-  const setItem = (): Thenable<void> => {
-    const state = options.partialize({ ...get() })
-
-    let errorInSync: Error | undefined
-    const thenable = thenableSerialize({ state, version: options.version })
-      .then((serializedValue) =>
-        (storage as StateStorage).setItem(options.name, serializedValue),
-      )
-      .catch((e) => {
-        errorInSync = e
-      })
-    if (errorInSync) {
-      throw errorInSync
-    }
-    return thenable
-  }
-
-  const savedSetState = api.setState
-
-  api.setState = (state, replace) => {
-    savedSetState(state, replace)
-    void setItem()
-  }
-
-  const configResult = config(
-    (...args) => {
-      set(...args)
-      void setItem()
-    },
-    get,
-    api,
-  )
-
-  // a workaround to solve the issue of not storing rehydrated state in sync storage
-  // the set(state) value would be later overridden with initial state by create()
-  // to avoid this, we merge the state from localStorage into the initial state.
-  let stateFromStorage: S | undefined
-
-  // rehydrate initial state with existing stored state
-  const hydrate = () => {
-    if (!storage) return
-
-    hasHydrated = false
-    hydrationListeners.forEach((cb) => cb(get()))
-
-    const postRehydrationCallback =
-      options.onRehydrateStorage?.(get()) || undefined
-
-    // bind is used to avoid `TypeError: Illegal invocation` error
-    return toThenable(storage.getItem.bind(storage))(options.name)
-      .then((storageValue) => {
-        if (storageValue) {
-          return options.deserialize(storageValue)
-        }
-      })
-      .then((deserializedStorageValue) => {
-        if (deserializedStorageValue) {
-          if (
-            typeof deserializedStorageValue.version === 'number' &&
-            deserializedStorageValue.version !== options.version
-          ) {
-            if (options.migrate) {
-              return options.migrate(
-                deserializedStorageValue.state,
-                deserializedStorageValue.version,
-              )
-            }
-            console.error(
-              `State loaded from storage couldn't be migrated since no migrate function was provided`,
-            )
-          } else {
-            return deserializedStorageValue.state
-          }
-        }
-      })
-      .then((migratedState) => {
-        stateFromStorage = options.merge(
-          migratedState as S,
-          get() ?? configResult,
-        )
-
-        set(stateFromStorage as S, true)
-        return setItem()
-      })
-      .then(() => {
-        postRehydrationCallback?.(stateFromStorage, undefined)
-        hasHydrated = true
-        finishHydrationListeners.forEach((cb) => cb(stateFromStorage as S))
-      })
-      .catch((e: Error) => {
-        postRehydrationCallback?.(undefined, e)
-      })
-  }
-
-  ;(api as StoreApi<S> & StorePersist<S, S>).persist = {
-    setOptions: (newOptions) => {
-      options = {
-        ...options,
-        ...newOptions,
-      }
-
-      if (newOptions.getStorage) {
-        storage = newOptions.getStorage()
-      }
-    },
-    clearStorage: () => {
-      storage?.removeItem(options.name)
-    },
-    getOptions: () => options,
-    rehydrate: () => hydrate() as Promise<void>,
-    hasHydrated: () => hasHydrated,
-    onHydrate: (cb) => {
-      hydrationListeners.add(cb)
-
-      return () => {
-        hydrationListeners.delete(cb)
-      }
-    },
-    onFinishHydration: (cb) => {
-      finishHydrationListeners.add(cb)
-
-      return () => {
-        finishHydrationListeners.delete(cb)
-      }
-    },
-  }
-
-  hydrate()
-
-  return stateFromStorage || configResult
-}
-
-const newImpl: PersistImpl = (config, baseOptions) => (set, get, api) => {
+const persistImpl: PersistImpl = (config, baseOptions) => (set, get, api) => {
-const persistImpl: PersistImpl = (config, baseOptions) => {
-  if (
-    'getStorage' in baseOptions ||
-    'serialize' in baseOptions ||
-    'deserialize' in baseOptions
-  ) {
-    if (import.meta.env?.MODE !== 'production') {
-      console.warn(
-        '[DEPRECATED] `getStorage`, `serialize` and `deserialize` options are deprecated. Use `storage` option instead.',
-      )
-    }
-    return oldImpl(config, baseOptions)
-  }
-  return newImpl(config, baseOptions)
-}
-","+
+  api.getInitialState = () => configResult","-   * @deprecated Use `storage` instead.
-   * A function returning a storage.
-   * The storage must fit `window.localStorage`'s api (or an async version of it).
-   * For example the storage could be `AsyncStorage` from React Native.
-   *
-   * @default () => localStorage
-   */
-  getStorage?: () => StateStorage
-  /**
-   * @deprecated Use `storage` instead.
-   * Use a custom serializer.
-   * The returned string will be stored in the storage.
-   *
-   * @default JSON.stringify
-   */
-  serialize?: (state: StorageValue<S>) => string | Promise<string>
-  /**
-   * @deprecated Use `storage` instead.
-   * Use a custom deserializer.
-   * Must return an object matching StorageValue<S>
-   *
-   * @param str The storage's current value.
-   * @default JSON.parse
-   */
-  deserialize?: (
-    str: string,
-  ) => StorageValue<PersistedState> | Promise<StorageValue<PersistedState>>
-  /**
-const oldImpl: PersistImpl = (config, baseOptions) => (set, get, api) => {
+const persistImpl: PersistImpl = (config, baseOptions) => (set, get, api) => {
-    getStorage: () => localStorage,
-    serialize: JSON.stringify as (state: StorageValue<S>) => string,
-    deserialize: JSON.parse as (str: string) => StorageValue<S>,
+    storage: createJSONStorage<S>(() => localStorage),
-  let storage: StateStorage | undefined
-
-  try {
-    storage = options.getStorage()
-  } catch (e) {
-    // prevent error if the storage is not defined (e.g. when server side rendering a page)
-  }
+  let storage = options.storage
-  const thenableSerialize = toThenable(options.serialize)
-
-  const setItem = (): Thenable<void> => {
-    const state = options.partialize({ ...get() })
-
-    let errorInSync: Error | undefined
-    const thenable = thenableSerialize({ state, version: options.version })
-      .then((serializedValue) =>
-        (storage as StateStorage).setItem(options.name, serializedValue),
-      )
-      .catch((e) => {
-        errorInSync = e
-      })
-    if (errorInSync) {
-      throw errorInSync
-    }
-    return thenable
-  }
-
-  const savedSetState = api.setState
-
-  api.setState = (state, replace) => {
-    savedSetState(state, replace)
-    void setItem()
-  }
-
-  const configResult = config(
-    (...args) => {
-      set(...args)
-      void setItem()
-    },
-    get,
-    api,
-  )
-
-  // a workaround to solve the issue of not storing rehydrated state in sync storage
-  // the set(state) value would be later overridden with initial state by create()
-  // to avoid this, we merge the state from localStorage into the initial state.
-  let stateFromStorage: S | undefined
-
-  // rehydrate initial state with existing stored state
-  const hydrate = () => {
-    if (!storage) return
-
-    hasHydrated = false
-    hydrationListeners.forEach((cb) => cb(get()))
-
-    const postRehydrationCallback =
-      options.onRehydrateStorage?.(get()) || undefined
-
-    // bind is used to avoid `TypeError: Illegal invocation` error
-    return toThenable(storage.getItem.bind(storage))(options.name)
-      .then((storageValue) => {
-        if (storageValue) {
-          return options.deserialize(storageValue)
-        }
-      })
-      .then((deserializedStorageValue) => {
-        if (deserializedStorageValue) {
-          if (
-            typeof deserializedStorageValue.version === 'number' &&
-            deserializedStorageValue.version !== options.version
-          ) {
-            if (options.migrate) {
-              return options.migrate(
-                deserializedStorageValue.state,
-                deserializedStorageValue.version,
-              )
-            }
-            console.error(
-              `State loaded from storage couldn't be migrated since no migrate function was provided`,
-            )
-          } else {
-            return deserializedStorageValue.state
-          }
-        }
-      })
-      .then((migratedState) => {
-        stateFromStorage = options.merge(
-          migratedState as S,
-          get() ?? configResult,
-        )
-
-        set(stateFromStorage as S, true)
-        return setItem()
-      })
-      .then(() => {
-        postRehydrationCallback?.(stateFromStorage, undefined)
-        hasHydrated = true
-        finishHydrationListeners.forEach((cb) => cb(stateFromStorage as S))
-      })
-      .catch((e: Error) => {
-        postRehydrationCallback?.(undefined, e)
-      })
-  }
-
-  ;(api as StoreApi<S> & StorePersist<S, S>).persist = {
-    setOptions: (newOptions) => {
-      options = {
-        ...options,
-        ...newOptions,
-      }
-
-      if (newOptions.getStorage) {
-        storage = newOptions.getStorage()
-      }
-    },
-    clearStorage: () => {
-      storage?.removeItem(options.name)
-    },
-    getOptions: () => options,
-    rehydrate: () => hydrate() as Promise<void>,
-    hasHydrated: () => hasHydrated,
-    onHydrate: (cb) => {
-      hydrationListeners.add(cb)
-
-      return () => {
-        hydrationListeners.delete(cb)
-      }
-    },
-    onFinishHydration: (cb) => {
-      finishHydrationListeners.add(cb)
-
-      return () => {
-        finishHydrationListeners.delete(cb)
-      }
-    },
-  }
-
-  hydrate()
-
-  return stateFromStorage || configResult
-}
-
-const newImpl: PersistImpl = (config, baseOptions) => (set, get, api) => {
-  type S = ReturnType<typeof config>
-  let options = {
-    storage: createJSONStorage<S>(() => localStorage),
-    partialize: (state: S) => state,
-    version: 0,
-    merge: (persistedState: unknown, currentState: S) => ({
-      ...currentState,
-      ...(persistedState as object),
-    }),
-    ...baseOptions,
-  }
-
-  let hasHydrated = false
-  const hydrationListeners = new Set<PersistListener<S>>()
-  const finishHydrationListeners = new Set<PersistListener<S>>()
-  let storage = options.storage
-
-  if (!storage) {
-    return config(
-      (...args) => {
-        console.warn(
-          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`,
-        )
-        set(...args)
-      },
-      get,
-      api,
-    )
-  }
-
+
+  api.getInitialState = () => configResult
-const persistImpl: PersistImpl = (config, baseOptions) => {
-  if (
-    'getStorage' in baseOptions ||
-    'serialize' in baseOptions ||
-    'deserialize' in baseOptions
-  ) {
-    if (import.meta.env?.MODE !== 'production') {
-      console.warn(
-        '[DEPRECATED] `getStorage`, `serialize` and `deserialize` options are deprecated. Use `storage` option instead.',
-      )
-    }
-    return oldImpl(config, baseOptions)
-  }
-  return newImpl(config, baseOptions)
-}
-"
pmndrs_zustand,be31b53560336d9174b9b6c1af1d0ba0aeb11869,Merge branch 'main' into v5,src/react.ts,"-let didWarnAboutEqualityFn = false
-
-/**
- * @deprecated Use `useStoreWithEqualityFn` from 'zustand/traditional'
- * https://github.com/pmndrs/zustand/discussions/1937
- */
-export function useStore<S extends WithReact<StoreApi<unknown>>, U>(
-  api: S,
-  selector: (state: ExtractState<S>) => U,
-  equalityFn: ((a: U, b: U) => boolean) | undefined,
-): U
-
-  equalityFn?: (a: StateSlice, b: StateSlice) => boolean,
-  if (
-    import.meta.env?.MODE !== 'production' &&
-    equalityFn &&
-    !didWarnAboutEqualityFn
-  ) {
-    console.warn(
-      ""[DEPRECATED] Use `createWithEqualityFn` instead of `create` or use `useStoreWithEqualityFn` instead of `useStore`. They can be imported from 'zustand/traditional'. https://github.com/pmndrs/zustand/discussions/1937"",
-    )
-    didWarnAboutEqualityFn = true
-  }
-    equalityFn,
-  /**
-   * @deprecated Use `createWithEqualityFn` from 'zustand/traditional'
-   */
-  <U>(
-    selector: (state: ExtractState<S>) => U,
-    equalityFn: (a: U, b: U) => boolean,
-  ): U
-  /**
-   * @deprecated Use `useStore` hook to bind store
-   */
-  <S extends StoreApi<unknown>>(store: S): UseBoundStore<S>
-  if (
-    import.meta.env?.MODE !== 'production' &&
-    typeof createState !== 'function'
-  ) {
-    console.warn(
-      ""[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`."",
-    )
-  }
-  const api =
-    typeof createState === 'function' ? createStore(createState) : createState
+  const api = createStore(createState)
-  const useBoundStore: any = (selector?: any, equalityFn?: any) =>
-    useStore(api, selector, equalityFn)
+  const useBoundStore: any = (selector?: any) => useStore(api, selector)
-
-/**
- * @deprecated Use `import { create } from 'zustand'`
- */
-export default ((createState: any) => {
-  if (import.meta.env?.MODE !== 'production') {
-    console.warn(
-      ""[DEPRECATED] Default export is deprecated. Instead use `import { create } from 'zustand'`."",
-    )
-  }
-  return create(createState)
-}) as Create","+  /** @deprecated please use api.getState() */
+
+const identity = <T>(arg: T): T => arg
-  selector: (state: TState) => StateSlice = api.getState as any,
+  selector: (state: TState) => StateSlice = identity as any,
-    api.getServerState || api.getState,
+    api.getServerState || api.getInitialState,","+  /** @deprecated please use api.getState() */
-let didWarnAboutEqualityFn = false
+const identity = <T>(arg: T): T => arg
-/**
- * @deprecated Use `useStoreWithEqualityFn` from 'zustand/traditional'
- * https://github.com/pmndrs/zustand/discussions/1937
- */
-export function useStore<S extends WithReact<StoreApi<unknown>>, U>(
-  api: S,
-  selector: (state: ExtractState<S>) => U,
-  equalityFn: ((a: U, b: U) => boolean) | undefined,
-): U
-
-  selector: (state: TState) => StateSlice = api.getState as any,
-  equalityFn?: (a: StateSlice, b: StateSlice) => boolean,
+  selector: (state: TState) => StateSlice = identity as any,
-  if (
-    import.meta.env?.MODE !== 'production' &&
-    equalityFn &&
-    !didWarnAboutEqualityFn
-  ) {
-    console.warn(
-      ""[DEPRECATED] Use `createWithEqualityFn` instead of `create` or use `useStoreWithEqualityFn` instead of `useStore`. They can be imported from 'zustand/traditional'. https://github.com/pmndrs/zustand/discussions/1937"",
-    )
-    didWarnAboutEqualityFn = true
-  }
-    api.getServerState || api.getState,
+    api.getServerState || api.getInitialState,
-    equalityFn,
-  /**
-   * @deprecated Use `createWithEqualityFn` from 'zustand/traditional'
-   */
-  <U>(
-    selector: (state: ExtractState<S>) => U,
-    equalityFn: (a: U, b: U) => boolean,
-  ): U
-  /**
-   * @deprecated Use `useStore` hook to bind store
-   */
-  <S extends StoreApi<unknown>>(store: S): UseBoundStore<S>
-  if (
-    import.meta.env?.MODE !== 'production' &&
-    typeof createState !== 'function'
-  ) {
-    console.warn(
-      ""[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`."",
-    )
-  }
-  const api =
-    typeof createState === 'function' ? createStore(createState) : createState
+  const api = createStore(createState)
-  const useBoundStore: any = (selector?: any, equalityFn?: any) =>
-    useStore(api, selector, equalityFn)
+  const useBoundStore: any = (selector?: any) => useStore(api, selector)
-
-/**
- * @deprecated Use `import { create } from 'zustand'`
- */
-export default ((createState: any) => {
-  if (import.meta.env?.MODE !== 'production') {
-    console.warn(
-      ""[DEPRECATED] Default export is deprecated. Instead use `import { create } from 'zustand'`."",
-    )
-  }
-  return create(createState)
-}) as Create"
pmndrs_zustand,be31b53560336d9174b9b6c1af1d0ba0aeb11869,Merge branch 'main' into v5,src/vanilla.ts,"-  /**
-   * @deprecated Use `unsubscribe` returned by `subscribe`
-   */
-  destroy: () => void
-  const destroy: StoreApi<TState>['destroy'] = () => {
-    if (import.meta.env?.MODE !== 'production') {
-      console.warn(
-        '[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected.',
-      )
-    }
-    listeners.clear()
-  }
-
-  const api = { setState, getState, subscribe, destroy }
+  const api = { setState, getState, subscribe }
-
-/**
- * @deprecated Use `import { createStore } from 'zustand/vanilla'`
- */
-export default ((createState) => {
-  if (import.meta.env?.MODE !== 'production') {
-    console.warn(
-      ""[DEPRECATED] Default export is deprecated. Instead use import { createStore } from 'zustand/vanilla'."",
-    )
-  }
-  return createStore(createState)
-}) as CreateStore
-
-// ---------------------------------------------------------
-
-/**
- * @deprecated Use `unknown` instead of `State`
- */
-export type State = unknown
-
-/**
- * @deprecated Use `Partial<T> | ((s: T) => Partial<T>)` instead of `PartialState<T>`
- */
-export type PartialState<T extends State> =
-  | Partial<T>
-  | ((state: T) => Partial<T>)
-
-/**
- * @deprecated Use `(s: T) => U` instead of `StateSelector<T, U>`
- */
-export type StateSelector<T extends State, U> = (state: T) => U
-
-/**
- * @deprecated Use `(a: T, b: T) => boolean` instead of `EqualityChecker<T>`
- */
-export type EqualityChecker<T> = (state: T, newState: T) => boolean
-
-/**
- * @deprecated Use `(state: T, previousState: T) => void` instead of `StateListener<T>`
- */
-export type StateListener<T> = (state: T, previousState: T) => void
-
-/**
- * @deprecated Use `(slice: T, previousSlice: T) => void` instead of `StateSliceListener<T>`.
- */
-export type StateSliceListener<T> = (slice: T, previousSlice: T) => void
-
-/**
- * @deprecated Use `(listener: (state: T) => void) => void` instead of `Subscribe<T>`.
- */
-export type Subscribe<T extends State> = {
-  (listener: (state: T, previousState: T) => void): () => void
-}
-
-/**
- * @deprecated You might be looking for `StateCreator`, if not then
- * use `StoreApi<T>['setState']` instead of `SetState<T>`.
- */
-export type SetState<T extends State> = {
-  _(
-    partial: T | Partial<T> | { _(state: T): T | Partial<T> }['_'],
-    replace?: boolean | undefined,
-  ): void
-}['_']
-
-/**
- * @deprecated You might be looking for `StateCreator`, if not then
- * use `StoreApi<T>['getState']` instead of `GetState<T>`.
- */
-export type GetState<T extends State> = () => T
-
-/**
- * @deprecated Use `StoreApi<T>['destroy']` instead of `Destroy`.
- */
-export type Destroy = () => void","+  getInitialState: () => T
+  const getInitialState: StoreApi<TState>['getInitialState'] = () =>
+    initialState
+
-  const api = { setState, getState, subscribe, destroy }
-  state = createState(setState, getState, api)
+  const api = { setState, getState, getInitialState, subscribe, destroy }
+  const initialState = (state = createState(setState, getState, api))","+  getInitialState: () => T
-  /**
-   * @deprecated Use `unsubscribe` returned by `subscribe`
-   */
-  destroy: () => void
+  const getInitialState: StoreApi<TState>['getInitialState'] = () =>
+    initialState
+
-  const destroy: StoreApi<TState>['destroy'] = () => {
-    if (import.meta.env?.MODE !== 'production') {
-      console.warn(
-        '[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected.',
-      )
-    }
-    listeners.clear()
-  }
-
-  const api = { setState, getState, subscribe, destroy }
-  state = createState(setState, getState, api)
+  const api = { setState, getState, getInitialState, subscribe }
+  const initialState = (state = createState(setState, getState, api))
-
-/**
- * @deprecated Use `import { createStore } from 'zustand/vanilla'`
- */
-export default ((createState) => {
-  if (import.meta.env?.MODE !== 'production') {
-    console.warn(
-      ""[DEPRECATED] Default export is deprecated. Instead use import { createStore } from 'zustand/vanilla'."",
-    )
-  }
-  return createStore(createState)
-}) as CreateStore
-
-// ---------------------------------------------------------
-
-/**
- * @deprecated Use `unknown` instead of `State`
- */
-export type State = unknown
-
-/**
- * @deprecated Use `Partial<T> | ((s: T) => Partial<T>)` instead of `PartialState<T>`
- */
-export type PartialState<T extends State> =
-  | Partial<T>
-  | ((state: T) => Partial<T>)
-
-/**
- * @deprecated Use `(s: T) => U` instead of `StateSelector<T, U>`
- */
-export type StateSelector<T extends State, U> = (state: T) => U
-
-/**
- * @deprecated Use `(a: T, b: T) => boolean` instead of `EqualityChecker<T>`
- */
-export type EqualityChecker<T> = (state: T, newState: T) => boolean
-
-/**
- * @deprecated Use `(state: T, previousState: T) => void` instead of `StateListener<T>`
- */
-export type StateListener<T> = (state: T, previousState: T) => void
-
-/**
- * @deprecated Use `(slice: T, previousSlice: T) => void` instead of `StateSliceListener<T>`.
- */
-export type StateSliceListener<T> = (slice: T, previousSlice: T) => void
-
-/**
- * @deprecated Use `(listener: (state: T) => void) => void` instead of `Subscribe<T>`.
- */
-export type Subscribe<T extends State> = {
-  (listener: (state: T, previousState: T) => void): () => void
-}
-
-/**
- * @deprecated You might be looking for `StateCreator`, if not then
- * use `StoreApi<T>['setState']` instead of `SetState<T>`.
- */
-export type SetState<T extends State> = {
-  _(
-    partial: T | Partial<T> | { _(state: T): T | Partial<T> }['_'],
-    replace?: boolean | undefined,
-  ): void
-}['_']
-
-/**
- * @deprecated You might be looking for `StateCreator`, if not then
- * use `StoreApi<T>['getState']` instead of `GetState<T>`.
- */
-export type GetState<T extends State> = () => T
-
-/**
- * @deprecated Use `StoreApi<T>['destroy']` instead of `Destroy`.
- */
-export type Destroy = () => void"
pmndrs_zustand,be31b53560336d9174b9b6c1af1d0ba0aeb11869,Merge branch 'main' into v5,tests/basic.test.tsx,"-          ""destroy"": [Function],
-it('can destroy the store', () => {
-  const { destroy, getState, setState, subscribe } = create(() => ({
-    value: 1,
-  }))
-
-  subscribe(() => {
-    throw new Error('did not clear listener on destroy')
-  })
-  destroy()
-
-  setState({ value: 2 })
-  expect(getState().value).toEqual(2)
-})
-","+          ""getInitialState"": [Function],","-          ""destroy"": [Function],
+          ""getInitialState"": [Function],
-it('can destroy the store', () => {
-  const { destroy, getState, setState, subscribe } = create(() => ({
-    value: 1,
-  }))
-
-  subscribe(() => {
-    throw new Error('did not clear listener on destroy')
-  })
-  destroy()
-
-  setState({ value: 2 })
-  expect(getState().value).toEqual(2)
-})
-"
pmndrs_zustand,be31b53560336d9174b9b6c1af1d0ba0aeb11869,Merge branch 'main' into v5,tests/vanilla/basic.test.ts,"-          ""destroy"": [Function],
-        ""destroy"": [Function],
-
-it('can destroy the store', () => {
-  const { destroy, getState, setState, subscribe } = createStore(() => ({
-    value: 1,
-  }))
-
-  subscribe(() => {
-    throw new Error('did not clear listener on destroy')
-  })
-  destroy()
-
-  setState({ value: 2 })
-  expect(getState().value).toEqual(2)
-})","-   {
+    {
+          ""getInitialState"": [Function],
+        ""getInitialState"": [Function],","-   {
+    {
-          ""destroy"": [Function],
+          ""getInitialState"": [Function],
-        ""destroy"": [Function],
+        ""getInitialState"": [Function],
-
-it('can destroy the store', () => {
-  const { destroy, getState, setState, subscribe } = createStore(() => ({
-    value: 1,
-  }))
-
-  subscribe(() => {
-    throw new Error('did not clear listener on destroy')
-  })
-  destroy()
-
-  setState({ value: 2 })
-  expect(getState().value).toEqual(2)
-})"
pmndrs_zustand,105bc570d26dcb70d9cd392336d5722387b88b19,Merge branch 'main' into v5,package.json,"+  ""publishConfig"": {
+    ""tag"": ""next""
+  },","-    ""immer"": "">=9.0"",
+    ""immer"": "">=9.0.6"",
+    ""@types/react"": {
+      ""optional"": true
+    },
-      ""optional"": true
-    },
-    ""@types/react"": {","+  ""publishConfig"": {
+    ""tag"": ""next""
+  },
-    ""immer"": "">=9.0"",
+    ""immer"": "">=9.0.6"",
+    ""@types/react"": {
+      ""optional"": true
+    },
-      ""optional"": true
-    },
-    ""@types/react"": {"
pmndrs_zustand,39928ef973b1f99a1c4202e0d740d3b676803fd6,Merge branch 'main' into v5,package.json,"+  ""publishConfig"": {
+    ""tag"": ""next""
+  },","-  ""version"": ""4.4.6"",
+  ""version"": ""4.4.7"",
-    ""@babel/core"": ""^7.23.2"",
-    ""@babel/plugin-external-helpers"": ""^7.22.5"",
-    ""@babel/plugin-transform-react-jsx"": ""^7.22.15"",
-    ""@babel/plugin-transform-runtime"": ""^7.23.2"",
-    ""@babel/plugin-transform-typescript"": ""^7.22.15"",
-    ""@babel/preset-env"": ""^7.23.2"",
-    ""@redux-devtools/extension"": ""^3.2.5"",
-    ""@rollup/plugin-alias"": ""^5.0.1"",
+    ""@babel/core"": ""^7.23.3"",
+    ""@babel/plugin-external-helpers"": ""^7.23.3"",
+    ""@babel/plugin-transform-react-jsx"": ""^7.23.4"",
+    ""@babel/plugin-transform-runtime"": ""^7.23.4"",
+    ""@babel/plugin-transform-typescript"": ""^7.23.4"",
+    ""@babel/preset-env"": ""^7.23.3"",
+    ""@redux-devtools/extension"": ""^3.2.6"",
+    ""@rollup/plugin-alias"": ""^5.1.0"",
-    ""@testing-library/react"": ""^14.0.0"",
-    ""@types/react"": ""^18.2.33"",
-    ""@types/react-dom"": ""^18.2.14"",
-    ""@types/use-sync-external-store"": ""^0.0.5"",
-    ""@typescript-eslint/eslint-plugin"": ""^6.9.1"",
-    ""@typescript-eslint/parser"": ""^6.9.1"",
-    ""@vitest/coverage-c8"": ""^0.33.0"",
+    ""@testing-library/react"": ""^14.1.2"",
+    ""@types/react"": ""^18.2.39"",
+    ""@types/react-dom"": ""^18.2.17"",
+    ""@types/use-sync-external-store"": ""^0.0.6"",
+    ""@typescript-eslint/eslint-plugin"": ""^6.13.0"",
+    ""@typescript-eslint/parser"": ""^6.13.0"",
+    ""@vitest/coverage-v8"": ""^0.34.6"",
-    ""esbuild"": ""^0.19.5"",
-    ""eslint"": ""^8.52.0"",
+    ""esbuild"": ""^0.19.8"",
+    ""eslint"": ""^8.54.0"",
-    ""eslint-plugin-vitest"": ""^0.3.8"",
+    ""eslint-plugin-vitest"": ""^0.3.10"",
-    ""jsdom"": ""^22.1.0"",
+    ""jsdom"": ""^23.0.0"",
-    ""prettier"": ""^3.0.3"",
+    ""prettier"": ""^3.1.0"",
-    ""rollup"": ""^4.2.0"",
+    ""rollup"": ""^4.6.0"",
-    ""typescript"": ""^5.2.2"",
+    ""typescript"": ""^5.3.2"",
+  },
+  ""resolutions"": {
+    ""vite"": ""4.5.0""","-  ""version"": ""4.4.6"",
+  ""version"": ""4.4.7"",
+  ""publishConfig"": {
+    ""tag"": ""next""
+  },
-    ""@babel/core"": ""^7.23.2"",
-    ""@babel/plugin-external-helpers"": ""^7.22.5"",
-    ""@babel/plugin-transform-react-jsx"": ""^7.22.15"",
-    ""@babel/plugin-transform-runtime"": ""^7.23.2"",
-    ""@babel/plugin-transform-typescript"": ""^7.22.15"",
-    ""@babel/preset-env"": ""^7.23.2"",
-    ""@redux-devtools/extension"": ""^3.2.5"",
-    ""@rollup/plugin-alias"": ""^5.0.1"",
+    ""@babel/core"": ""^7.23.3"",
+    ""@babel/plugin-external-helpers"": ""^7.23.3"",
+    ""@babel/plugin-transform-react-jsx"": ""^7.23.4"",
+    ""@babel/plugin-transform-runtime"": ""^7.23.4"",
+    ""@babel/plugin-transform-typescript"": ""^7.23.4"",
+    ""@babel/preset-env"": ""^7.23.3"",
+    ""@redux-devtools/extension"": ""^3.2.6"",
+    ""@rollup/plugin-alias"": ""^5.1.0"",
-    ""@testing-library/react"": ""^14.0.0"",
-    ""@types/react"": ""^18.2.33"",
-    ""@types/react-dom"": ""^18.2.14"",
-    ""@types/use-sync-external-store"": ""^0.0.5"",
-    ""@typescript-eslint/eslint-plugin"": ""^6.9.1"",
-    ""@typescript-eslint/parser"": ""^6.9.1"",
-    ""@vitest/coverage-c8"": ""^0.33.0"",
+    ""@testing-library/react"": ""^14.1.2"",
+    ""@types/react"": ""^18.2.39"",
+    ""@types/react-dom"": ""^18.2.17"",
+    ""@types/use-sync-external-store"": ""^0.0.6"",
+    ""@typescript-eslint/eslint-plugin"": ""^6.13.0"",
+    ""@typescript-eslint/parser"": ""^6.13.0"",
+    ""@vitest/coverage-v8"": ""^0.34.6"",
-    ""esbuild"": ""^0.19.5"",
-    ""eslint"": ""^8.52.0"",
+    ""esbuild"": ""^0.19.8"",
+    ""eslint"": ""^8.54.0"",
-    ""eslint-plugin-vitest"": ""^0.3.8"",
+    ""eslint-plugin-vitest"": ""^0.3.10"",
-    ""jsdom"": ""^22.1.0"",
+    ""jsdom"": ""^23.0.0"",
-    ""prettier"": ""^3.0.3"",
+    ""prettier"": ""^3.1.0"",
-    ""rollup"": ""^4.2.0"",
+    ""rollup"": ""^4.6.0"",
-    ""typescript"": ""^5.2.2"",
+    ""typescript"": ""^5.3.2"",
+  },
+  ""resolutions"": {
+    ""vite"": ""4.5.0"""
pmndrs_zustand,abbc74025a7798c3c03f499dca3ed9cfc95ef13a,Merge branch 'main' into v5,package.json,"+  ""publishConfig"": {
+    ""tag"": ""next""
+  },","-    ""trailingComma"": ""es5"",
-    ""singleQuote"": true,
-    ""bracketSameLine"": true,
-    ""tabWidth"": 2,
-    ""printWidth"": 80
+    ""singleQuote"": true","+  ""publishConfig"": {
+    ""tag"": ""next""
+  },
-    ""trailingComma"": ""es5"",
-    ""singleQuote"": true,
-    ""bracketSameLine"": true,
-    ""tabWidth"": 2,
-    ""printWidth"": 80
+    ""singleQuote"": true"
pmndrs_zustand,aaa5c21fc5ddb7ca336217537a0a49dd09002c10,Merge branch 'main' into v5,package.json,"+  ""publishConfig"": {
+    ""tag"": ""next""
+  },","-  ""version"": ""4.4.5"",
+  ""version"": ""4.4.6"",
-        ""types"": ""./index.d.ts"",
+        ""types"": ""./esm/index.d.ts"",
-      ""types"": ""./vanilla.d.ts"",
-      ""module"": ""./esm/vanilla.js"",
-      ""default"": ""./vanilla.js""
+      ""module"": {
+        ""types"": ""./esm/vanilla.d.ts"",
+        ""default"": ""./esm/vanilla.js""
+      },
+      ""default"": {
+        ""types"": ""./vanilla.d.ts"",
+        ""default"": ""./vanilla.js""
+      }
-      ""types"": ""./middleware.d.ts"",
-      ""module"": ""./esm/middleware.js"",
-      ""default"": ""./middleware.js""
+      ""module"": {
+        ""types"": ""./esm/middleware.d.ts"",
+        ""default"": ""./esm/middleware.js""
+      },
+      ""default"": {
+        ""types"": ""./middleware.d.ts"",
+        ""default"": ""./middleware.js""
+      }
-      ""types"": ""./middleware/immer.d.ts"",
-      ""module"": ""./esm/middleware/immer.js"",
-      ""default"": ""./middleware/immer.js""
+      ""module"": {
+        ""types"": ""./esm/middleware/immer.d.ts"",
+        ""default"": ""./esm/middleware/immer.js""
+      },
+      ""default"": {
+        ""types"": ""./middleware/immer.d.ts"",
+        ""default"": ""./middleware/immer.js""
+      }
-      ""types"": ""./shallow.d.ts"",
-      ""module"": ""./esm/shallow.js"",
-      ""default"": ""./shallow.js""
+      ""module"": {
+        ""types"": ""./esm/shallow.d.ts"",
+        ""default"": ""./esm/shallow.js""
+      },
+      ""default"": {
+        ""types"": ""./shallow.d.ts"",
+        ""default"": ""./shallow.js""
+      }
-      ""types"": ""./vanilla/shallow.d.ts"",
-      ""module"": ""./esm/vanilla/shallow.js"",
-      ""default"": ""./vanilla/shallow.js""
+      ""module"": {
+        ""types"": ""./esm/vanilla/shallow.d.ts"",
+        ""default"": ""./esm/vanilla/shallow.js""
+      },
+      ""default"": {
+        ""types"": ""./vanilla/shallow.d.ts"",
+        ""default"": ""./vanilla/shallow.js""
+      }
-      ""types"": ""./react/shallow.d.ts"",
-      ""module"": ""./esm/react/shallow.js"",
-      ""default"": ""./react/shallow.js""
+      ""module"": {
+        ""types"": ""./esm/react/shallow.d.ts"",
+        ""default"": ""./esm/react/shallow.js""
+      },
+      ""default"": {
+        ""types"": ""./react/shallow.d.ts"",
+        ""default"": ""./react/shallow.js""
+      }
-      ""types"": ""./traditional.d.ts"",
-      ""module"": ""./esm/traditional.js"",
-      ""default"": ""./traditional.js""
+      ""module"": {
+        ""types"": ""./esm/traditional.d.ts"",
+        ""default"": ""./esm/traditional.js""
+      },
+      ""default"": {
+        ""types"": ""./traditional.d.ts"",
+        ""default"": ""./traditional.js""
+      }
-      ""types"": ""./context.d.ts"",
-      ""module"": ""./esm/context.js"",
-      ""default"": ""./context.js""
+      ""module"": {
+        ""types"": ""./esm/context.d.ts"",
+        ""default"": ""./esm/context.js""
+      },
+      ""default"": {
+        ""types"": ""./context.d.ts"",
+        ""default"": ""./context.js""
+      }","-  ""version"": ""4.4.5"",
+  ""version"": ""4.4.6"",
+  ""publishConfig"": {
+    ""tag"": ""next""
+  },
-        ""types"": ""./index.d.ts"",
+        ""types"": ""./esm/index.d.ts"",
-      ""types"": ""./vanilla.d.ts"",
-      ""module"": ""./esm/vanilla.js"",
-      ""default"": ""./vanilla.js""
+      ""module"": {
+        ""types"": ""./esm/vanilla.d.ts"",
+        ""default"": ""./esm/vanilla.js""
+      },
+      ""default"": {
+        ""types"": ""./vanilla.d.ts"",
+        ""default"": ""./vanilla.js""
+      }
-      ""types"": ""./middleware.d.ts"",
-      ""module"": ""./esm/middleware.js"",
-      ""default"": ""./middleware.js""
+      ""module"": {
+        ""types"": ""./esm/middleware.d.ts"",
+        ""default"": ""./esm/middleware.js""
+      },
+      ""default"": {
+        ""types"": ""./middleware.d.ts"",
+        ""default"": ""./middleware.js""
+      }
-      ""types"": ""./middleware/immer.d.ts"",
-      ""module"": ""./esm/middleware/immer.js"",
-      ""default"": ""./middleware/immer.js""
+      ""module"": {
+        ""types"": ""./esm/middleware/immer.d.ts"",
+        ""default"": ""./esm/middleware/immer.js""
+      },
+      ""default"": {
+        ""types"": ""./middleware/immer.d.ts"",
+        ""default"": ""./middleware/immer.js""
+      }
-      ""types"": ""./shallow.d.ts"",
-      ""module"": ""./esm/shallow.js"",
-      ""default"": ""./shallow.js""
+      ""module"": {
+        ""types"": ""./esm/shallow.d.ts"",
+        ""default"": ""./esm/shallow.js""
+      },
+      ""default"": {
+        ""types"": ""./shallow.d.ts"",
+        ""default"": ""./shallow.js""
+      }
-      ""types"": ""./vanilla/shallow.d.ts"",
-      ""module"": ""./esm/vanilla/shallow.js"",
-      ""default"": ""./vanilla/shallow.js""
+      ""module"": {
+        ""types"": ""./esm/vanilla/shallow.d.ts"",
+        ""default"": ""./esm/vanilla/shallow.js""
+      },
+      ""default"": {
+        ""types"": ""./vanilla/shallow.d.ts"",
+        ""default"": ""./vanilla/shallow.js""
+      }
-      ""types"": ""./react/shallow.d.ts"",
-      ""module"": ""./esm/react/shallow.js"",
-      ""default"": ""./react/shallow.js""
+      ""module"": {
+        ""types"": ""./esm/react/shallow.d.ts"",
+        ""default"": ""./esm/react/shallow.js""
+      },
+      ""default"": {
+        ""types"": ""./react/shallow.d.ts"",
+        ""default"": ""./react/shallow.js""
+      }
-      ""types"": ""./traditional.d.ts"",
-      ""module"": ""./esm/traditional.js"",
-      ""default"": ""./traditional.js""
+      ""module"": {
+        ""types"": ""./esm/traditional.d.ts"",
+        ""default"": ""./esm/traditional.js""
+      },
+      ""default"": {
+        ""types"": ""./traditional.d.ts"",
+        ""default"": ""./traditional.js""
+      }
-      ""types"": ""./context.d.ts"",
-      ""module"": ""./esm/context.js"",
-      ""default"": ""./context.js""
+      ""module"": {
+        ""types"": ""./esm/context.d.ts"",
+        ""default"": ""./esm/context.js""
+      },
+      ""default"": {
+        ""types"": ""./context.d.ts"",
+        ""default"": ""./context.js""
+      }"
pmndrs_zustand,10466abe480f055565db878850a7dfb3080f1449,Merge branch 'main' into v5,package.json,"+  ""publishConfig"": {
+    ""tag"": ""next""
+  },","-  ""version"": ""4.4.4"",
+  ""version"": ""4.4.5"",
-      ""types"": ""./index.d.ts"",
-      ""module"": ""./esm/index.js"",
-      ""default"": ""./index.js""
+      ""module"": {
+        ""types"": ""./index.d.ts"",
+        ""default"": ""./esm/index.js""
+      },
+      ""default"": {
+        ""types"": ""./index.d.ts"",
+        ""default"": ""./index.js""
+      }
-    ""@rollup/plugin-replace"": ""^5.0.4"",
+    ""@rollup/plugin-replace"": ""^5.0.5"",
-    ""@types/react"": ""^18.2.31"",
+    ""@types/react"": ""^18.2.33"",
-    ""@typescript-eslint/eslint-plugin"": ""^6.8.0"",
-    ""@typescript-eslint/parser"": ""^6.8.0"",
+    ""@typescript-eslint/eslint-plugin"": ""^6.9.1"",
+    ""@typescript-eslint/parser"": ""^6.9.1"",
-    ""eslint-plugin-import"": ""^2.28.1"",
+    ""eslint-plugin-import"": ""^2.29.0"",
-    ""eslint-plugin-vitest"": ""^0.3.3"",
+    ""eslint-plugin-vitest"": ""^0.3.8"",
-    ""rollup"": ""^4.1.4"",
+    ""rollup"": ""^4.2.0"",","-  ""version"": ""4.4.4"",
+  ""version"": ""4.4.5"",
+  ""publishConfig"": {
+    ""tag"": ""next""
+  },
-      ""types"": ""./index.d.ts"",
-      ""module"": ""./esm/index.js"",
-      ""default"": ""./index.js""
+      ""module"": {
+        ""types"": ""./index.d.ts"",
+        ""default"": ""./esm/index.js""
+      },
+      ""default"": {
+        ""types"": ""./index.d.ts"",
+        ""default"": ""./index.js""
+      }
-    ""@rollup/plugin-replace"": ""^5.0.4"",
+    ""@rollup/plugin-replace"": ""^5.0.5"",
-    ""@types/react"": ""^18.2.31"",
+    ""@types/react"": ""^18.2.33"",
-    ""@typescript-eslint/eslint-plugin"": ""^6.8.0"",
-    ""@typescript-eslint/parser"": ""^6.8.0"",
+    ""@typescript-eslint/eslint-plugin"": ""^6.9.1"",
+    ""@typescript-eslint/parser"": ""^6.9.1"",
-    ""eslint-plugin-import"": ""^2.28.1"",
+    ""eslint-plugin-import"": ""^2.29.0"",
-    ""eslint-plugin-vitest"": ""^0.3.3"",
+    ""eslint-plugin-vitest"": ""^0.3.8"",
-    ""rollup"": ""^4.1.4"",
+    ""rollup"": ""^4.2.0"","
pmndrs_zustand,4675a5089a15c92fb5d1eb1e3f8f1820aaed0856,Merge pull request #167 from react-spring/fix-devtools-and-type-middleware  fix devtools and type middleware properly,.size-snapshot.json,"-    ""bundled"": 3974,
-    ""minified"": 1304,
-    ""gzipped"": 642,
+    ""bundled"": 4173,
+    ""minified"": 1360,
+    ""gzipped"": 672,
-    ""bundled"": 5287,
-    ""minified"": 2019,
-    ""gzipped"": 859
+    ""bundled"": 5494,
+    ""minified"": 2072,
+    ""gzipped"": 886
-    ""bundled"": 5530,
-    ""minified"": 1695,
-    ""gzipped"": 763
+    ""bundled"": 5747,
+    ""minified"": 1757,
+    ""gzipped"": 795","-    ""bundled"": 2039,
-    ""minified"": 1207,
-    ""gzipped"": 610
+    ""bundled"": 2088,
+    ""minified"": 1231,
+    ""gzipped"": 628","-    ""bundled"": 3974,
-    ""minified"": 1304,
-    ""gzipped"": 642,
+    ""bundled"": 4173,
+    ""minified"": 1360,
+    ""gzipped"": 672,
-    ""bundled"": 5287,
-    ""minified"": 2019,
-    ""gzipped"": 859
+    ""bundled"": 5494,
+    ""minified"": 2072,
+    ""gzipped"": 886
-    ""bundled"": 5530,
-    ""minified"": 1695,
-    ""gzipped"": 763
+    ""bundled"": 5747,
+    ""minified"": 1757,
+    ""gzipped"": 795
-    ""bundled"": 2039,
-    ""minified"": 1207,
-    ""gzipped"": 610
+    ""bundled"": 2088,
+    ""minified"": 1231,
+    ""gzipped"": 628"
pmndrs_zustand,c29568a1ceb3409a9b0c09882b5e88ff553f826e,resolve merge conflict,package.json,"-  ""version"": ""0.0.5"",
+  ""version"": ""0.0.6"",","-  ""version"": ""0.0.5"",
+  ""version"": ""0.1.0"",
-  ""main"": ""dist/index.cjs.js"",
-  ""module"": ""dist/index.js"",
+  ""main"": ""dist/cjs/index.js"",
+  ""module"": ""dist/esm/index.js"",
+  ""files"": [
+    ""dist/**""
+  ],
-    ""prepare"": ""npm run build"",
+    ""prepare"": ""npm run build --scripts-prepend-node-path"",
-      ""src/**/*.js"",
-      ""tests/**/*.js""
+      ""src/**/*.{js,ts,tsx}"",
+      ""tests/**/*.{js,ts,tsx}""
-    ""@babel/core"": ""7.3.4"",
-    ""@babel/plugin-transform-modules-commonjs"": ""7.2.0"",
-    ""@babel/plugin-transform-parameters"": ""7.3.3"",
-    ""@babel/plugin-transform-runtime"": ""7.3.4"",
-    ""@babel/plugin-transform-template-literals"": ""7.2.0"",
-    ""@babel/preset-env"": ""7.3.4"",
-    ""@babel/preset-react"": ""7.0.0"",
-    ""@babel/preset-typescript"": ""^7.3.3"",
+    ""@babel/core"": ""^7.4.3"",
+    ""@babel/plugin-transform-modules-commonjs"": ""^7.4.3"",
+    ""@babel/plugin-transform-react-jsx"": ""^7.3.0"",
+    ""@babel/plugin-transform-typescript"": ""^7.4.0"",
+    ""@babel/preset-env"": ""^7.4.3"",
+    ""@types/jest"": ""^24.0.11"",
+    ""@types/react"": ""^16.8.13"",
-    ""prettier"": ""^1.16.4"",
+    ""prettier"": ""^1.17.0"",
-    ""rollup"": ""^1.9.0"",
+    ""rollup"": ""^1.10.0"",
-    ""rollup-plugin-node-resolve"": ""^4.2.1"",
+    ""rollup-plugin-node-resolve"": ""^4.2.3"",
-    ""typescript"": ""^3.4.2""
+    ""rollup-plugin-typescript2"": ""^0.20.1"",
+    ""typescript"": ""^3.4.3""","-  ""version"": ""0.0.5"",
+  ""version"": ""0.1.0"",
-  ""main"": ""dist/index.cjs.js"",
-  ""module"": ""dist/index.js"",
+  ""main"": ""dist/cjs/index.js"",
+  ""module"": ""dist/esm/index.js"",
+  ""files"": [
+    ""dist/**""
+  ],
-    ""prepare"": ""npm run build"",
+    ""prepare"": ""npm run build --scripts-prepend-node-path"",
-      ""src/**/*.js"",
-      ""tests/**/*.js""
+      ""src/**/*.{js,ts,tsx}"",
+      ""tests/**/*.{js,ts,tsx}""
-    ""@babel/core"": ""7.3.4"",
-    ""@babel/plugin-transform-modules-commonjs"": ""7.2.0"",
-    ""@babel/plugin-transform-parameters"": ""7.3.3"",
-    ""@babel/plugin-transform-runtime"": ""7.3.4"",
-    ""@babel/plugin-transform-template-literals"": ""7.2.0"",
-    ""@babel/preset-env"": ""7.3.4"",
-    ""@babel/preset-react"": ""7.0.0"",
-    ""@babel/preset-typescript"": ""^7.3.3"",
+    ""@babel/core"": ""^7.4.3"",
+    ""@babel/plugin-transform-modules-commonjs"": ""^7.4.3"",
+    ""@babel/plugin-transform-react-jsx"": ""^7.3.0"",
+    ""@babel/plugin-transform-typescript"": ""^7.4.0"",
+    ""@babel/preset-env"": ""^7.4.3"",
+    ""@types/jest"": ""^24.0.11"",
+    ""@types/react"": ""^16.8.13"",
-    ""prettier"": ""^1.16.4"",
+    ""prettier"": ""^1.17.0"",
-    ""rollup"": ""^1.9.0"",
+    ""rollup"": ""^1.10.0"",
-    ""rollup-plugin-node-resolve"": ""^4.2.1"",
+    ""rollup-plugin-node-resolve"": ""^4.2.3"",
-    ""typescript"": ""^3.4.2""
+    ""rollup-plugin-typescript2"": ""^0.20.1"",
+    ""typescript"": ""^3.4.3"""
